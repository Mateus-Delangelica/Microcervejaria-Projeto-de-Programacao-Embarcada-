

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Wed Dec 16 09:59:33 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    39                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    41  0000                     
    42                           ; Version 2.20
    43                           ; Generated 12/02/2020 GMT
    44                           ; 
    45                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC18F4520 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     
    77                           	psect	idataCOMRAM
    78  003B7C                     __pidataCOMRAM:
    79                           	callstack 0
    80                           
    81                           ;initializer for _vlr
    82  003B7C  1A2C               	dw	6700
    83                           
    84                           ;initializer for _i
    85  003B7E  0001               	dw	1
    86                           
    87                           ;initializer for _valor
    88  003B80  10CC               	dw	4300
    89                           
    90                           	psect	smallconst
    91  000600                     __psmallconst:
    92                           	callstack 0
    93  000600  00                 	db	0
    94  000601                     _valor@ssd$F432:
    95                           	callstack 0
    96  000601  3F                 	db	63
    97  000602  06                 	db	6
    98  000603  5B                 	db	91
    99  000604  4F                 	db	79
   100  000605  66                 	db	102
   101  000606  6D                 	db	109
   102  000607  7D                 	db	125
   103  000608  07                 	db	7
   104  000609  7F                 	db	127
   105  00060A  6F                 	db	111
   106  00060B  77                 	db	119
   107  00060C  7C                 	db	124
   108  00060D  39                 	db	57
   109  00060E  5E                 	db	94
   110  00060F  79                 	db	121
   111  000610  71                 	db	113
   112  000611  63                 	db	99
   113  000612  00                 	db	0
   114  000613                     __end_of_valor@ssd$F432:
   115                           	callstack 0
   116  0000                     _T0CON	set	4053
   117  0000                     _TMR0L	set	4054
   118  0000                     _TMR0H	set	4055
   119  0000                     _INTCON	set	4082
   120  0000                     _TRISE	set	3990
   121  0000                     _TRISD	set	3989
   122  0000                     _TRISC	set	3988
   123  0000                     _TRISB	set	3987
   124  0000                     _TRISA	set	3986
   125  0000                     _PORTE	set	3972
   126  0000                     _PORTD	set	3971
   127  0000                     _PORTC	set	3970
   128  0000                     _PORTB	set	3969
   129  0000                     _PORTA	set	3968
   130  0000                     _PORTCbits	set	3970
   131  0000                     _TRISCbits	set	3988
   132  0000                     _ADRESL	set	4035
   133  0000                     _ADRESH	set	4036
   134  0000                     _ADCON2	set	4032
   135  0000                     _ADCON0	set	4034
   136  000613  00                 	db	0	; dummy byte at the end
   137  0000                     
   138                           ; #config settings
   139                           
   140                           	psect	cinit
   141  003AC4                     __pcinit:
   142                           	callstack 0
   143  003AC4                     start_initialization:
   144                           	callstack 0
   145  003AC4                     __initialization:
   146                           	callstack 0
   147                           
   148                           ; Initialize objects allocated to COMRAM (6 bytes)
   149                           ; load TBLPTR registers with __pidataCOMRAM
   150  003AC4  0E7C               	movlw	low __pidataCOMRAM
   151  003AC6  6EF6               	movwf	tblptrl,c
   152  003AC8  0E3B               	movlw	high __pidataCOMRAM
   153  003ACA  6EF7               	movwf	tblptrh,c
   154  003ACC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   155  003ACE  6EF8               	movwf	tblptru,c
   156  003AD0  EE00  F031         	lfsr	0,__pdataCOMRAM
   157  003AD4  EE10 F006          	lfsr	1,6
   158  003AD8                     copy_data0:
   159  003AD8  0009               	tblrd		*+
   160  003ADA  CFF5 FFEE          	movff	tablat,postinc0
   161  003ADE  50E5               	movf	postdec1,w,c
   162  003AE0  50E1               	movf	fsr1l,w,c
   163  003AE2  E1FA               	bnz	copy_data0
   164                           
   165                           ; Clear objects allocated to COMRAM (25 bytes)
   166  003AE4  EE00  F001         	lfsr	0,__pbssCOMRAM
   167  003AE8  0E19               	movlw	25
   168  003AEA                     clear_0:
   169  003AEA  6AEE               	clrf	postinc0,c
   170  003AEC  06E8               	decf	wreg,f,c
   171  003AEE  E1FD               	bnz	clear_0
   172  003AF0                     end_of_initialization:
   173                           	callstack 0
   174  003AF0                     __end_of__initialization:
   175                           	callstack 0
   176  003AF0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   177  003AF2  6EF8               	movwf	tblptru,c
   178  003AF4  0100               	movlb	0
   179  003AF6  EF6E  F013         	goto	_main	;jump to C main() function
   180                           
   181                           	psect	bssCOMRAM
   182  000001                     __pbssCOMRAM:
   183                           	callstack 0
   184  000001                     _tmp:
   185                           	callstack 0
   186  000001                     	ds	2
   187  000003                     _time:
   188                           	callstack 0
   189  000003                     	ds	2
   190  000005                     _cont:
   191                           	callstack 0
   192  000005                     	ds	2
   193  000007                     _temp:
   194                           	callstack 0
   195  000007                     	ds	2
   196  000009                     kpDebounce@valorAntigo:
   197                           	callstack 0
   198  000009                     	ds	2
   199  00000B                     kpDebounce@valorNovo:
   200                           	callstack 0
   201  00000B                     	ds	2
   202  00000D                     _valor@keypad$F307:
   203                           	callstack 0
   204  00000D                     	ds	2
   205  00000F                     _cnt:
   206                           	callstack 0
   207  00000F                     	ds	2
   208  000011                     _limite:
   209                           	callstack 0
   210  000011                     	ds	2
   211  000013                     _v3:
   212                           	callstack 0
   213  000013                     	ds	1
   214  000014                     _v2:
   215                           	callstack 0
   216  000014                     	ds	1
   217  000015                     _v1:
   218                           	callstack 0
   219  000015                     	ds	1
   220  000016                     _v0:
   221                           	callstack 0
   222  000016                     	ds	1
   223  000017                     _display:
   224                           	callstack 0
   225  000017                     	ds	1
   226  000018                     kpDebounce@tempo:
   227                           	callstack 0
   228  000018                     	ds	1
   229  000019                     _slot:
   230                           	callstack 0
   231  000019                     	ds	1
   232                           
   233                           	psect	dataCOMRAM
   234  000031                     __pdataCOMRAM:
   235                           	callstack 0
   236  000031                     _vlr:
   237                           	callstack 0
   238  000031                     	ds	2
   239  000033                     _i:
   240                           	callstack 0
   241  000033                     	ds	2
   242  000035                     _valor:
   243                           	callstack 0
   244  000035                     	ds	2
   245                           
   246                           	psect	cstackCOMRAM
   247  00001A                     __pcstackCOMRAM:
   248                           	callstack 0
   249  00001A                     ??_kpDebounce:
   250  00001A                     ?_kpRead:
   251                           	callstack 0
   252  00001A                     ?___wmul:
   253                           	callstack 0
   254  00001A                     ?___lwdiv:
   255                           	callstack 0
   256  00001A                     Delay40us@i:
   257                           	callstack 0
   258  00001A                     atraso_ms@valor:
   259                           	callstack 0
   260  00001A                     digitalWrite@pin:
   261                           	callstack 0
   262  00001A                     pinMode@pin:
   263                           	callstack 0
   264  00001A                     ___wmul@multiplier:
   265                           	callstack 0
   266  00001A                     ___lwdiv@dividend:
   267                           	callstack 0
   268                           
   269                           ; 2 bytes @ 0x0
   270  00001A                     	ds	1
   271  00001B                     Delay2ms@i:
   272                           	callstack 0
   273                           
   274                           ; 1 bytes @ 0x1
   275  00001B                     	ds	1
   276  00001C                     atraso_ms@i:
   277                           	callstack 0
   278  00001C                     digitalWrite@value:
   279                           	callstack 0
   280  00001C                     pinMode@type:
   281                           	callstack 0
   282  00001C                     ___wmul@multiplicand:
   283                           	callstack 0
   284  00001C                     ___lwdiv@divisor:
   285                           	callstack 0
   286                           
   287                           ; 2 bytes @ 0x2
   288  00001C                     	ds	2
   289  00001E                     ??_pinMode:
   290  00001E                     ??_digitalWrite:
   291  00001E                     atraso_ms@j:
   292                           	callstack 0
   293  00001E                     ___wmul@product:
   294                           	callstack 0
   295  00001E                     ___lwdiv@quotient:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0x4
   299  00001E                     	ds	1
   300  00001F                     atraso_ms@k:
   301                           	callstack 0
   302  00001F                     kpDebounce@old_D:
   303                           	callstack 0
   304                           
   305                           ; 1 bytes @ 0x5
   306  00001F                     	ds	1
   307  000020                     ??_ssdUpdate:
   308  000020                     lcdCommand@old_D:
   309                           	callstack 0
   310  000020                     lcdData@valor:
   311                           	callstack 0
   312  000020                     ___lwdiv@counter:
   313                           	callstack 0
   314  000020                     kpDebounce@k:
   315                           	callstack 0
   316                           
   317                           ; 2 bytes @ 0x6
   318  000020                     	ds	1
   319  000021                     ??_pwmSet1:
   320  000021                     ??_pwmSet2:
   321  000021                     ?___lwmod:
   322                           	callstack 0
   323  000021                     lcdCommand@cmd:
   324                           	callstack 0
   325  000021                     lcdData@old_D:
   326                           	callstack 0
   327  000021                     ___lwmod@dividend:
   328                           	callstack 0
   329                           
   330                           ; 2 bytes @ 0x7
   331  000021                     	ds	1
   332  000022                     kpDebounce@j:
   333                           	callstack 0
   334                           
   335                           ; 1 bytes @ 0x8
   336  000022                     	ds	1
   337  000023                     kpDebounce@i:
   338                           	callstack 0
   339  000023                     pwmSet1@porcento:
   340                           	callstack 0
   341  000023                     pwmSet2@porcento:
   342                           	callstack 0
   343  000023                     ___lwmod@divisor:
   344                           	callstack 0
   345                           
   346                           ; 2 bytes @ 0x9
   347  000023                     	ds	1
   348  000024                     pwmSet1@val:
   349                           	callstack 0
   350  000024                     pwmSet2@val:
   351                           	callstack 0
   352                           
   353                           ; 2 bytes @ 0xA
   354  000024                     	ds	1
   355  000025                     ___lwmod@counter:
   356                           	callstack 0
   357                           
   358                           ; 1 bytes @ 0xB
   359  000025                     	ds	1
   360  000026                     ssdDigit@pos:
   361                           	callstack 0
   362  000026                     Teclado@t:
   363                           	callstack 0
   364  000026                     Tecl@t:
   365                           	callstack 0
   366                           
   367                           ; 2 bytes @ 0xC
   368  000026                     	ds	1
   369  000027                     ssdDigit@val:
   370                           	callstack 0
   371                           
   372                           ; 1 bytes @ 0xD
   373  000027                     	ds	1
   374  000028                     ??_amber_lager:
   375  000028                     ??_k_weissbier:
   376                           
   377                           ; 1 bytes @ 0xE
   378  000028                     	ds	2
   379  00002A                     k_weissbier@slot:
   380                           	callstack 0
   381  00002A                     amber_lager@slot:
   382                           	callstack 0
   383                           
   384                           ; 1 bytes @ 0x10
   385  00002A                     	ds	1
   386  00002B                     ??_escolha:
   387                           
   388                           ; 1 bytes @ 0x11
   389  00002B                     	ds	2
   390  00002D                     escolha@t:
   391                           	callstack 0
   392                           
   393                           ; 2 bytes @ 0x13
   394  00002D                     	ds	2
   395  00002F                     ??_main:
   396                           
   397                           ; 1 bytes @ 0x15
   398  00002F                     	ds	2
   399                           
   400 ;;
   401 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   402 ;;
   403 ;; *************** function _main *****************
   404 ;; Defined at:
   405 ;;		line 17 in file "main.c"
   406 ;; Parameters:    Size  Location     Type
   407 ;;		None
   408 ;; Auto vars:     Size  Location     Type
   409 ;;		None
   410 ;; Return value:  Size  Location     Type
   411 ;;                  1    wreg      void 
   412 ;; Registers used:
   413 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   414 ;; Tracked objects:
   415 ;;		On entry : 0/0
   416 ;;		On exit  : 0/0
   417 ;;		Unchanged: 0/0
   418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   419 ;;      Params:         0       0       0       0       0       0       0
   420 ;;      Locals:         0       0       0       0       0       0       0
   421 ;;      Temps:          2       0       0       0       0       0       0
   422 ;;      Totals:         2       0       0       0       0       0       0
   423 ;;Total ram usage:        2 bytes
   424 ;; Hardware stack levels required when called:    6
   425 ;; This function calls:
   426 ;;		_atraso_ms
   427 ;;		_escolha
   428 ;;		_kpDebounce
   429 ;;		_kpInit
   430 ;;		_lcdCommand
   431 ;;		_lcdData
   432 ;;		_lcdInit
   433 ;; This function is called by:
   434 ;;		Startup code after reset
   435 ;; This function uses a non-reentrant model
   436 ;;
   437                           
   438                           	psect	text0
   439  0026DC                     __ptext0:
   440                           	callstack 0
   441  0026DC                     _main:
   442                           	callstack 25
   443  0026DC                     
   444                           ;main.c: 20: lcdInit();
   445  0026DC  EC9B  F01B         	call	_lcdInit	;wreg free
   446                           
   447                           ;main.c: 21: kpInit();
   448  0026E0  ECB4  F01D         	call	_kpInit	;wreg free
   449                           
   450                           ;main.c: 25:     lcdCommand(0x01);
   451  0026E4  0E01               	movlw	1
   452  0026E6  EC5C  F01B         	call	_lcdCommand
   453                           
   454                           ;main.c: 26:     lcdCommand(0xC0);
   455  0026EA  0EC0               	movlw	192
   456  0026EC  EC5C  F01B         	call	_lcdCommand
   457                           
   458                           ;main.c: 28:     lcdData('-');
   459  0026F0  0E2D               	movlw	45
   460  0026F2  EC38  F01D         	call	_lcdData
   461                           
   462                           ;main.c: 29:     lcdData('-');
   463  0026F6  0E2D               	movlw	45
   464  0026F8  EC38  F01D         	call	_lcdData
   465                           
   466                           ;main.c: 30:     lcdData('-');
   467  0026FC  0E2D               	movlw	45
   468  0026FE  EC38  F01D         	call	_lcdData
   469                           
   470                           ;main.c: 31:     lcdData('-');
   471  002702  0E2D               	movlw	45
   472  002704  EC38  F01D         	call	_lcdData
   473                           
   474                           ;main.c: 32:     lcdData('-');
   475  002708  0E2D               	movlw	45
   476  00270A  EC38  F01D         	call	_lcdData
   477                           
   478                           ;main.c: 33:     lcdData('-');
   479  00270E  0E2D               	movlw	45
   480  002710  EC38  F01D         	call	_lcdData
   481                           
   482                           ;main.c: 34:     lcdData('-');
   483  002714  0E2D               	movlw	45
   484  002716  EC38  F01D         	call	_lcdData
   485                           
   486                           ;main.c: 35:     lcdData('-');
   487  00271A  0E2D               	movlw	45
   488  00271C  EC38  F01D         	call	_lcdData
   489                           
   490                           ;main.c: 36:     lcdData('-');
   491  002720  0E2D               	movlw	45
   492  002722  EC38  F01D         	call	_lcdData
   493                           
   494                           ;main.c: 37:     lcdData('-');
   495  002726  0E2D               	movlw	45
   496  002728  EC38  F01D         	call	_lcdData
   497                           
   498                           ;main.c: 38:     lcdData('-');
   499  00272C  0E2D               	movlw	45
   500  00272E  EC38  F01D         	call	_lcdData
   501                           
   502                           ;main.c: 39:     lcdData('-');
   503  002732  0E2D               	movlw	45
   504  002734  EC38  F01D         	call	_lcdData
   505                           
   506                           ;main.c: 40:     lcdData('-');
   507  002738  0E2D               	movlw	45
   508  00273A  EC38  F01D         	call	_lcdData
   509                           
   510                           ;main.c: 41:     lcdData('-');
   511  00273E  0E2D               	movlw	45
   512  002740  EC38  F01D         	call	_lcdData
   513                           
   514                           ;main.c: 42:     lcdData('-');
   515  002744  0E2D               	movlw	45
   516  002746  EC38  F01D         	call	_lcdData
   517                           
   518                           ;main.c: 43:     lcdData('-');
   519  00274A  0E2D               	movlw	45
   520  00274C  EC38  F01D         	call	_lcdData
   521                           
   522                           ;main.c: 45:     lcdCommand(0xA8);
   523  002750  0EA8               	movlw	168
   524  002752  EC5C  F01B         	call	_lcdCommand
   525                           
   526                           ;main.c: 46:     lcdData('M');
   527  002756  0E4D               	movlw	77
   528  002758  EC38  F01D         	call	_lcdData
   529                           
   530                           ;main.c: 47:     lcdData('I');
   531  00275C  0E49               	movlw	73
   532  00275E  EC38  F01D         	call	_lcdData
   533                           
   534                           ;main.c: 48:     lcdData('C');
   535  002762  0E43               	movlw	67
   536  002764  EC38  F01D         	call	_lcdData
   537                           
   538                           ;main.c: 49:     lcdData('R');
   539  002768  0E52               	movlw	82
   540  00276A  EC38  F01D         	call	_lcdData
   541                           
   542                           ;main.c: 50:     lcdData('O');
   543  00276E  0E4F               	movlw	79
   544  002770  EC38  F01D         	call	_lcdData
   545                           
   546                           ;main.c: 51:     lcdData('C');
   547  002774  0E43               	movlw	67
   548  002776  EC38  F01D         	call	_lcdData
   549                           
   550                           ;main.c: 52:     lcdData('E');
   551  00277A  0E45               	movlw	69
   552  00277C  EC38  F01D         	call	_lcdData
   553                           
   554                           ;main.c: 53:     lcdData('R');
   555  002780  0E52               	movlw	82
   556  002782  EC38  F01D         	call	_lcdData
   557                           
   558                           ;main.c: 54:     lcdData('V');
   559  002786  0E56               	movlw	86
   560  002788  EC38  F01D         	call	_lcdData
   561                           
   562                           ;main.c: 55:     lcdData('E');
   563  00278C  0E45               	movlw	69
   564  00278E  EC38  F01D         	call	_lcdData
   565                           
   566                           ;main.c: 56:     lcdData('J');
   567  002792  0E4A               	movlw	74
   568  002794  EC38  F01D         	call	_lcdData
   569                           
   570                           ;main.c: 57:     lcdData('A');
   571  002798  0E41               	movlw	65
   572  00279A  EC38  F01D         	call	_lcdData
   573                           
   574                           ;main.c: 58:     lcdData('R');
   575  00279E  0E52               	movlw	82
   576  0027A0  EC38  F01D         	call	_lcdData
   577                           
   578                           ;main.c: 59:     lcdData('I');
   579  0027A4  0E49               	movlw	73
   580  0027A6  EC38  F01D         	call	_lcdData
   581                           
   582                           ;main.c: 60:     lcdData('A');
   583  0027AA  0E41               	movlw	65
   584  0027AC  EC38  F01D         	call	_lcdData
   585                           
   586                           ;main.c: 62:     lcdCommand(0xD0);
   587  0027B0  0ED0               	movlw	208
   588  0027B2  EC5C  F01B         	call	_lcdCommand
   589                           
   590                           ;main.c: 63:     lcdData('-');
   591  0027B6  0E2D               	movlw	45
   592  0027B8  EC38  F01D         	call	_lcdData
   593                           
   594                           ;main.c: 64:     lcdData('-');
   595  0027BC  0E2D               	movlw	45
   596  0027BE  EC38  F01D         	call	_lcdData
   597                           
   598                           ;main.c: 65:     lcdData('-');
   599  0027C2  0E2D               	movlw	45
   600  0027C4  EC38  F01D         	call	_lcdData
   601                           
   602                           ;main.c: 66:     lcdData('-');
   603  0027C8  0E2D               	movlw	45
   604  0027CA  EC38  F01D         	call	_lcdData
   605                           
   606                           ;main.c: 67:     lcdData('-');
   607  0027CE  0E2D               	movlw	45
   608  0027D0  EC38  F01D         	call	_lcdData
   609                           
   610                           ;main.c: 68:     lcdData('-');
   611  0027D4  0E2D               	movlw	45
   612  0027D6  EC38  F01D         	call	_lcdData
   613                           
   614                           ;main.c: 69:     lcdData('-');
   615  0027DA  0E2D               	movlw	45
   616  0027DC  EC38  F01D         	call	_lcdData
   617                           
   618                           ;main.c: 70:     lcdData('-');
   619  0027E0  0E2D               	movlw	45
   620  0027E2  EC38  F01D         	call	_lcdData
   621                           
   622                           ;main.c: 71:     lcdData('-');
   623  0027E6  0E2D               	movlw	45
   624  0027E8  EC38  F01D         	call	_lcdData
   625                           
   626                           ;main.c: 72:     lcdData('-');
   627  0027EC  0E2D               	movlw	45
   628  0027EE  EC38  F01D         	call	_lcdData
   629                           
   630                           ;main.c: 73:     lcdData('-');
   631  0027F2  0E2D               	movlw	45
   632  0027F4  EC38  F01D         	call	_lcdData
   633                           
   634                           ;main.c: 74:     lcdData('-');
   635  0027F8  0E2D               	movlw	45
   636  0027FA  EC38  F01D         	call	_lcdData
   637                           
   638                           ;main.c: 75:     lcdData('-');
   639  0027FE  0E2D               	movlw	45
   640  002800  EC38  F01D         	call	_lcdData
   641                           
   642                           ;main.c: 76:     lcdData('-');
   643  002804  0E2D               	movlw	45
   644  002806  EC38  F01D         	call	_lcdData
   645                           
   646                           ;main.c: 77:     lcdData('-');
   647  00280A  0E2D               	movlw	45
   648  00280C  EC38  F01D         	call	_lcdData
   649                           
   650                           ;main.c: 78:     lcdData('-');
   651  002810  0E2D               	movlw	45
   652  002812  EC38  F01D         	call	_lcdData
   653                           
   654                           ;main.c: 79:     atraso_ms(2000);
   655  002816  0E07               	movlw	7
   656  002818  6E1B               	movwf	(atraso_ms@valor+1)^0,c
   657  00281A  0ED0               	movlw	208
   658  00281C  6E1A               	movwf	atraso_ms@valor^0,c
   659  00281E  ECAF  F01C         	call	_atraso_ms	;wreg free
   660  002822  EF1E  F015         	goto	l3136
   661  002826                     l3112:
   662                           
   663                           ;main.c: 89:     if(cnt==0){
   664  002826  500F               	movf	_cnt^0,w,c
   665  002828  1010               	iorwf	(_cnt+1)^0,w,c
   666  00282A  A4D8               	btfss	status,2,c
   667  00282C  EF1A  F014         	goto	u2491
   668  002830  EF1C  F014         	goto	u2490
   669  002834                     u2491:
   670  002834  EFAA  F014         	goto	l3118
   671  002838                     u2490:
   672  002838                     
   673                           ;main.c: 90:     lcdCommand(0x01);
   674  002838  0E01               	movlw	1
   675  00283A  EC5C  F01B         	call	_lcdCommand
   676                           
   677                           ;main.c: 91:     lcdCommand(0x83);
   678  00283E  0E83               	movlw	131
   679  002840  EC5C  F01B         	call	_lcdCommand
   680                           
   681                           ;main.c: 92:     lcdData('-');
   682  002844  0E2D               	movlw	45
   683  002846  EC38  F01D         	call	_lcdData
   684                           
   685                           ;main.c: 93:     lcdData('R');
   686  00284A  0E52               	movlw	82
   687  00284C  EC38  F01D         	call	_lcdData
   688                           
   689                           ;main.c: 94:     lcdData('E');
   690  002850  0E45               	movlw	69
   691  002852  EC38  F01D         	call	_lcdData
   692                           
   693                           ;main.c: 95:     lcdData('C');
   694  002856  0E43               	movlw	67
   695  002858  EC38  F01D         	call	_lcdData
   696                           
   697                           ;main.c: 96:     lcdData('E');
   698  00285C  0E45               	movlw	69
   699  00285E  EC38  F01D         	call	_lcdData
   700                           
   701                           ;main.c: 97:     lcdData('I');
   702  002862  0E49               	movlw	73
   703  002864  EC38  F01D         	call	_lcdData
   704                           
   705                           ;main.c: 98:     lcdData('T');
   706  002868  0E54               	movlw	84
   707  00286A  EC38  F01D         	call	_lcdData
   708                           
   709                           ;main.c: 99:     lcdData('A');
   710  00286E  0E41               	movlw	65
   711  002870  EC38  F01D         	call	_lcdData
   712                           
   713                           ;main.c: 100:     lcdData('S');
   714  002874  0E53               	movlw	83
   715  002876  EC38  F01D         	call	_lcdData
   716                           
   717                           ;main.c: 101:     lcdData('-');
   718  00287A  0E2D               	movlw	45
   719  00287C  EC38  F01D         	call	_lcdData
   720                           
   721                           ;main.c: 102:     lcdCommand(0xC0);
   722  002880  0EC0               	movlw	192
   723  002882  EC5C  F01B         	call	_lcdCommand
   724                           
   725                           ;main.c: 103:     lcdData('1');
   726  002886  0E31               	movlw	49
   727  002888  EC38  F01D         	call	_lcdData
   728                           
   729                           ;main.c: 104:     lcdData(0x00);
   730  00288C  0E00               	movlw	0
   731  00288E  EC38  F01D         	call	_lcdData
   732                           
   733                           ;main.c: 105:     lcdData('A');
   734  002892  0E41               	movlw	65
   735  002894  EC38  F01D         	call	_lcdData
   736                           
   737                           ;main.c: 106:     lcdData('M');
   738  002898  0E4D               	movlw	77
   739  00289A  EC38  F01D         	call	_lcdData
   740                           
   741                           ;main.c: 107:     lcdData('B');
   742  00289E  0E42               	movlw	66
   743  0028A0  EC38  F01D         	call	_lcdData
   744                           
   745                           ;main.c: 108:     lcdData('E');
   746  0028A4  0E45               	movlw	69
   747  0028A6  EC38  F01D         	call	_lcdData
   748                           
   749                           ;main.c: 109:     lcdData('R');
   750  0028AA  0E52               	movlw	82
   751  0028AC  EC38  F01D         	call	_lcdData
   752                           
   753                           ;main.c: 110:     lcdData(0x00);
   754  0028B0  0E00               	movlw	0
   755  0028B2  EC38  F01D         	call	_lcdData
   756                           
   757                           ;main.c: 111:     lcdData('L');
   758  0028B6  0E4C               	movlw	76
   759  0028B8  EC38  F01D         	call	_lcdData
   760                           
   761                           ;main.c: 112:     lcdData('A');
   762  0028BC  0E41               	movlw	65
   763  0028BE  EC38  F01D         	call	_lcdData
   764                           
   765                           ;main.c: 113:     lcdData('G');
   766  0028C2  0E47               	movlw	71
   767  0028C4  EC38  F01D         	call	_lcdData
   768                           
   769                           ;main.c: 114:     lcdData('E');
   770  0028C8  0E45               	movlw	69
   771  0028CA  EC38  F01D         	call	_lcdData
   772                           
   773                           ;main.c: 115:     lcdData('R');
   774  0028CE  0E52               	movlw	82
   775  0028D0  EC38  F01D         	call	_lcdData
   776                           
   777                           ;main.c: 116:     lcdCommand(0xA8);
   778  0028D4  0EA8               	movlw	168
   779  0028D6  EC5C  F01B         	call	_lcdCommand
   780                           
   781                           ;main.c: 117:     lcdData('2');
   782  0028DA  0E32               	movlw	50
   783  0028DC  EC38  F01D         	call	_lcdData
   784                           
   785                           ;main.c: 118:     lcdData(0x00);
   786  0028E0  0E00               	movlw	0
   787  0028E2  EC38  F01D         	call	_lcdData
   788                           
   789                           ;main.c: 119:     lcdData('K');
   790  0028E6  0E4B               	movlw	75
   791  0028E8  EC38  F01D         	call	_lcdData
   792                           
   793                           ;main.c: 120:     lcdData('.');
   794  0028EC  0E2E               	movlw	46
   795  0028EE  EC38  F01D         	call	_lcdData
   796                           
   797                           ;main.c: 121:     lcdData(0x00);
   798  0028F2  0E00               	movlw	0
   799  0028F4  EC38  F01D         	call	_lcdData
   800                           
   801                           ;main.c: 122:     lcdData('W');
   802  0028F8  0E57               	movlw	87
   803  0028FA  EC38  F01D         	call	_lcdData
   804                           
   805                           ;main.c: 123:     lcdData('E');
   806  0028FE  0E45               	movlw	69
   807  002900  EC38  F01D         	call	_lcdData
   808                           
   809                           ;main.c: 124:     lcdData('I');
   810  002904  0E49               	movlw	73
   811  002906  EC38  F01D         	call	_lcdData
   812                           
   813                           ;main.c: 125:     lcdData('S');
   814  00290A  0E53               	movlw	83
   815  00290C  EC38  F01D         	call	_lcdData
   816                           
   817                           ;main.c: 126:     lcdData('S');
   818  002910  0E53               	movlw	83
   819  002912  EC38  F01D         	call	_lcdData
   820                           
   821                           ;main.c: 127:     lcdData('B');
   822  002916  0E42               	movlw	66
   823  002918  EC38  F01D         	call	_lcdData
   824                           
   825                           ;main.c: 128:     lcdData('I');
   826  00291C  0E49               	movlw	73
   827  00291E  EC38  F01D         	call	_lcdData
   828                           
   829                           ;main.c: 129:     lcdData('E');
   830  002922  0E45               	movlw	69
   831  002924  EC38  F01D         	call	_lcdData
   832                           
   833                           ;main.c: 130:     lcdData('R');
   834  002928  0E52               	movlw	82
   835  00292A  EC38  F01D         	call	_lcdData
   836                           
   837                           ;main.c: 131:     lcdCommand(0xDC);
   838  00292E  0EDC               	movlw	220
   839  002930  EC5C  F01B         	call	_lcdCommand
   840                           
   841                           ;main.c: 132:     lcdData('(');
   842  002934  0E28               	movlw	40
   843  002936  EC38  F01D         	call	_lcdData
   844                           
   845                           ;main.c: 133:     lcdData('#');
   846  00293A  0E23               	movlw	35
   847  00293C  EC38  F01D         	call	_lcdData
   848                           
   849                           ;main.c: 134:     lcdData(')');
   850  002940  0E29               	movlw	41
   851  002942  EC38  F01D         	call	_lcdData
   852                           
   853                           ;main.c: 135:     lcdData('~');
   854  002946  0E7E               	movlw	126
   855  002948  EC38  F01D         	call	_lcdData
   856  00294C                     
   857                           ;main.c: 136:     cnt = 10;
   858  00294C  0E00               	movlw	0
   859  00294E  6E10               	movwf	(_cnt+1)^0,c
   860  002950  0E0A               	movlw	10
   861  002952  6E0F               	movwf	_cnt^0,c
   862  002954                     l3118:
   863                           
   864                           ;main.c: 139:     escolha();
   865  002954  ECC3  F01A         	call	_escolha	;wreg free
   866  002958                     
   867                           ;main.c: 140:     kpDebounce();
   868  002958  EC5E  F019         	call	_kpDebounce	;wreg free
   869                           
   870                           ;main.c: 142:            break;
   871  00295C  EF1E  F015         	goto	l3136
   872  002960                     l3122:
   873                           
   874                           ;main.c: 145:    if(cnt==1){
   875  002960  040F               	decf	_cnt^0,w,c
   876  002962  1010               	iorwf	(_cnt+1)^0,w,c
   877  002964  A4D8               	btfss	status,2,c
   878  002966  EFB7  F014         	goto	u2501
   879  00296A  EFB9  F014         	goto	u2500
   880  00296E                     u2501:
   881  00296E  EFAA  F014         	goto	l3118
   882  002972                     u2500:
   883  002972                     
   884                           ;main.c: 146:    lcdCommand(0x01);
   885  002972  0E01               	movlw	1
   886  002974  EC5C  F01B         	call	_lcdCommand
   887                           
   888                           ;main.c: 147:     lcdCommand(0x80);
   889  002978  0E80               	movlw	128
   890  00297A  EC5C  F01B         	call	_lcdCommand
   891                           
   892                           ;main.c: 148:     lcdData('E');
   893  00297E  0E45               	movlw	69
   894  002980  EC38  F01D         	call	_lcdData
   895                           
   896                           ;main.c: 149:     lcdData('S');
   897  002984  0E53               	movlw	83
   898  002986  EC38  F01D         	call	_lcdData
   899                           
   900                           ;main.c: 150:     lcdData('C');
   901  00298A  0E43               	movlw	67
   902  00298C  EC38  F01D         	call	_lcdData
   903                           
   904                           ;main.c: 151:     lcdData('O');
   905  002990  0E4F               	movlw	79
   906  002992  EC38  F01D         	call	_lcdData
   907                           
   908                           ;main.c: 152:     lcdData('L');
   909  002996  0E4C               	movlw	76
   910  002998  EC38  F01D         	call	_lcdData
   911                           
   912                           ;main.c: 153:     lcdData('H');
   913  00299C  0E48               	movlw	72
   914  00299E  EC38  F01D         	call	_lcdData
   915                           
   916                           ;main.c: 154:     lcdData('A');
   917  0029A2  0E41               	movlw	65
   918  0029A4  EC38  F01D         	call	_lcdData
   919                           
   920                           ;main.c: 155:     lcdData(0x00);
   921  0029A8  0E00               	movlw	0
   922  0029AA  EC38  F01D         	call	_lcdData
   923                           
   924                           ;main.c: 156:     lcdData('R');
   925  0029AE  0E52               	movlw	82
   926  0029B0  EC38  F01D         	call	_lcdData
   927                           
   928                           ;main.c: 157:     lcdData('E');
   929  0029B4  0E45               	movlw	69
   930  0029B6  EC38  F01D         	call	_lcdData
   931                           
   932                           ;main.c: 158:     lcdData('C');
   933  0029BA  0E43               	movlw	67
   934  0029BC  EC38  F01D         	call	_lcdData
   935                           
   936                           ;main.c: 159:     lcdData('E');
   937  0029C0  0E45               	movlw	69
   938  0029C2  EC38  F01D         	call	_lcdData
   939                           
   940                           ;main.c: 160:     lcdData('I');
   941  0029C6  0E49               	movlw	73
   942  0029C8  EC38  F01D         	call	_lcdData
   943                           
   944                           ;main.c: 161:     lcdData('T');
   945  0029CC  0E54               	movlw	84
   946  0029CE  EC38  F01D         	call	_lcdData
   947                           
   948                           ;main.c: 162:     lcdData('A');
   949  0029D2  0E41               	movlw	65
   950  0029D4  EC38  F01D         	call	_lcdData
   951                           
   952                           ;main.c: 163:     lcdData(':');
   953  0029D8  0E3A               	movlw	58
   954  0029DA  EC38  F01D         	call	_lcdData
   955                           
   956                           ;main.c: 164:     lcdCommand(0xC4);
   957  0029DE  0EC4               	movlw	196
   958  0029E0  EC5C  F01B         	call	_lcdCommand
   959                           
   960                           ;main.c: 165:     lcdData('(');
   961  0029E4  0E28               	movlw	40
   962  0029E6  EC38  F01D         	call	_lcdData
   963                           
   964                           ;main.c: 166:     lcdData('1');
   965  0029EA  0E31               	movlw	49
   966  0029EC  EC38  F01D         	call	_lcdData
   967                           
   968                           ;main.c: 167:     lcdData(')');
   969  0029F0  0E29               	movlw	41
   970  0029F2  EC38  F01D         	call	_lcdData
   971                           
   972                           ;main.c: 168:     lcdCommand(0xC8);
   973  0029F6  0EC8               	movlw	200
   974  0029F8  EC5C  F01B         	call	_lcdCommand
   975                           
   976                           ;main.c: 169:     lcdData('(');
   977  0029FC  0E28               	movlw	40
   978  0029FE  EC38  F01D         	call	_lcdData
   979                           
   980                           ;main.c: 170:     lcdData('2');
   981  002A02  0E32               	movlw	50
   982  002A04  EC38  F01D         	call	_lcdData
   983                           
   984                           ;main.c: 171:     lcdData(')');
   985  002A08  0E29               	movlw	41
   986  002A0A  EC38  F01D         	call	_lcdData
   987                           
   988                           ;main.c: 172:     lcdCommand(0xD0);
   989  002A0E  0ED0               	movlw	208
   990  002A10  EC5C  F01B         	call	_lcdCommand
   991                           
   992                           ;main.c: 173:     lcdData(0x7F);
   993  002A14  0E7F               	movlw	127
   994  002A16  EC38  F01D         	call	_lcdData
   995                           
   996                           ;main.c: 174:     lcdData('(');
   997  002A1A  0E28               	movlw	40
   998  002A1C  EC38  F01D         	call	_lcdData
   999                           
  1000                           ;main.c: 175:     lcdData('*');
  1001  002A20  0E2A               	movlw	42
  1002  002A22  EC38  F01D         	call	_lcdData
  1003                           
  1004                           ;main.c: 176:     lcdData(')');
  1005  002A26  0E29               	movlw	41
  1006  002A28  EC38  F01D         	call	_lcdData
  1007  002A2C                     
  1008                           ;main.c: 177:     cnt = 2 ;
  1009  002A2C  0E00               	movlw	0
  1010  002A2E  6E10               	movwf	(_cnt+1)^0,c
  1011  002A30  0E02               	movlw	2
  1012  002A32  6E0F               	movwf	_cnt^0,c
  1013  002A34  EFAA  F014         	goto	l3118
  1014  002A38                     l3132:
  1015                           
  1016                           ;main.c: 186:            slot = 0;
  1017  002A38  0E00               	movlw	0
  1018  002A3A  6E19               	movwf	_slot^0,c
  1019  002A3C                     l3136:
  1020  002A3C  5019               	movf	_slot^0,w,c
  1021  002A3E  6E2F               	movwf	??_main^0,c
  1022  002A40  6A30               	clrf	(??_main+1)^0,c
  1023                           
  1024                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1025                           ; Switch size 1, requested type "simple"
  1026                           ; Number of cases is 1, Range of values is 0 to 0
  1027                           ; switch strategies available:
  1028                           ; Name         Instructions Cycles
  1029                           ; simple_byte            4     3 (average)
  1030                           ;	Chosen strategy is simple_byte
  1031  002A42  5030               	movf	(??_main+1)^0,w,c
  1032  002A44  0A00               	xorlw	0	; case 0
  1033  002A46  B4D8               	btfsc	status,2,c
  1034  002A48  EF28  F015         	goto	l3216
  1035  002A4C  EF1C  F015         	goto	l3132
  1036  002A50                     l3216:
  1037                           
  1038                           ; Switch size 1, requested type "simple"
  1039                           ; Number of cases is 2, Range of values is 0 to 1
  1040                           ; switch strategies available:
  1041                           ; Name         Instructions Cycles
  1042                           ; simple_byte            7     4 (average)
  1043                           ;	Chosen strategy is simple_byte
  1044  002A50  502F               	movf	??_main^0,w,c
  1045  002A52  0A00               	xorlw	0	; case 0
  1046  002A54  B4D8               	btfsc	status,2,c
  1047  002A56  EF13  F014         	goto	l3112
  1048  002A5A  0A01               	xorlw	1	; case 1
  1049  002A5C  B4D8               	btfsc	status,2,c
  1050  002A5E  EFB0  F014         	goto	l3122
  1051  002A62  EF1C  F015         	goto	l3132
  1052  002A66  EF00  F000         	goto	start
  1053  002A6A                     __end_of_main:
  1054                           	callstack 0
  1055                           
  1056 ;; *************** function _escolha *****************
  1057 ;; Defined at:
  1058 ;;		line 198 in file "main.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;		None
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;  t               2   19[COMRAM] int 
  1063 ;; Return value:  Size  Location     Type
  1064 ;;                  1    wreg      void 
  1065 ;; Registers used:
  1066 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1067 ;; Tracked objects:
  1068 ;;		On entry : 0/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1072 ;;      Params:         0       0       0       0       0       0       0
  1073 ;;      Locals:         2       0       0       0       0       0       0
  1074 ;;      Temps:          2       0       0       0       0       0       0
  1075 ;;      Totals:         4       0       0       0       0       0       0
  1076 ;;Total ram usage:        4 bytes
  1077 ;; Hardware stack levels used:    1
  1078 ;; Hardware stack levels required when called:    5
  1079 ;; This function calls:
  1080 ;;		_amber_lager
  1081 ;;		_k_weissbier
  1082 ;;		_kpRead
  1083 ;; This function is called by:
  1084 ;;		_main
  1085 ;; This function uses a non-reentrant model
  1086 ;;
  1087                           
  1088                           	psect	text1
  1089  003586                     __ptext1:
  1090                           	callstack 0
  1091  003586                     _escolha:
  1092                           	callstack 25
  1093  003586                     
  1094                           ;main.c: 199:   int t ;;main.c: 202: if(kpRead()!= t)
  1095  003586  ECB9  F01D         	call	_kpRead	;wreg free
  1096  00358A  502D               	movf	escolha@t^0,w,c
  1097  00358C  181A               	xorwf	?_kpRead^0,w,c
  1098  00358E  E109               	bnz	u2440
  1099  003590  502E               	movf	(escolha@t+1)^0,w,c
  1100  003592  181B               	xorwf	(?_kpRead+1)^0,w,c
  1101  003594  B4D8               	btfsc	status,2,c
  1102  003596  EFCF  F01A         	goto	u2441
  1103  00359A  EFD1  F01A         	goto	u2440
  1104  00359E                     u2441:
  1105  00359E  EFD3  F01A         	goto	l43
  1106  0035A2                     u2440:
  1107  0035A2  ECB9  F01D         	call	_kpRead	;wreg free
  1108  0035A6                     l43:
  1109                           
  1110                           ;main.c: 207: if((((kpRead()) & (1<<0))))
  1111  0035A6  ECB9  F01D         	call	_kpRead	;wreg free
  1112  0035AA  A01A               	btfss	?_kpRead^0,0,c
  1113  0035AC  EFDA  F01A         	goto	u2451
  1114  0035B0  EFDC  F01A         	goto	u2450
  1115  0035B4                     u2451:
  1116  0035B4  EFF7  F01A         	goto	l3064
  1117  0035B8                     u2450:
  1118  0035B8  EFE6  F01A         	goto	l3062
  1119  0035BC                     l3058:
  1120                           
  1121                           ;main.c: 213:             cnt = 0;
  1122  0035BC  0E00               	movlw	0
  1123  0035BE  6E10               	movwf	(_cnt+1)^0,c
  1124  0035C0  0E00               	movlw	0
  1125  0035C2  6E0F               	movwf	_cnt^0,c
  1126                           
  1127                           ;main.c: 214:             slot = 0 ;
  1128  0035C4  0E00               	movlw	0
  1129  0035C6  6E19               	movwf	_slot^0,c
  1130                           
  1131                           ;main.c: 215:             break;
  1132  0035C8  EFF7  F01A         	goto	l3064
  1133  0035CC                     l3062:
  1134  0035CC  5019               	movf	_slot^0,w,c
  1135  0035CE  6E2B               	movwf	??_escolha^0,c
  1136  0035D0  6A2C               	clrf	(??_escolha+1)^0,c
  1137                           
  1138                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1139                           ; Switch size 1, requested type "simple"
  1140                           ; Number of cases is 1, Range of values is 0 to 0
  1141                           ; switch strategies available:
  1142                           ; Name         Instructions Cycles
  1143                           ; simple_byte            4     3 (average)
  1144                           ;	Chosen strategy is simple_byte
  1145  0035D2  502C               	movf	(??_escolha+1)^0,w,c
  1146  0035D4  0A00               	xorlw	0	; case 0
  1147  0035D6  B4D8               	btfsc	status,2,c
  1148  0035D8  EFF0  F01A         	goto	l3218
  1149  0035DC  EFF7  F01A         	goto	l3064
  1150  0035E0                     l3218:
  1151                           
  1152                           ; Switch size 1, requested type "simple"
  1153                           ; Number of cases is 1, Range of values is 1 to 1
  1154                           ; switch strategies available:
  1155                           ; Name         Instructions Cycles
  1156                           ; simple_byte            4     3 (average)
  1157                           ;	Chosen strategy is simple_byte
  1158  0035E0  502B               	movf	??_escolha^0,w,c
  1159  0035E2  0A01               	xorlw	1	; case 1
  1160  0035E4  B4D8               	btfsc	status,2,c
  1161  0035E6  EFDE  F01A         	goto	l3058
  1162  0035EA  EFF7  F01A         	goto	l3064
  1163  0035EE                     l3064:
  1164                           
  1165                           ;main.c: 219: if((((kpRead()) & (1<<3))))
  1166  0035EE  ECB9  F01D         	call	_kpRead	;wreg free
  1167  0035F2  A61A               	btfss	?_kpRead^0,3,c
  1168  0035F4  EFFE  F01A         	goto	u2461
  1169  0035F8  EF00  F01B         	goto	u2460
  1170  0035FC                     u2461:
  1171  0035FC  EF17  F01B         	goto	l3074
  1172  003600                     u2460:
  1173  003600  EF06  F01B         	goto	l3072
  1174  003604                     l3068:
  1175                           
  1176                           ;main.c: 224:             amber_lager();
  1177  003604  EC56  F00B         	call	_amber_lager	;wreg free
  1178                           
  1179                           ;main.c: 225:             break;
  1180  003608  EF17  F01B         	goto	l3074
  1181  00360C                     l3072:
  1182  00360C  5019               	movf	_slot^0,w,c
  1183  00360E  6E2B               	movwf	??_escolha^0,c
  1184  003610  6A2C               	clrf	(??_escolha+1)^0,c
  1185                           
  1186                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1187                           ; Switch size 1, requested type "simple"
  1188                           ; Number of cases is 1, Range of values is 0 to 0
  1189                           ; switch strategies available:
  1190                           ; Name         Instructions Cycles
  1191                           ; simple_byte            4     3 (average)
  1192                           ;	Chosen strategy is simple_byte
  1193  003612  502C               	movf	(??_escolha+1)^0,w,c
  1194  003614  0A00               	xorlw	0	; case 0
  1195  003616  B4D8               	btfsc	status,2,c
  1196  003618  EF10  F01B         	goto	l3220
  1197  00361C  EF17  F01B         	goto	l3074
  1198  003620                     l3220:
  1199                           
  1200                           ; Switch size 1, requested type "simple"
  1201                           ; Number of cases is 1, Range of values is 1 to 1
  1202                           ; switch strategies available:
  1203                           ; Name         Instructions Cycles
  1204                           ; simple_byte            4     3 (average)
  1205                           ;	Chosen strategy is simple_byte
  1206  003620  502B               	movf	??_escolha^0,w,c
  1207  003622  0A01               	xorlw	1	; case 1
  1208  003624  B4D8               	btfsc	status,2,c
  1209  003626  EF02  F01B         	goto	l3068
  1210  00362A  EF17  F01B         	goto	l3074
  1211  00362E                     l3074:
  1212                           
  1213                           ;main.c: 229:     if((((kpRead()) & (1<<8))))
  1214  00362E  ECB9  F01D         	call	_kpRead	;wreg free
  1215  003632  A01B               	btfss	(?_kpRead+1)^0,0,c
  1216  003634  EF1E  F01B         	goto	u2471
  1217  003638  EF20  F01B         	goto	u2470
  1218  00363C                     u2471:
  1219  00363C  EF3B  F01B         	goto	l3084
  1220  003640                     u2470:
  1221  003640  EF2A  F01B         	goto	l3082
  1222  003644                     l3078:
  1223                           
  1224                           ;main.c: 234:             slot = 1;
  1225  003644  0E01               	movlw	1
  1226  003646  6E19               	movwf	_slot^0,c
  1227                           
  1228                           ;main.c: 235:             cnt = 1;
  1229  003648  0E00               	movlw	0
  1230  00364A  6E10               	movwf	(_cnt+1)^0,c
  1231  00364C  0E01               	movlw	1
  1232  00364E  6E0F               	movwf	_cnt^0,c
  1233                           
  1234                           ;main.c: 237:             break;
  1235  003650  EF3B  F01B         	goto	l3084
  1236  003654                     l3082:
  1237  003654  5019               	movf	_slot^0,w,c
  1238  003656  6E2B               	movwf	??_escolha^0,c
  1239  003658  6A2C               	clrf	(??_escolha+1)^0,c
  1240                           
  1241                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1242                           ; Switch size 1, requested type "simple"
  1243                           ; Number of cases is 1, Range of values is 0 to 0
  1244                           ; switch strategies available:
  1245                           ; Name         Instructions Cycles
  1246                           ; simple_byte            4     3 (average)
  1247                           ;	Chosen strategy is simple_byte
  1248  00365A  502C               	movf	(??_escolha+1)^0,w,c
  1249  00365C  0A00               	xorlw	0	; case 0
  1250  00365E  B4D8               	btfsc	status,2,c
  1251  003660  EF34  F01B         	goto	l3222
  1252  003664  EF3B  F01B         	goto	l3084
  1253  003668                     l3222:
  1254                           
  1255                           ; Switch size 1, requested type "simple"
  1256                           ; Number of cases is 1, Range of values is 0 to 0
  1257                           ; switch strategies available:
  1258                           ; Name         Instructions Cycles
  1259                           ; simple_byte            4     3 (average)
  1260                           ;	Chosen strategy is simple_byte
  1261  003668  502B               	movf	??_escolha^0,w,c
  1262  00366A  0A00               	xorlw	0	; case 0
  1263  00366C  B4D8               	btfsc	status,2,c
  1264  00366E  EF22  F01B         	goto	l3078
  1265  003672  EF3B  F01B         	goto	l3084
  1266  003676                     l3084:
  1267                           
  1268                           ;main.c: 240: if((((kpRead()) & (1<<7))))
  1269  003676  ECB9  F01D         	call	_kpRead	;wreg free
  1270  00367A  AE1A               	btfss	?_kpRead^0,7,c
  1271  00367C  EF42  F01B         	goto	u2481
  1272  003680  EF44  F01B         	goto	u2480
  1273  003684                     u2481:
  1274  003684  EF5B  F01B         	goto	l60
  1275  003688                     u2480:
  1276  003688  EF4A  F01B         	goto	l3092
  1277  00368C                     l3088:
  1278                           
  1279                           ;main.c: 245:             k_weissbier();
  1280  00368C  EC0A  F003         	call	_k_weissbier	;wreg free
  1281                           
  1282                           ;main.c: 246:             break;
  1283  003690  EF5B  F01B         	goto	l60
  1284  003694                     l3092:
  1285  003694  5019               	movf	_slot^0,w,c
  1286  003696  6E2B               	movwf	??_escolha^0,c
  1287  003698  6A2C               	clrf	(??_escolha+1)^0,c
  1288                           
  1289                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1290                           ; Switch size 1, requested type "simple"
  1291                           ; Number of cases is 1, Range of values is 0 to 0
  1292                           ; switch strategies available:
  1293                           ; Name         Instructions Cycles
  1294                           ; simple_byte            4     3 (average)
  1295                           ;	Chosen strategy is simple_byte
  1296  00369A  502C               	movf	(??_escolha+1)^0,w,c
  1297  00369C  0A00               	xorlw	0	; case 0
  1298  00369E  B4D8               	btfsc	status,2,c
  1299  0036A0  EF54  F01B         	goto	l3224
  1300  0036A4  EF5B  F01B         	goto	l60
  1301  0036A8                     l3224:
  1302                           
  1303                           ; Switch size 1, requested type "simple"
  1304                           ; Number of cases is 1, Range of values is 1 to 1
  1305                           ; switch strategies available:
  1306                           ; Name         Instructions Cycles
  1307                           ; simple_byte            4     3 (average)
  1308                           ;	Chosen strategy is simple_byte
  1309  0036A8  502B               	movf	??_escolha^0,w,c
  1310  0036AA  0A01               	xorlw	1	; case 1
  1311  0036AC  B4D8               	btfsc	status,2,c
  1312  0036AE  EF46  F01B         	goto	l3088
  1313  0036B2  EF5B  F01B         	goto	l60
  1314  0036B6                     l60:
  1315  0036B6  0012               	return		;funcret
  1316  0036B8                     __end_of_escolha:
  1317                           	callstack 0
  1318                           
  1319 ;; *************** function _k_weissbier *****************
  1320 ;; Defined at:
  1321 ;;		line 27 in file "K_WEISSBIER.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;		None
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;  slot            1   16[COMRAM] unsigned char 
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  1    wreg      void 
  1328 ;; Registers used:
  1329 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1335 ;;      Params:         0       0       0       0       0       0       0
  1336 ;;      Locals:         1       0       0       0       0       0       0
  1337 ;;      Temps:          2       0       0       0       0       0       0
  1338 ;;      Totals:         3       0       0       0       0       0       0
  1339 ;;Total ram usage:        3 bytes
  1340 ;; Hardware stack levels used:    1
  1341 ;; Hardware stack levels required when called:    4
  1342 ;; This function calls:
  1343 ;;		_Teclado
  1344 ;;		___lwdiv
  1345 ;;		___lwmod
  1346 ;;		_atraso_ms
  1347 ;;		_kpDebounce
  1348 ;;		_kpInit
  1349 ;;		_lcdCommand
  1350 ;;		_lcdData
  1351 ;;		_lcdInit
  1352 ;;		_pwmInit
  1353 ;;		_pwmSet1
  1354 ;;		_pwmSet2
  1355 ;;		_ssdDigit
  1356 ;;		_ssdInit
  1357 ;;		_ssdUpdate
  1358 ;; This function is called by:
  1359 ;;		_escolha
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363                           	psect	text2
  1364  000614                     __ptext2:
  1365                           	callstack 0
  1366  000614                     _k_weissbier:
  1367                           	callstack 25
  1368  000614                     
  1369                           ;K_WEISSBIER.c: 31: char slot;;K_WEISSBIER.c: 33: pwmInit();
  1370  000614  ECAA  F01D         	call	_pwmInit	;wreg free
  1371                           
  1372                           ;K_WEISSBIER.c: 34: ssdInit();
  1373  000618  EC0D  F01D         	call	_ssdInit	;wreg free
  1374                           
  1375                           ;K_WEISSBIER.c: 35: lcdInit();
  1376  00061C  EC9B  F01B         	call	_lcdInit	;wreg free
  1377                           
  1378                           ;K_WEISSBIER.c: 36: kpInit();
  1379  000620  ECB4  F01D         	call	_kpInit	;wreg free
  1380                           
  1381                           ;K_WEISSBIER.c: 39:     lcdCommand(0x01);
  1382  000624  0E01               	movlw	1
  1383  000626  EC5C  F01B         	call	_lcdCommand
  1384                           
  1385                           ;K_WEISSBIER.c: 40:     lcdCommand(0x80);
  1386  00062A  0E80               	movlw	128
  1387  00062C  EC5C  F01B         	call	_lcdCommand
  1388                           
  1389                           ;K_WEISSBIER.c: 42:     lcdData('-');
  1390  000630  0E2D               	movlw	45
  1391  000632  EC38  F01D         	call	_lcdData
  1392                           
  1393                           ;K_WEISSBIER.c: 43:     lcdData('-');
  1394  000636  0E2D               	movlw	45
  1395  000638  EC38  F01D         	call	_lcdData
  1396                           
  1397                           ;K_WEISSBIER.c: 44:     lcdData('-');
  1398  00063C  0E2D               	movlw	45
  1399  00063E  EC38  F01D         	call	_lcdData
  1400                           
  1401                           ;K_WEISSBIER.c: 45:     lcdData('-');
  1402  000642  0E2D               	movlw	45
  1403  000644  EC38  F01D         	call	_lcdData
  1404                           
  1405                           ;K_WEISSBIER.c: 46:     lcdData('-');
  1406  000648  0E2D               	movlw	45
  1407  00064A  EC38  F01D         	call	_lcdData
  1408                           
  1409                           ;K_WEISSBIER.c: 47:     lcdData('-');
  1410  00064E  0E2D               	movlw	45
  1411  000650  EC38  F01D         	call	_lcdData
  1412                           
  1413                           ;K_WEISSBIER.c: 48:     lcdData('-');
  1414  000654  0E2D               	movlw	45
  1415  000656  EC38  F01D         	call	_lcdData
  1416                           
  1417                           ;K_WEISSBIER.c: 49:     lcdData('-');
  1418  00065A  0E2D               	movlw	45
  1419  00065C  EC38  F01D         	call	_lcdData
  1420                           
  1421                           ;K_WEISSBIER.c: 50:     lcdData('-');
  1422  000660  0E2D               	movlw	45
  1423  000662  EC38  F01D         	call	_lcdData
  1424                           
  1425                           ;K_WEISSBIER.c: 51:     lcdData('-');
  1426  000666  0E2D               	movlw	45
  1427  000668  EC38  F01D         	call	_lcdData
  1428                           
  1429                           ;K_WEISSBIER.c: 52:     lcdData('-');
  1430  00066C  0E2D               	movlw	45
  1431  00066E  EC38  F01D         	call	_lcdData
  1432                           
  1433                           ;K_WEISSBIER.c: 53:     lcdData('-');
  1434  000672  0E2D               	movlw	45
  1435  000674  EC38  F01D         	call	_lcdData
  1436                           
  1437                           ;K_WEISSBIER.c: 54:     lcdData('-');
  1438  000678  0E2D               	movlw	45
  1439  00067A  EC38  F01D         	call	_lcdData
  1440                           
  1441                           ;K_WEISSBIER.c: 55:     lcdData('-');
  1442  00067E  0E2D               	movlw	45
  1443  000680  EC38  F01D         	call	_lcdData
  1444                           
  1445                           ;K_WEISSBIER.c: 56:     lcdData('-');
  1446  000684  0E2D               	movlw	45
  1447  000686  EC38  F01D         	call	_lcdData
  1448                           
  1449                           ;K_WEISSBIER.c: 57:     lcdData('-');
  1450  00068A  0E2D               	movlw	45
  1451  00068C  EC38  F01D         	call	_lcdData
  1452                           
  1453                           ;K_WEISSBIER.c: 59:     lcdCommand(0xC4);
  1454  000690  0EC4               	movlw	196
  1455  000692  EC5C  F01B         	call	_lcdCommand
  1456                           
  1457                           ;K_WEISSBIER.c: 60:     lcdData('K');
  1458  000696  0E4B               	movlw	75
  1459  000698  EC38  F01D         	call	_lcdData
  1460                           
  1461                           ;K_WEISSBIER.c: 61:     lcdData('R');
  1462  00069C  0E52               	movlw	82
  1463  00069E  EC38  F01D         	call	_lcdData
  1464                           
  1465                           ;K_WEISSBIER.c: 62:     lcdData('I');
  1466  0006A2  0E49               	movlw	73
  1467  0006A4  EC38  F01D         	call	_lcdData
  1468                           
  1469                           ;K_WEISSBIER.c: 63:     lcdData('S');
  1470  0006A8  0E53               	movlw	83
  1471  0006AA  EC38  F01D         	call	_lcdData
  1472                           
  1473                           ;K_WEISSBIER.c: 64:     lcdData('T');
  1474  0006AE  0E54               	movlw	84
  1475  0006B0  EC38  F01D         	call	_lcdData
  1476                           
  1477                           ;K_WEISSBIER.c: 65:     lcdData('A');
  1478  0006B4  0E41               	movlw	65
  1479  0006B6  EC38  F01D         	call	_lcdData
  1480                           
  1481                           ;K_WEISSBIER.c: 66:     lcdData('L');
  1482  0006BA  0E4C               	movlw	76
  1483  0006BC  EC38  F01D         	call	_lcdData
  1484                           
  1485                           ;K_WEISSBIER.c: 67:     lcdData('L');
  1486  0006C0  0E4C               	movlw	76
  1487  0006C2  EC38  F01D         	call	_lcdData
  1488                           
  1489                           ;K_WEISSBIER.c: 69:     lcdCommand(0xA8);
  1490  0006C6  0EA8               	movlw	168
  1491  0006C8  EC5C  F01B         	call	_lcdCommand
  1492                           
  1493                           ;K_WEISSBIER.c: 70:     lcdData(0x00);
  1494  0006CC  0E00               	movlw	0
  1495  0006CE  EC38  F01D         	call	_lcdData
  1496                           
  1497                           ;K_WEISSBIER.c: 71:     lcdData(0x00);
  1498  0006D2  0E00               	movlw	0
  1499  0006D4  EC38  F01D         	call	_lcdData
  1500                           
  1501                           ;K_WEISSBIER.c: 72:     lcdData(0x00);
  1502  0006D8  0E00               	movlw	0
  1503  0006DA  EC38  F01D         	call	_lcdData
  1504                           
  1505                           ;K_WEISSBIER.c: 73:     lcdData('W');
  1506  0006DE  0E57               	movlw	87
  1507  0006E0  EC38  F01D         	call	_lcdData
  1508                           
  1509                           ;K_WEISSBIER.c: 74:     lcdData('E');
  1510  0006E4  0E45               	movlw	69
  1511  0006E6  EC38  F01D         	call	_lcdData
  1512                           
  1513                           ;K_WEISSBIER.c: 75:     lcdData('I');
  1514  0006EA  0E49               	movlw	73
  1515  0006EC  EC38  F01D         	call	_lcdData
  1516                           
  1517                           ;K_WEISSBIER.c: 76:     lcdData('S');
  1518  0006F0  0E53               	movlw	83
  1519  0006F2  EC38  F01D         	call	_lcdData
  1520                           
  1521                           ;K_WEISSBIER.c: 77:     lcdData('S');
  1522  0006F6  0E53               	movlw	83
  1523  0006F8  EC38  F01D         	call	_lcdData
  1524                           
  1525                           ;K_WEISSBIER.c: 78:     lcdData('B');
  1526  0006FC  0E42               	movlw	66
  1527  0006FE  EC38  F01D         	call	_lcdData
  1528                           
  1529                           ;K_WEISSBIER.c: 79:     lcdData('I');
  1530  000702  0E49               	movlw	73
  1531  000704  EC38  F01D         	call	_lcdData
  1532                           
  1533                           ;K_WEISSBIER.c: 80:     lcdData('E');
  1534  000708  0E45               	movlw	69
  1535  00070A  EC38  F01D         	call	_lcdData
  1536                           
  1537                           ;K_WEISSBIER.c: 81:     lcdData('R');
  1538  00070E  0E52               	movlw	82
  1539  000710  EC38  F01D         	call	_lcdData
  1540                           
  1541                           ;K_WEISSBIER.c: 83:     lcdCommand(0xD0);
  1542  000714  0ED0               	movlw	208
  1543  000716  EC5C  F01B         	call	_lcdCommand
  1544                           
  1545                           ;K_WEISSBIER.c: 84:     lcdData('-');
  1546  00071A  0E2D               	movlw	45
  1547  00071C  EC38  F01D         	call	_lcdData
  1548                           
  1549                           ;K_WEISSBIER.c: 85:     lcdData('-');
  1550  000720  0E2D               	movlw	45
  1551  000722  EC38  F01D         	call	_lcdData
  1552                           
  1553                           ;K_WEISSBIER.c: 86:     lcdData('-');
  1554  000726  0E2D               	movlw	45
  1555  000728  EC38  F01D         	call	_lcdData
  1556                           
  1557                           ;K_WEISSBIER.c: 87:     lcdData('-');
  1558  00072C  0E2D               	movlw	45
  1559  00072E  EC38  F01D         	call	_lcdData
  1560                           
  1561                           ;K_WEISSBIER.c: 88:     lcdData('-');
  1562  000732  0E2D               	movlw	45
  1563  000734  EC38  F01D         	call	_lcdData
  1564                           
  1565                           ;K_WEISSBIER.c: 89:     lcdData('-');
  1566  000738  0E2D               	movlw	45
  1567  00073A  EC38  F01D         	call	_lcdData
  1568                           
  1569                           ;K_WEISSBIER.c: 90:     lcdData('-');
  1570  00073E  0E2D               	movlw	45
  1571  000740  EC38  F01D         	call	_lcdData
  1572                           
  1573                           ;K_WEISSBIER.c: 91:     lcdData('-');
  1574  000744  0E2D               	movlw	45
  1575  000746  EC38  F01D         	call	_lcdData
  1576                           
  1577                           ;K_WEISSBIER.c: 92:     lcdData('-');
  1578  00074A  0E2D               	movlw	45
  1579  00074C  EC38  F01D         	call	_lcdData
  1580                           
  1581                           ;K_WEISSBIER.c: 93:     lcdData('-');
  1582  000750  0E2D               	movlw	45
  1583  000752  EC38  F01D         	call	_lcdData
  1584                           
  1585                           ;K_WEISSBIER.c: 94:     lcdData('-');
  1586  000756  0E2D               	movlw	45
  1587  000758  EC38  F01D         	call	_lcdData
  1588                           
  1589                           ;K_WEISSBIER.c: 95:     lcdData('-');
  1590  00075C  0E2D               	movlw	45
  1591  00075E  EC38  F01D         	call	_lcdData
  1592                           
  1593                           ;K_WEISSBIER.c: 96:     lcdData('-');
  1594  000762  0E2D               	movlw	45
  1595  000764  EC38  F01D         	call	_lcdData
  1596                           
  1597                           ;K_WEISSBIER.c: 97:     lcdData('-');
  1598  000768  0E2D               	movlw	45
  1599  00076A  EC38  F01D         	call	_lcdData
  1600                           
  1601                           ;K_WEISSBIER.c: 98:     lcdData('-');
  1602  00076E  0E2D               	movlw	45
  1603  000770  EC38  F01D         	call	_lcdData
  1604                           
  1605                           ;K_WEISSBIER.c: 99:     lcdData('-');
  1606  000774  0E2D               	movlw	45
  1607  000776  EC38  F01D         	call	_lcdData
  1608                           
  1609                           ;K_WEISSBIER.c: 100:     atraso_ms(2000);
  1610  00077A  0E07               	movlw	7
  1611  00077C  6E1B               	movwf	(atraso_ms@valor+1)^0,c
  1612  00077E  0ED0               	movlw	208
  1613  000780  6E1A               	movwf	atraso_ms@valor^0,c
  1614  000782  ECAF  F01C         	call	_atraso_ms	;wreg free
  1615                           
  1616                           ;K_WEISSBIER.c: 102:     lcdCommand(0x01);
  1617  000786  0E01               	movlw	1
  1618  000788  EC5C  F01B         	call	_lcdCommand
  1619                           
  1620                           ;K_WEISSBIER.c: 103:     lcdCommand(0x83);
  1621  00078C  0E83               	movlw	131
  1622  00078E  EC5C  F01B         	call	_lcdCommand
  1623                           
  1624                           ;K_WEISSBIER.c: 105:     lcdData('-');
  1625  000792  0E2D               	movlw	45
  1626  000794  EC38  F01D         	call	_lcdData
  1627                           
  1628                           ;K_WEISSBIER.c: 106:     lcdData('C');
  1629  000798  0E43               	movlw	67
  1630  00079A  EC38  F01D         	call	_lcdData
  1631                           
  1632                           ;K_WEISSBIER.c: 107:     lcdData('R');
  1633  00079E  0E52               	movlw	82
  1634  0007A0  EC38  F01D         	call	_lcdData
  1635                           
  1636                           ;K_WEISSBIER.c: 108:     lcdData('E');
  1637  0007A4  0E45               	movlw	69
  1638  0007A6  EC38  F01D         	call	_lcdData
  1639                           
  1640                           ;K_WEISSBIER.c: 109:     lcdData('D');
  1641  0007AA  0E44               	movlw	68
  1642  0007AC  EC38  F01D         	call	_lcdData
  1643                           
  1644                           ;K_WEISSBIER.c: 110:     lcdData('I');
  1645  0007B0  0E49               	movlw	73
  1646  0007B2  EC38  F01D         	call	_lcdData
  1647                           
  1648                           ;K_WEISSBIER.c: 111:     lcdData('T');
  1649  0007B6  0E54               	movlw	84
  1650  0007B8  EC38  F01D         	call	_lcdData
  1651                           
  1652                           ;K_WEISSBIER.c: 112:     lcdData('O');
  1653  0007BC  0E4F               	movlw	79
  1654  0007BE  EC38  F01D         	call	_lcdData
  1655                           
  1656                           ;K_WEISSBIER.c: 113:     lcdData('S');
  1657  0007C2  0E53               	movlw	83
  1658  0007C4  EC38  F01D         	call	_lcdData
  1659                           
  1660                           ;K_WEISSBIER.c: 114:     lcdData('-');
  1661  0007C8  0E2D               	movlw	45
  1662  0007CA  EC38  F01D         	call	_lcdData
  1663                           
  1664                           ;K_WEISSBIER.c: 116:     lcdCommand(0xC0);
  1665  0007CE  0EC0               	movlw	192
  1666  0007D0  EC5C  F01B         	call	_lcdCommand
  1667                           
  1668                           ;K_WEISSBIER.c: 117:     lcdData('C');
  1669  0007D4  0E43               	movlw	67
  1670  0007D6  EC38  F01D         	call	_lcdData
  1671                           
  1672                           ;K_WEISSBIER.c: 118:     lcdData('E');
  1673  0007DA  0E45               	movlw	69
  1674  0007DC  EC38  F01D         	call	_lcdData
  1675                           
  1676                           ;K_WEISSBIER.c: 119:     lcdData('R');
  1677  0007E0  0E52               	movlw	82
  1678  0007E2  EC38  F01D         	call	_lcdData
  1679                           
  1680                           ;K_WEISSBIER.c: 120:     lcdData('V');
  1681  0007E6  0E56               	movlw	86
  1682  0007E8  EC38  F01D         	call	_lcdData
  1683                           
  1684                           ;K_WEISSBIER.c: 121:     lcdData('E');
  1685  0007EC  0E45               	movlw	69
  1686  0007EE  EC38  F01D         	call	_lcdData
  1687                           
  1688                           ;K_WEISSBIER.c: 122:     lcdData('J');
  1689  0007F2  0E4A               	movlw	74
  1690  0007F4  EC38  F01D         	call	_lcdData
  1691                           
  1692                           ;K_WEISSBIER.c: 123:     lcdData('A');
  1693  0007F8  0E41               	movlw	65
  1694  0007FA  EC38  F01D         	call	_lcdData
  1695                           
  1696                           ;K_WEISSBIER.c: 124:     lcdData('R');
  1697  0007FE  0E52               	movlw	82
  1698  000800  EC38  F01D         	call	_lcdData
  1699                           
  1700                           ;K_WEISSBIER.c: 125:     lcdData('I');
  1701  000804  0E49               	movlw	73
  1702  000806  EC38  F01D         	call	_lcdData
  1703                           
  1704                           ;K_WEISSBIER.c: 126:     lcdData('A');
  1705  00080A  0E41               	movlw	65
  1706  00080C  EC38  F01D         	call	_lcdData
  1707                           
  1708                           ;K_WEISSBIER.c: 127:     lcdData(0x00);
  1709  000810  0E00               	movlw	0
  1710  000812  EC38  F01D         	call	_lcdData
  1711                           
  1712                           ;K_WEISSBIER.c: 128:     lcdData('C');
  1713  000816  0E43               	movlw	67
  1714  000818  EC38  F01D         	call	_lcdData
  1715                           
  1716                           ;K_WEISSBIER.c: 129:     lcdData('R');
  1717  00081C  0E52               	movlw	82
  1718  00081E  EC38  F01D         	call	_lcdData
  1719                           
  1720                           ;K_WEISSBIER.c: 130:     lcdData('U');
  1721  000822  0E55               	movlw	85
  1722  000824  EC38  F01D         	call	_lcdData
  1723                           
  1724                           ;K_WEISSBIER.c: 131:     lcdData('L');
  1725  000828  0E4C               	movlw	76
  1726  00082A  EC38  F01D         	call	_lcdData
  1727                           
  1728                           ;K_WEISSBIER.c: 132:     lcdData('S');
  1729  00082E  0E53               	movlw	83
  1730  000830  EC38  F01D         	call	_lcdData
  1731                           
  1732                           ;K_WEISSBIER.c: 133:     atraso_ms(2500);
  1733  000834  0E09               	movlw	9
  1734  000836  6E1B               	movwf	(atraso_ms@valor+1)^0,c
  1735  000838  0EC4               	movlw	196
  1736  00083A  6E1A               	movwf	atraso_ms@valor^0,c
  1737  00083C  ECAF  F01C         	call	_atraso_ms	;wreg free
  1738                           
  1739                           ;K_WEISSBIER.c: 135:     lcdCommand(0x01);
  1740  000840  0E01               	movlw	1
  1741  000842  EC5C  F01B         	call	_lcdCommand
  1742                           
  1743                           ;K_WEISSBIER.c: 136:     lcdCommand(0x83);
  1744  000846  0E83               	movlw	131
  1745  000848  EC5C  F01B         	call	_lcdCommand
  1746                           
  1747                           ;K_WEISSBIER.c: 138:     lcdData('-');
  1748  00084C  0E2D               	movlw	45
  1749  00084E  EC38  F01D         	call	_lcdData
  1750                           
  1751                           ;K_WEISSBIER.c: 139:     lcdData('R');
  1752  000852  0E52               	movlw	82
  1753  000854  EC38  F01D         	call	_lcdData
  1754                           
  1755                           ;K_WEISSBIER.c: 140:     lcdData('E');
  1756  000858  0E45               	movlw	69
  1757  00085A  EC38  F01D         	call	_lcdData
  1758                           
  1759                           ;K_WEISSBIER.c: 141:     lcdData('C');
  1760  00085E  0E43               	movlw	67
  1761  000860  EC38  F01D         	call	_lcdData
  1762                           
  1763                           ;K_WEISSBIER.c: 142:     lcdData('E');
  1764  000864  0E45               	movlw	69
  1765  000866  EC38  F01D         	call	_lcdData
  1766                           
  1767                           ;K_WEISSBIER.c: 143:     lcdData('I');
  1768  00086A  0E49               	movlw	73
  1769  00086C  EC38  F01D         	call	_lcdData
  1770                           
  1771                           ;K_WEISSBIER.c: 144:     lcdData('T');
  1772  000870  0E54               	movlw	84
  1773  000872  EC38  F01D         	call	_lcdData
  1774                           
  1775                           ;K_WEISSBIER.c: 145:     lcdData('A');
  1776  000876  0E41               	movlw	65
  1777  000878  EC38  F01D         	call	_lcdData
  1778                           
  1779                           ;K_WEISSBIER.c: 146:     lcdData('-');
  1780  00087C  0E2D               	movlw	45
  1781  00087E  EC38  F01D         	call	_lcdData
  1782                           
  1783                           ;K_WEISSBIER.c: 148:     lcdCommand(0xC0);
  1784  000882  0EC0               	movlw	192
  1785  000884  EC5C  F01B         	call	_lcdCommand
  1786                           
  1787                           ;K_WEISSBIER.c: 149:     lcdData('-');
  1788  000888  0E2D               	movlw	45
  1789  00088A  EC38  F01D         	call	_lcdData
  1790                           
  1791                           ;K_WEISSBIER.c: 150:     lcdData(0x00);
  1792  00088E  0E00               	movlw	0
  1793  000890  EC38  F01D         	call	_lcdData
  1794                           
  1795                           ;K_WEISSBIER.c: 151:     lcdData('V');
  1796  000894  0E56               	movlw	86
  1797  000896  EC38  F01D         	call	_lcdData
  1798                           
  1799                           ;K_WEISSBIER.c: 152:     lcdData('O');
  1800  00089A  0E4F               	movlw	79
  1801  00089C  EC38  F01D         	call	_lcdData
  1802                           
  1803                           ;K_WEISSBIER.c: 153:     lcdData('L');
  1804  0008A0  0E4C               	movlw	76
  1805  0008A2  EC38  F01D         	call	_lcdData
  1806                           
  1807                           ;K_WEISSBIER.c: 154:     lcdData('U');
  1808  0008A6  0E55               	movlw	85
  1809  0008A8  EC38  F01D         	call	_lcdData
  1810                           
  1811                           ;K_WEISSBIER.c: 155:     lcdData('M');
  1812  0008AC  0E4D               	movlw	77
  1813  0008AE  EC38  F01D         	call	_lcdData
  1814                           
  1815                           ;K_WEISSBIER.c: 156:     lcdData('E');
  1816  0008B2  0E45               	movlw	69
  1817  0008B4  EC38  F01D         	call	_lcdData
  1818                           
  1819                           ;K_WEISSBIER.c: 157:     lcdData(':');
  1820  0008B8  0E3A               	movlw	58
  1821  0008BA  EC38  F01D         	call	_lcdData
  1822                           
  1823                           ;K_WEISSBIER.c: 158:     lcdData(0x00);
  1824  0008BE  0E00               	movlw	0
  1825  0008C0  EC38  F01D         	call	_lcdData
  1826                           
  1827                           ;K_WEISSBIER.c: 159:     lcdData('2');
  1828  0008C4  0E32               	movlw	50
  1829  0008C6  EC38  F01D         	call	_lcdData
  1830                           
  1831                           ;K_WEISSBIER.c: 160:     lcdData('0');
  1832  0008CA  0E30               	movlw	48
  1833  0008CC  EC38  F01D         	call	_lcdData
  1834                           
  1835                           ;K_WEISSBIER.c: 161:     lcdData('L');
  1836  0008D0  0E4C               	movlw	76
  1837  0008D2  EC38  F01D         	call	_lcdData
  1838                           
  1839                           ;K_WEISSBIER.c: 163:     lcdCommand(0xA8);
  1840  0008D6  0EA8               	movlw	168
  1841  0008D8  EC5C  F01B         	call	_lcdCommand
  1842                           
  1843                           ;K_WEISSBIER.c: 164:     lcdData('-');
  1844  0008DC  0E2D               	movlw	45
  1845  0008DE  EC38  F01D         	call	_lcdData
  1846                           
  1847                           ;K_WEISSBIER.c: 165:     lcdData(0x00);
  1848  0008E2  0E00               	movlw	0
  1849  0008E4  EC38  F01D         	call	_lcdData
  1850                           
  1851                           ;K_WEISSBIER.c: 166:     lcdData('A');
  1852  0008E8  0E41               	movlw	65
  1853  0008EA  EC38  F01D         	call	_lcdData
  1854                           
  1855                           ;K_WEISSBIER.c: 167:     lcdData('B');
  1856  0008EE  0E42               	movlw	66
  1857  0008F0  EC38  F01D         	call	_lcdData
  1858                           
  1859                           ;K_WEISSBIER.c: 168:     lcdData('V');
  1860  0008F4  0E56               	movlw	86
  1861  0008F6  EC38  F01D         	call	_lcdData
  1862                           
  1863                           ;K_WEISSBIER.c: 169:     lcdData(':');
  1864  0008FA  0E3A               	movlw	58
  1865  0008FC  EC38  F01D         	call	_lcdData
  1866                           
  1867                           ;K_WEISSBIER.c: 170:     lcdData(0x00);
  1868  000900  0E00               	movlw	0
  1869  000902  EC38  F01D         	call	_lcdData
  1870                           
  1871                           ;K_WEISSBIER.c: 171:     lcdData('5');
  1872  000906  0E35               	movlw	53
  1873  000908  EC38  F01D         	call	_lcdData
  1874                           
  1875                           ;K_WEISSBIER.c: 172:     lcdData('%');
  1876  00090C  0E25               	movlw	37
  1877  00090E  EC38  F01D         	call	_lcdData
  1878                           
  1879                           ;K_WEISSBIER.c: 174:     lcdCommand(0xD0);
  1880  000912  0ED0               	movlw	208
  1881  000914  EC5C  F01B         	call	_lcdCommand
  1882                           
  1883                           ;K_WEISSBIER.c: 175:     lcdData('-');
  1884  000918  0E2D               	movlw	45
  1885  00091A  EC38  F01D         	call	_lcdData
  1886                           
  1887                           ;K_WEISSBIER.c: 176:     lcdData(0x00);
  1888  00091E  0E00               	movlw	0
  1889  000920  EC38  F01D         	call	_lcdData
  1890                           
  1891                           ;K_WEISSBIER.c: 177:     lcdData('I');
  1892  000924  0E49               	movlw	73
  1893  000926  EC38  F01D         	call	_lcdData
  1894                           
  1895                           ;K_WEISSBIER.c: 178:     lcdData('B');
  1896  00092A  0E42               	movlw	66
  1897  00092C  EC38  F01D         	call	_lcdData
  1898                           
  1899                           ;K_WEISSBIER.c: 179:     lcdData('U');
  1900  000930  0E55               	movlw	85
  1901  000932  EC38  F01D         	call	_lcdData
  1902                           
  1903                           ;K_WEISSBIER.c: 180:     lcdData(':');
  1904  000936  0E3A               	movlw	58
  1905  000938  EC38  F01D         	call	_lcdData
  1906                           
  1907                           ;K_WEISSBIER.c: 181:     lcdData(0x00);
  1908  00093C  0E00               	movlw	0
  1909  00093E  EC38  F01D         	call	_lcdData
  1910                           
  1911                           ;K_WEISSBIER.c: 182:     lcdData('1');
  1912  000942  0E31               	movlw	49
  1913  000944  EC38  F01D         	call	_lcdData
  1914                           
  1915                           ;K_WEISSBIER.c: 183:     lcdData('0');
  1916  000948  0E30               	movlw	48
  1917  00094A  EC38  F01D         	call	_lcdData
  1918                           
  1919                           ;K_WEISSBIER.c: 185:     atraso_ms(3000);
  1920  00094E  0E0B               	movlw	11
  1921  000950  6E1B               	movwf	(atraso_ms@valor+1)^0,c
  1922  000952  0EB8               	movlw	184
  1923  000954  6E1A               	movwf	atraso_ms@valor^0,c
  1924  000956  ECAF  F01C         	call	_atraso_ms	;wreg free
  1925                           
  1926                           ;K_WEISSBIER.c: 187:     lcdCommand(0x01);
  1927  00095A  0E01               	movlw	1
  1928  00095C  EC5C  F01B         	call	_lcdCommand
  1929                           
  1930                           ;K_WEISSBIER.c: 188:     lcdCommand(0x83);
  1931  000960  0E83               	movlw	131
  1932  000962  EC5C  F01B         	call	_lcdCommand
  1933                           
  1934                           ;K_WEISSBIER.c: 189:     lcdData('-');
  1935  000966  0E2D               	movlw	45
  1936  000968  EC38  F01D         	call	_lcdData
  1937                           
  1938                           ;K_WEISSBIER.c: 190:     lcdData('M');
  1939  00096C  0E4D               	movlw	77
  1940  00096E  EC38  F01D         	call	_lcdData
  1941                           
  1942                           ;K_WEISSBIER.c: 191:     lcdData('A');
  1943  000972  0E41               	movlw	65
  1944  000974  EC38  F01D         	call	_lcdData
  1945                           
  1946                           ;K_WEISSBIER.c: 192:     lcdData('L');
  1947  000978  0E4C               	movlw	76
  1948  00097A  EC38  F01D         	call	_lcdData
  1949                           
  1950                           ;K_WEISSBIER.c: 193:     lcdData('T');
  1951  00097E  0E54               	movlw	84
  1952  000980  EC38  F01D         	call	_lcdData
  1953                           
  1954                           ;K_WEISSBIER.c: 194:     lcdData('E');
  1955  000984  0E45               	movlw	69
  1956  000986  EC38  F01D         	call	_lcdData
  1957                           
  1958                           ;K_WEISSBIER.c: 195:     lcdData(0x00);
  1959  00098A  0E00               	movlw	0
  1960  00098C  EC38  F01D         	call	_lcdData
  1961                           
  1962                           ;K_WEISSBIER.c: 196:     lcdData('1');
  1963  000990  0E31               	movlw	49
  1964  000992  EC38  F01D         	call	_lcdData
  1965                           
  1966                           ;K_WEISSBIER.c: 197:     lcdData('-');
  1967  000996  0E2D               	movlw	45
  1968  000998  EC38  F01D         	call	_lcdData
  1969                           
  1970                           ;K_WEISSBIER.c: 199:     lcdCommand(0xC0);
  1971  00099C  0EC0               	movlw	192
  1972  00099E  EC5C  F01B         	call	_lcdCommand
  1973                           
  1974                           ;K_WEISSBIER.c: 200:     lcdData('P');
  1975  0009A2  0E50               	movlw	80
  1976  0009A4  EC38  F01D         	call	_lcdData
  1977                           
  1978                           ;K_WEISSBIER.c: 201:     lcdData('I');
  1979  0009A8  0E49               	movlw	73
  1980  0009AA  EC38  F01D         	call	_lcdData
  1981                           
  1982                           ;K_WEISSBIER.c: 202:     lcdData('L');
  1983  0009AE  0E4C               	movlw	76
  1984  0009B0  EC38  F01D         	call	_lcdData
  1985                           
  1986                           ;K_WEISSBIER.c: 203:     lcdData('S');
  1987  0009B4  0E53               	movlw	83
  1988  0009B6  EC38  F01D         	call	_lcdData
  1989                           
  1990                           ;K_WEISSBIER.c: 204:     lcdData('E');
  1991  0009BA  0E45               	movlw	69
  1992  0009BC  EC38  F01D         	call	_lcdData
  1993                           
  1994                           ;K_WEISSBIER.c: 205:     lcdData('N');
  1995  0009C0  0E4E               	movlw	78
  1996  0009C2  EC38  F01D         	call	_lcdData
  1997                           
  1998                           ;K_WEISSBIER.c: 206:     lcdData(0x00);
  1999  0009C6  0E00               	movlw	0
  2000  0009C8  EC38  F01D         	call	_lcdData
  2001                           
  2002                           ;K_WEISSBIER.c: 207:     lcdData('I');
  2003  0009CC  0E49               	movlw	73
  2004  0009CE  EC38  F01D         	call	_lcdData
  2005                           
  2006                           ;K_WEISSBIER.c: 208:     lcdData('M');
  2007  0009D2  0E4D               	movlw	77
  2008  0009D4  EC38  F01D         	call	_lcdData
  2009                           
  2010                           ;K_WEISSBIER.c: 209:     lcdData('P');
  2011  0009D8  0E50               	movlw	80
  2012  0009DA  EC38  F01D         	call	_lcdData
  2013                           
  2014                           ;K_WEISSBIER.c: 210:     lcdData('O');
  2015  0009DE  0E4F               	movlw	79
  2016  0009E0  EC38  F01D         	call	_lcdData
  2017                           
  2018                           ;K_WEISSBIER.c: 211:     lcdData('R');
  2019  0009E4  0E52               	movlw	82
  2020  0009E6  EC38  F01D         	call	_lcdData
  2021                           
  2022                           ;K_WEISSBIER.c: 212:     lcdData('T');
  2023  0009EA  0E54               	movlw	84
  2024  0009EC  EC38  F01D         	call	_lcdData
  2025                           
  2026                           ;K_WEISSBIER.c: 213:     lcdData('A');
  2027  0009F0  0E41               	movlw	65
  2028  0009F2  EC38  F01D         	call	_lcdData
  2029                           
  2030                           ;K_WEISSBIER.c: 214:     lcdData('D');
  2031  0009F6  0E44               	movlw	68
  2032  0009F8  EC38  F01D         	call	_lcdData
  2033                           
  2034                           ;K_WEISSBIER.c: 215:     lcdData('O');
  2035  0009FC  0E4F               	movlw	79
  2036  0009FE  EC38  F01D         	call	_lcdData
  2037                           
  2038                           ;K_WEISSBIER.c: 217:     lcdCommand(0xA8);
  2039  000A02  0EA8               	movlw	168
  2040  000A04  EC5C  F01B         	call	_lcdCommand
  2041                           
  2042                           ;K_WEISSBIER.c: 218:     lcdData('-');
  2043  000A08  0E2D               	movlw	45
  2044  000A0A  EC38  F01D         	call	_lcdData
  2045                           
  2046                           ;K_WEISSBIER.c: 219:     lcdData(0x00);
  2047  000A0E  0E00               	movlw	0
  2048  000A10  EC38  F01D         	call	_lcdData
  2049                           
  2050                           ;K_WEISSBIER.c: 220:     lcdData('2');
  2051  000A14  0E32               	movlw	50
  2052  000A16  EC38  F01D         	call	_lcdData
  2053                           
  2054                           ;K_WEISSBIER.c: 221:     lcdData(',');
  2055  000A1A  0E2C               	movlw	44
  2056  000A1C  EC38  F01D         	call	_lcdData
  2057                           
  2058                           ;K_WEISSBIER.c: 222:     lcdData('3');
  2059  000A20  0E33               	movlw	51
  2060  000A22  EC38  F01D         	call	_lcdData
  2061                           
  2062                           ;K_WEISSBIER.c: 223:     lcdData('1');
  2063  000A26  0E31               	movlw	49
  2064  000A28  EC38  F01D         	call	_lcdData
  2065                           
  2066                           ;K_WEISSBIER.c: 224:     lcdData('K');
  2067  000A2C  0E4B               	movlw	75
  2068  000A2E  EC38  F01D         	call	_lcdData
  2069                           
  2070                           ;K_WEISSBIER.c: 225:     lcdData('G');
  2071  000A32  0E47               	movlw	71
  2072  000A34  EC38  F01D         	call	_lcdData
  2073                           
  2074                           ;K_WEISSBIER.c: 227:     lcdCommand(0xD0);
  2075  000A38  0ED0               	movlw	208
  2076  000A3A  EC5C  F01B         	call	_lcdCommand
  2077                           
  2078                           ;K_WEISSBIER.c: 228:     lcdData('-');
  2079  000A3E  0E2D               	movlw	45
  2080  000A40  EC38  F01D         	call	_lcdData
  2081                           
  2082                           ;K_WEISSBIER.c: 229:     lcdData(0x00);
  2083  000A44  0E00               	movlw	0
  2084  000A46  EC38  F01D         	call	_lcdData
  2085                           
  2086                           ;K_WEISSBIER.c: 230:     lcdData('5');
  2087  000A4A  0E35               	movlw	53
  2088  000A4C  EC38  F01D         	call	_lcdData
  2089                           
  2090                           ;K_WEISSBIER.c: 231:     lcdData('0');
  2091  000A50  0E30               	movlw	48
  2092  000A52  EC38  F01D         	call	_lcdData
  2093                           
  2094                           ;K_WEISSBIER.c: 232:     lcdData('%');
  2095  000A56  0E25               	movlw	37
  2096  000A58  EC38  F01D         	call	_lcdData
  2097                           
  2098                           ;K_WEISSBIER.c: 234:      atraso_ms(2500);
  2099  000A5C  0E09               	movlw	9
  2100  000A5E  6E1B               	movwf	(atraso_ms@valor+1)^0,c
  2101  000A60  0EC4               	movlw	196
  2102  000A62  6E1A               	movwf	atraso_ms@valor^0,c
  2103  000A64  ECAF  F01C         	call	_atraso_ms	;wreg free
  2104                           
  2105                           ;K_WEISSBIER.c: 236:     lcdCommand(0x01);
  2106  000A68  0E01               	movlw	1
  2107  000A6A  EC5C  F01B         	call	_lcdCommand
  2108                           
  2109                           ;K_WEISSBIER.c: 237:     lcdCommand(0x83);
  2110  000A6E  0E83               	movlw	131
  2111  000A70  EC5C  F01B         	call	_lcdCommand
  2112                           
  2113                           ;K_WEISSBIER.c: 238:     lcdData('-');
  2114  000A74  0E2D               	movlw	45
  2115  000A76  EC38  F01D         	call	_lcdData
  2116                           
  2117                           ;K_WEISSBIER.c: 239:     lcdData('M');
  2118  000A7A  0E4D               	movlw	77
  2119  000A7C  EC38  F01D         	call	_lcdData
  2120                           
  2121                           ;K_WEISSBIER.c: 240:     lcdData('A');
  2122  000A80  0E41               	movlw	65
  2123  000A82  EC38  F01D         	call	_lcdData
  2124                           
  2125                           ;K_WEISSBIER.c: 241:     lcdData('L');
  2126  000A86  0E4C               	movlw	76
  2127  000A88  EC38  F01D         	call	_lcdData
  2128                           
  2129                           ;K_WEISSBIER.c: 242:     lcdData('T');
  2130  000A8C  0E54               	movlw	84
  2131  000A8E  EC38  F01D         	call	_lcdData
  2132                           
  2133                           ;K_WEISSBIER.c: 243:     lcdData('E');
  2134  000A92  0E45               	movlw	69
  2135  000A94  EC38  F01D         	call	_lcdData
  2136                           
  2137                           ;K_WEISSBIER.c: 244:     lcdData(0x00);
  2138  000A98  0E00               	movlw	0
  2139  000A9A  EC38  F01D         	call	_lcdData
  2140                           
  2141                           ;K_WEISSBIER.c: 245:     lcdData('2');
  2142  000A9E  0E32               	movlw	50
  2143  000AA0  EC38  F01D         	call	_lcdData
  2144                           
  2145                           ;K_WEISSBIER.c: 246:     lcdData('-');
  2146  000AA4  0E2D               	movlw	45
  2147  000AA6  EC38  F01D         	call	_lcdData
  2148                           
  2149                           ;K_WEISSBIER.c: 248:     lcdCommand(0xC0);
  2150  000AAA  0EC0               	movlw	192
  2151  000AAC  EC5C  F01B         	call	_lcdCommand
  2152                           
  2153                           ;K_WEISSBIER.c: 249:     lcdData('T');
  2154  000AB0  0E54               	movlw	84
  2155  000AB2  EC38  F01D         	call	_lcdData
  2156                           
  2157                           ;K_WEISSBIER.c: 250:     lcdData('R');
  2158  000AB6  0E52               	movlw	82
  2159  000AB8  EC38  F01D         	call	_lcdData
  2160                           
  2161                           ;K_WEISSBIER.c: 251:     lcdData('I');
  2162  000ABC  0E49               	movlw	73
  2163  000ABE  EC38  F01D         	call	_lcdData
  2164                           
  2165                           ;K_WEISSBIER.c: 252:     lcdData('G');
  2166  000AC2  0E47               	movlw	71
  2167  000AC4  EC38  F01D         	call	_lcdData
  2168                           
  2169                           ;K_WEISSBIER.c: 253:     lcdData('O');
  2170  000AC8  0E4F               	movlw	79
  2171  000ACA  EC38  F01D         	call	_lcdData
  2172                           
  2173                           ;K_WEISSBIER.c: 255:     lcdCommand(0xA8);
  2174  000ACE  0EA8               	movlw	168
  2175  000AD0  EC5C  F01B         	call	_lcdCommand
  2176                           
  2177                           ;K_WEISSBIER.c: 256:     lcdData('-');
  2178  000AD4  0E2D               	movlw	45
  2179  000AD6  EC38  F01D         	call	_lcdData
  2180                           
  2181                           ;K_WEISSBIER.c: 257:     lcdData(0x00);
  2182  000ADA  0E00               	movlw	0
  2183  000ADC  EC38  F01D         	call	_lcdData
  2184                           
  2185                           ;K_WEISSBIER.c: 258:     lcdData('2');
  2186  000AE0  0E32               	movlw	50
  2187  000AE2  EC38  F01D         	call	_lcdData
  2188                           
  2189                           ;K_WEISSBIER.c: 259:     lcdData(',');
  2190  000AE6  0E2C               	movlw	44
  2191  000AE8  EC38  F01D         	call	_lcdData
  2192                           
  2193                           ;K_WEISSBIER.c: 260:     lcdData('1');
  2194  000AEC  0E31               	movlw	49
  2195  000AEE  EC38  F01D         	call	_lcdData
  2196                           
  2197                           ;K_WEISSBIER.c: 261:     lcdData('4');
  2198  000AF2  0E34               	movlw	52
  2199  000AF4  EC38  F01D         	call	_lcdData
  2200                           
  2201                           ;K_WEISSBIER.c: 262:     lcdData('K');
  2202  000AF8  0E4B               	movlw	75
  2203  000AFA  EC38  F01D         	call	_lcdData
  2204                           
  2205                           ;K_WEISSBIER.c: 263:     lcdData('G');
  2206  000AFE  0E47               	movlw	71
  2207  000B00  EC38  F01D         	call	_lcdData
  2208                           
  2209                           ;K_WEISSBIER.c: 265:     lcdCommand(0xD0);
  2210  000B04  0ED0               	movlw	208
  2211  000B06  EC5C  F01B         	call	_lcdCommand
  2212                           
  2213                           ;K_WEISSBIER.c: 266:     lcdData('-');
  2214  000B0A  0E2D               	movlw	45
  2215  000B0C  EC38  F01D         	call	_lcdData
  2216                           
  2217                           ;K_WEISSBIER.c: 267:     lcdData(0x00);
  2218  000B10  0E00               	movlw	0
  2219  000B12  EC38  F01D         	call	_lcdData
  2220                           
  2221                           ;K_WEISSBIER.c: 268:     lcdData('4');
  2222  000B16  0E34               	movlw	52
  2223  000B18  EC38  F01D         	call	_lcdData
  2224                           
  2225                           ;K_WEISSBIER.c: 269:     lcdData('7');
  2226  000B1C  0E37               	movlw	55
  2227  000B1E  EC38  F01D         	call	_lcdData
  2228                           
  2229                           ;K_WEISSBIER.c: 270:     lcdData('%');
  2230  000B22  0E25               	movlw	37
  2231  000B24  EC38  F01D         	call	_lcdData
  2232                           
  2233                           ;K_WEISSBIER.c: 272:      atraso_ms(2500);
  2234  000B28  0E09               	movlw	9
  2235  000B2A  6E1B               	movwf	(atraso_ms@valor+1)^0,c
  2236  000B2C  0EC4               	movlw	196
  2237  000B2E  6E1A               	movwf	atraso_ms@valor^0,c
  2238  000B30  ECAF  F01C         	call	_atraso_ms	;wreg free
  2239                           
  2240                           ;K_WEISSBIER.c: 274:     lcdCommand(0x01);
  2241  000B34  0E01               	movlw	1
  2242  000B36  EC5C  F01B         	call	_lcdCommand
  2243                           
  2244                           ;K_WEISSBIER.c: 275:     lcdCommand(0x83);
  2245  000B3A  0E83               	movlw	131
  2246  000B3C  EC5C  F01B         	call	_lcdCommand
  2247                           
  2248                           ;K_WEISSBIER.c: 276:     lcdData('-');
  2249  000B40  0E2D               	movlw	45
  2250  000B42  EC38  F01D         	call	_lcdData
  2251                           
  2252                           ;K_WEISSBIER.c: 277:     lcdData('M');
  2253  000B46  0E4D               	movlw	77
  2254  000B48  EC38  F01D         	call	_lcdData
  2255                           
  2256                           ;K_WEISSBIER.c: 278:     lcdData('A');
  2257  000B4C  0E41               	movlw	65
  2258  000B4E  EC38  F01D         	call	_lcdData
  2259                           
  2260                           ;K_WEISSBIER.c: 279:     lcdData('L');
  2261  000B52  0E4C               	movlw	76
  2262  000B54  EC38  F01D         	call	_lcdData
  2263                           
  2264                           ;K_WEISSBIER.c: 280:     lcdData('T');
  2265  000B58  0E54               	movlw	84
  2266  000B5A  EC38  F01D         	call	_lcdData
  2267                           
  2268                           ;K_WEISSBIER.c: 281:     lcdData('E');
  2269  000B5E  0E45               	movlw	69
  2270  000B60  EC38  F01D         	call	_lcdData
  2271                           
  2272                           ;K_WEISSBIER.c: 282:     lcdData(0x00);
  2273  000B64  0E00               	movlw	0
  2274  000B66  EC38  F01D         	call	_lcdData
  2275                           
  2276                           ;K_WEISSBIER.c: 283:     lcdData('3');
  2277  000B6A  0E33               	movlw	51
  2278  000B6C  EC38  F01D         	call	_lcdData
  2279                           
  2280                           ;K_WEISSBIER.c: 284:     lcdData('-');
  2281  000B70  0E2D               	movlw	45
  2282  000B72  EC38  F01D         	call	_lcdData
  2283                           
  2284                           ;K_WEISSBIER.c: 286:     lcdCommand(0xC0);
  2285  000B76  0EC0               	movlw	192
  2286  000B78  EC5C  F01B         	call	_lcdCommand
  2287                           
  2288                           ;K_WEISSBIER.c: 287:     lcdData('M');
  2289  000B7C  0E4D               	movlw	77
  2290  000B7E  EC38  F01D         	call	_lcdData
  2291                           
  2292                           ;K_WEISSBIER.c: 288:     lcdData('E');
  2293  000B82  0E45               	movlw	69
  2294  000B84  EC38  F01D         	call	_lcdData
  2295                           
  2296                           ;K_WEISSBIER.c: 289:     lcdData('L');
  2297  000B88  0E4C               	movlw	76
  2298  000B8A  EC38  F01D         	call	_lcdData
  2299                           
  2300                           ;K_WEISSBIER.c: 290:     lcdData('A');
  2301  000B8E  0E41               	movlw	65
  2302  000B90  EC38  F01D         	call	_lcdData
  2303                           
  2304                           ;K_WEISSBIER.c: 291:     lcdData('N');
  2305  000B94  0E4E               	movlw	78
  2306  000B96  EC38  F01D         	call	_lcdData
  2307                           
  2308                           ;K_WEISSBIER.c: 292:     lcdData('O');
  2309  000B9A  0E4F               	movlw	79
  2310  000B9C  EC38  F01D         	call	_lcdData
  2311                           
  2312                           ;K_WEISSBIER.c: 295:     lcdCommand(0xA8);
  2313  000BA0  0EA8               	movlw	168
  2314  000BA2  EC5C  F01B         	call	_lcdCommand
  2315                           
  2316                           ;K_WEISSBIER.c: 296:     lcdData('-');
  2317  000BA6  0E2D               	movlw	45
  2318  000BA8  EC38  F01D         	call	_lcdData
  2319                           
  2320                           ;K_WEISSBIER.c: 297:     lcdData(0x00);
  2321  000BAC  0E00               	movlw	0
  2322  000BAE  EC38  F01D         	call	_lcdData
  2323                           
  2324                           ;K_WEISSBIER.c: 298:     lcdData('1');
  2325  000BB2  0E31               	movlw	49
  2326  000BB4  EC38  F01D         	call	_lcdData
  2327                           
  2328                           ;K_WEISSBIER.c: 299:     lcdData('4');
  2329  000BB8  0E34               	movlw	52
  2330  000BBA  EC38  F01D         	call	_lcdData
  2331                           
  2332                           ;K_WEISSBIER.c: 300:     lcdData('0');
  2333  000BBE  0E30               	movlw	48
  2334  000BC0  EC38  F01D         	call	_lcdData
  2335                           
  2336                           ;K_WEISSBIER.c: 301:     lcdData('G');
  2337  000BC4  0E47               	movlw	71
  2338  000BC6  EC38  F01D         	call	_lcdData
  2339                           
  2340                           ;K_WEISSBIER.c: 303:     lcdCommand(0xD0);
  2341  000BCA  0ED0               	movlw	208
  2342  000BCC  EC5C  F01B         	call	_lcdCommand
  2343                           
  2344                           ;K_WEISSBIER.c: 304:     lcdData('-');
  2345  000BD0  0E2D               	movlw	45
  2346  000BD2  EC38  F01D         	call	_lcdData
  2347                           
  2348                           ;K_WEISSBIER.c: 305:     lcdData(0x00);
  2349  000BD6  0E00               	movlw	0
  2350  000BD8  EC38  F01D         	call	_lcdData
  2351                           
  2352                           ;K_WEISSBIER.c: 306:     lcdData('3');
  2353  000BDC  0E33               	movlw	51
  2354  000BDE  EC38  F01D         	call	_lcdData
  2355                           
  2356                           ;K_WEISSBIER.c: 307:     lcdData('%');
  2357  000BE2  0E25               	movlw	37
  2358  000BE4  EC38  F01D         	call	_lcdData
  2359                           
  2360                           ;K_WEISSBIER.c: 309:     atraso_ms(2500);
  2361  000BE8  0E09               	movlw	9
  2362  000BEA  6E1B               	movwf	(atraso_ms@valor+1)^0,c
  2363  000BEC  0EC4               	movlw	196
  2364  000BEE  6E1A               	movwf	atraso_ms@valor^0,c
  2365  000BF0  ECAF  F01C         	call	_atraso_ms	;wreg free
  2366                           
  2367                           ;K_WEISSBIER.c: 311:     lcdCommand(0x01);
  2368  000BF4  0E01               	movlw	1
  2369  000BF6  EC5C  F01B         	call	_lcdCommand
  2370                           
  2371                           ;K_WEISSBIER.c: 312:     lcdCommand(0x83);
  2372  000BFA  0E83               	movlw	131
  2373  000BFC  EC5C  F01B         	call	_lcdCommand
  2374                           
  2375                           ;K_WEISSBIER.c: 313:     lcdData('-');
  2376  000C00  0E2D               	movlw	45
  2377  000C02  EC38  F01D         	call	_lcdData
  2378                           
  2379                           ;K_WEISSBIER.c: 314:     lcdData('L');
  2380  000C06  0E4C               	movlw	76
  2381  000C08  EC38  F01D         	call	_lcdData
  2382                           
  2383                           ;K_WEISSBIER.c: 315:     lcdData('U');
  2384  000C0C  0E55               	movlw	85
  2385  000C0E  EC38  F01D         	call	_lcdData
  2386                           
  2387                           ;K_WEISSBIER.c: 316:     lcdData('P');
  2388  000C12  0E50               	movlw	80
  2389  000C14  EC38  F01D         	call	_lcdData
  2390                           
  2391                           ;K_WEISSBIER.c: 317:     lcdData('U');
  2392  000C18  0E55               	movlw	85
  2393  000C1A  EC38  F01D         	call	_lcdData
  2394                           
  2395                           ;K_WEISSBIER.c: 318:     lcdData('L');
  2396  000C1E  0E4C               	movlw	76
  2397  000C20  EC38  F01D         	call	_lcdData
  2398                           
  2399                           ;K_WEISSBIER.c: 319:     lcdData('O');
  2400  000C24  0E4F               	movlw	79
  2401  000C26  EC38  F01D         	call	_lcdData
  2402                           
  2403                           ;K_WEISSBIER.c: 320:     lcdData(0x00);
  2404  000C2A  0E00               	movlw	0
  2405  000C2C  EC38  F01D         	call	_lcdData
  2406                           
  2407                           ;K_WEISSBIER.c: 321:     lcdData('1');
  2408  000C30  0E31               	movlw	49
  2409  000C32  EC38  F01D         	call	_lcdData
  2410                           
  2411                           ;K_WEISSBIER.c: 322:     lcdData('-');
  2412  000C36  0E2D               	movlw	45
  2413  000C38  EC38  F01D         	call	_lcdData
  2414                           
  2415                           ;K_WEISSBIER.c: 324:     lcdCommand(0xC0);
  2416  000C3C  0EC0               	movlw	192
  2417  000C3E  EC5C  F01B         	call	_lcdCommand
  2418                           
  2419                           ;K_WEISSBIER.c: 325:     lcdData('M');
  2420  000C42  0E4D               	movlw	77
  2421  000C44  EC38  F01D         	call	_lcdData
  2422                           
  2423                           ;K_WEISSBIER.c: 326:     lcdData('A');
  2424  000C48  0E41               	movlw	65
  2425  000C4A  EC38  F01D         	call	_lcdData
  2426                           
  2427                           ;K_WEISSBIER.c: 327:     lcdData('G');
  2428  000C4E  0E47               	movlw	71
  2429  000C50  EC38  F01D         	call	_lcdData
  2430                           
  2431                           ;K_WEISSBIER.c: 328:     lcdData('N');
  2432  000C54  0E4E               	movlw	78
  2433  000C56  EC38  F01D         	call	_lcdData
  2434                           
  2435                           ;K_WEISSBIER.c: 329:     lcdData('U');
  2436  000C5A  0E55               	movlw	85
  2437  000C5C  EC38  F01D         	call	_lcdData
  2438                           
  2439                           ;K_WEISSBIER.c: 330:     lcdData('M');
  2440  000C60  0E4D               	movlw	77
  2441  000C62  EC38  F01D         	call	_lcdData
  2442                           
  2443                           ;K_WEISSBIER.c: 332:     lcdCommand(0xA8);
  2444  000C66  0EA8               	movlw	168
  2445  000C68  EC5C  F01B         	call	_lcdCommand
  2446                           
  2447                           ;K_WEISSBIER.c: 333:     lcdData('-');
  2448  000C6C  0E2D               	movlw	45
  2449  000C6E  EC38  F01D         	call	_lcdData
  2450                           
  2451                           ;K_WEISSBIER.c: 334:     lcdData(0x00);
  2452  000C72  0E00               	movlw	0
  2453  000C74  EC38  F01D         	call	_lcdData
  2454                           
  2455                           ;K_WEISSBIER.c: 335:     lcdData('9');
  2456  000C78  0E39               	movlw	57
  2457  000C7A  EC38  F01D         	call	_lcdData
  2458                           
  2459                           ;K_WEISSBIER.c: 336:     lcdData(',');
  2460  000C7E  0E2C               	movlw	44
  2461  000C80  EC38  F01D         	call	_lcdData
  2462                           
  2463                           ;K_WEISSBIER.c: 337:     lcdData('5');
  2464  000C84  0E35               	movlw	53
  2465  000C86  EC38  F01D         	call	_lcdData
  2466                           
  2467                           ;K_WEISSBIER.c: 338:     lcdData('G');
  2468  000C8A  0E47               	movlw	71
  2469  000C8C  EC38  F01D         	call	_lcdData
  2470                           
  2471                           ;K_WEISSBIER.c: 340:      atraso_ms(2500);
  2472  000C90  0E09               	movlw	9
  2473  000C92  6E1B               	movwf	(atraso_ms@valor+1)^0,c
  2474  000C94  0EC4               	movlw	196
  2475  000C96  6E1A               	movwf	atraso_ms@valor^0,c
  2476  000C98  ECAF  F01C         	call	_atraso_ms	;wreg free
  2477                           
  2478                           ;K_WEISSBIER.c: 342:     lcdCommand(0x01);
  2479  000C9C  0E01               	movlw	1
  2480  000C9E  EC5C  F01B         	call	_lcdCommand
  2481                           
  2482                           ;K_WEISSBIER.c: 343:     lcdCommand(0x83);
  2483  000CA2  0E83               	movlw	131
  2484  000CA4  EC5C  F01B         	call	_lcdCommand
  2485                           
  2486                           ;K_WEISSBIER.c: 344:     lcdData('-');
  2487  000CA8  0E2D               	movlw	45
  2488  000CAA  EC38  F01D         	call	_lcdData
  2489                           
  2490                           ;K_WEISSBIER.c: 345:     lcdData('L');
  2491  000CAE  0E4C               	movlw	76
  2492  000CB0  EC38  F01D         	call	_lcdData
  2493                           
  2494                           ;K_WEISSBIER.c: 346:     lcdData('U');
  2495  000CB4  0E55               	movlw	85
  2496  000CB6  EC38  F01D         	call	_lcdData
  2497                           
  2498                           ;K_WEISSBIER.c: 347:     lcdData('P');
  2499  000CBA  0E50               	movlw	80
  2500  000CBC  EC38  F01D         	call	_lcdData
  2501                           
  2502                           ;K_WEISSBIER.c: 348:     lcdData('U');
  2503  000CC0  0E55               	movlw	85
  2504  000CC2  EC38  F01D         	call	_lcdData
  2505                           
  2506                           ;K_WEISSBIER.c: 349:     lcdData('L');
  2507  000CC6  0E4C               	movlw	76
  2508  000CC8  EC38  F01D         	call	_lcdData
  2509                           
  2510                           ;K_WEISSBIER.c: 350:     lcdData('O');
  2511  000CCC  0E4F               	movlw	79
  2512  000CCE  EC38  F01D         	call	_lcdData
  2513                           
  2514                           ;K_WEISSBIER.c: 351:     lcdData(0x00);
  2515  000CD2  0E00               	movlw	0
  2516  000CD4  EC38  F01D         	call	_lcdData
  2517                           
  2518                           ;K_WEISSBIER.c: 352:     lcdData('2');
  2519  000CD8  0E32               	movlw	50
  2520  000CDA  EC38  F01D         	call	_lcdData
  2521                           
  2522                           ;K_WEISSBIER.c: 353:     lcdData('-');
  2523  000CDE  0E2D               	movlw	45
  2524  000CE0  EC38  F01D         	call	_lcdData
  2525                           
  2526                           ;K_WEISSBIER.c: 355:     lcdCommand(0xC0);
  2527  000CE4  0EC0               	movlw	192
  2528  000CE6  EC5C  F01B         	call	_lcdCommand
  2529                           
  2530                           ;K_WEISSBIER.c: 356:     lcdData('S');
  2531  000CEA  0E53               	movlw	83
  2532  000CEC  EC38  F01D         	call	_lcdData
  2533                           
  2534                           ;K_WEISSBIER.c: 357:     lcdData('A');
  2535  000CF0  0E41               	movlw	65
  2536  000CF2  EC38  F01D         	call	_lcdData
  2537                           
  2538                           ;K_WEISSBIER.c: 358:     lcdData('A');
  2539  000CF6  0E41               	movlw	65
  2540  000CF8  EC38  F01D         	call	_lcdData
  2541                           
  2542                           ;K_WEISSBIER.c: 359:     lcdData('Z');
  2543  000CFC  0E5A               	movlw	90
  2544  000CFE  EC38  F01D         	call	_lcdData
  2545                           
  2546                           ;K_WEISSBIER.c: 362:     lcdCommand(0xA8);
  2547  000D02  0EA8               	movlw	168
  2548  000D04  EC5C  F01B         	call	_lcdCommand
  2549                           
  2550                           ;K_WEISSBIER.c: 363:     lcdData('-');
  2551  000D08  0E2D               	movlw	45
  2552  000D0A  EC38  F01D         	call	_lcdData
  2553                           
  2554                           ;K_WEISSBIER.c: 364:     lcdData(0x00);
  2555  000D0E  0E00               	movlw	0
  2556  000D10  EC38  F01D         	call	_lcdData
  2557                           
  2558                           ;K_WEISSBIER.c: 365:     lcdData('3');
  2559  000D14  0E33               	movlw	51
  2560  000D16  EC38  F01D         	call	_lcdData
  2561                           
  2562                           ;K_WEISSBIER.c: 366:     lcdData(',');
  2563  000D1A  0E2C               	movlw	44
  2564  000D1C  EC38  F01D         	call	_lcdData
  2565                           
  2566                           ;K_WEISSBIER.c: 367:     lcdData('2');
  2567  000D20  0E32               	movlw	50
  2568  000D22  EC38  F01D         	call	_lcdData
  2569                           
  2570                           ;K_WEISSBIER.c: 368:     lcdData('G');
  2571  000D26  0E47               	movlw	71
  2572  000D28  EC38  F01D         	call	_lcdData
  2573                           
  2574                           ;K_WEISSBIER.c: 370:      atraso_ms(3000);
  2575  000D2C  0E0B               	movlw	11
  2576  000D2E  6E1B               	movwf	(atraso_ms@valor+1)^0,c
  2577  000D30  0EB8               	movlw	184
  2578  000D32  6E1A               	movwf	atraso_ms@valor^0,c
  2579  000D34  ECAF  F01C         	call	_atraso_ms	;wreg free
  2580                           
  2581                           ;K_WEISSBIER.c: 373:     lcdCommand(0x01);
  2582  000D38  0E01               	movlw	1
  2583  000D3A  EC5C  F01B         	call	_lcdCommand
  2584                           
  2585                           ;K_WEISSBIER.c: 374:     lcdCommand(0x80);
  2586  000D3E  0E80               	movlw	128
  2587  000D40  EC5C  F01B         	call	_lcdCommand
  2588                           
  2589                           ;K_WEISSBIER.c: 375:     lcdData('E');
  2590  000D44  0E45               	movlw	69
  2591  000D46  EC38  F01D         	call	_lcdData
  2592                           
  2593                           ;K_WEISSBIER.c: 376:     lcdData('S');
  2594  000D4A  0E53               	movlw	83
  2595  000D4C  EC38  F01D         	call	_lcdData
  2596                           
  2597                           ;K_WEISSBIER.c: 377:     lcdData('Q');
  2598  000D50  0E51               	movlw	81
  2599  000D52  EC38  F01D         	call	_lcdData
  2600                           
  2601                           ;K_WEISSBIER.c: 378:     lcdData('U');
  2602  000D56  0E55               	movlw	85
  2603  000D58  EC38  F01D         	call	_lcdData
  2604                           
  2605                           ;K_WEISSBIER.c: 379:     lcdData('E');
  2606  000D5C  0E45               	movlw	69
  2607  000D5E  EC38  F01D         	call	_lcdData
  2608                           
  2609                           ;K_WEISSBIER.c: 380:     lcdData('N');
  2610  000D62  0E4E               	movlw	78
  2611  000D64  EC38  F01D         	call	_lcdData
  2612                           
  2613                           ;K_WEISSBIER.c: 381:     lcdData('T');
  2614  000D68  0E54               	movlw	84
  2615  000D6A  EC38  F01D         	call	_lcdData
  2616                           
  2617                           ;K_WEISSBIER.c: 382:     lcdData('A');
  2618  000D6E  0E41               	movlw	65
  2619  000D70  EC38  F01D         	call	_lcdData
  2620                           
  2621                           ;K_WEISSBIER.c: 383:     lcdData('N');
  2622  000D74  0E4E               	movlw	78
  2623  000D76  EC38  F01D         	call	_lcdData
  2624                           
  2625                           ;K_WEISSBIER.c: 384:     lcdData('D');
  2626  000D7A  0E44               	movlw	68
  2627  000D7C  EC38  F01D         	call	_lcdData
  2628                           
  2629                           ;K_WEISSBIER.c: 385:     lcdData('0');
  2630  000D80  0E30               	movlw	48
  2631  000D82  EC38  F01D         	call	_lcdData
  2632                           
  2633                           ;K_WEISSBIER.c: 386:     lcdData('.');
  2634  000D86  0E2E               	movlw	46
  2635  000D88  EC38  F01D         	call	_lcdData
  2636                           
  2637                           ;K_WEISSBIER.c: 387:     lcdData('.');
  2638  000D8C  0E2E               	movlw	46
  2639  000D8E  EC38  F01D         	call	_lcdData
  2640                           
  2641                           ;K_WEISSBIER.c: 388:     lcdData('.');
  2642  000D92  0E2E               	movlw	46
  2643  000D94  EC38  F01D         	call	_lcdData
  2644  000D98  EF3C  F00B         	goto	l3022
  2645  000D9C                     l2872:
  2646                           
  2647                           ;K_WEISSBIER.c: 393:  atraso_ms(1);
  2648  000D9C  0E00               	movlw	0
  2649  000D9E  6E1B               	movwf	(atraso_ms@valor+1)^0,c
  2650  000DA0  0E01               	movlw	1
  2651  000DA2  6E1A               	movwf	atraso_ms@valor^0,c
  2652  000DA4  ECAF  F01C         	call	_atraso_ms	;wreg free
  2653  000DA8                     
  2654                           ;K_WEISSBIER.c: 394:  temp++;
  2655  000DA8  4A07               	infsnz	_temp^0,f,c
  2656  000DAA  2A08               	incf	(_temp+1)^0,f,c
  2657  000DAC                     
  2658                           ;K_WEISSBIER.c: 395:  ssdDigit(16 , 3);
  2659  000DAC  0E03               	movlw	3
  2660  000DAE  6E26               	movwf	ssdDigit@pos^0,c
  2661  000DB0  0E10               	movlw	16
  2662  000DB2  ECE1  F01C         	call	_ssdDigit
  2663  000DB6                     
  2664                           ;K_WEISSBIER.c: 396:  ssdDigit((temp/100)%10 , 2);
  2665  000DB6  0E02               	movlw	2
  2666  000DB8  6E26               	movwf	ssdDigit@pos^0,c
  2667  000DBA  0E00               	movlw	0
  2668  000DBC  6E1D               	movwf	(___lwdiv@divisor+1)^0,c
  2669  000DBE  0E64               	movlw	100
  2670  000DC0  6E1C               	movwf	___lwdiv@divisor^0,c
  2671  000DC2  C007  F01A         	movff	_temp,___lwdiv@dividend
  2672  000DC6  C008  F01B         	movff	_temp+1,___lwdiv@dividend+1
  2673  000DCA  ECD7  F01B         	call	___lwdiv	;wreg free
  2674  000DCE  C01A  F021         	movff	?___lwdiv,___lwmod@dividend
  2675  000DD2  C01B  F022         	movff	?___lwdiv+1,___lwmod@dividend+1
  2676  000DD6  0E00               	movlw	0
  2677  000DD8  6E24               	movwf	(___lwmod@divisor+1)^0,c
  2678  000DDA  0E0A               	movlw	10
  2679  000DDC  6E23               	movwf	___lwmod@divisor^0,c
  2680  000DDE  EC7D  F01C         	call	___lwmod	;wreg free
  2681  000DE2  5021               	movf	?___lwmod^0,w,c
  2682  000DE4  ECE1  F01C         	call	_ssdDigit
  2683  000DE8                     
  2684                           ;K_WEISSBIER.c: 397:  ssdDigit((temp/1000)%10, 1);
  2685  000DE8  0E01               	movlw	1
  2686  000DEA  6E26               	movwf	ssdDigit@pos^0,c
  2687  000DEC  0E03               	movlw	3
  2688  000DEE  6E1D               	movwf	(___lwdiv@divisor+1)^0,c
  2689  000DF0  0EE8               	movlw	232
  2690  000DF2  6E1C               	movwf	___lwdiv@divisor^0,c
  2691  000DF4  C007  F01A         	movff	_temp,___lwdiv@dividend
  2692  000DF8  C008  F01B         	movff	_temp+1,___lwdiv@dividend+1
  2693  000DFC  ECD7  F01B         	call	___lwdiv	;wreg free
  2694  000E00  C01A  F021         	movff	?___lwdiv,___lwmod@dividend
  2695  000E04  C01B  F022         	movff	?___lwdiv+1,___lwmod@dividend+1
  2696  000E08  0E00               	movlw	0
  2697  000E0A  6E24               	movwf	(___lwmod@divisor+1)^0,c
  2698  000E0C  0E0A               	movlw	10
  2699  000E0E  6E23               	movwf	___lwmod@divisor^0,c
  2700  000E10  EC7D  F01C         	call	___lwmod	;wreg free
  2701  000E14  5021               	movf	?___lwmod^0,w,c
  2702  000E16  ECE1  F01C         	call	_ssdDigit
  2703  000E1A                     
  2704                           ;K_WEISSBIER.c: 398:  ssdUpdate();
  2705  000E1A  EC1B  F01A         	call	_ssdUpdate	;wreg free
  2706  000E1E                     
  2707                           ;K_WEISSBIER.c: 400: if(temp>= valor)
  2708  000E1E  5035               	movf	_valor^0,w,c
  2709  000E20  5C07               	subwf	_temp^0,w,c
  2710  000E22  5036               	movf	(_valor+1)^0,w,c
  2711  000E24  5808               	subwfb	(_temp+1)^0,w,c
  2712  000E26  A0D8               	btfss	status,0,c
  2713  000E28  EF18  F007         	goto	u2271
  2714  000E2C  EF1A  F007         	goto	u2270
  2715  000E30                     u2271:
  2716  000E30  EF3C  F00B         	goto	l3022
  2717  000E34                     u2270:
  2718  000E34                     
  2719                           ;K_WEISSBIER.c: 401: {;K_WEISSBIER.c: 402:   slot = 1;
  2720  000E34  0E01               	movlw	1
  2721  000E36  6E2A               	movwf	k_weissbier@slot^0,c
  2722  000E38  EF3C  F00B         	goto	l3022
  2723  000E3C                     l2888:
  2724                           
  2725                           ;K_WEISSBIER.c: 407:      cont++;
  2726  000E3C  4A05               	infsnz	_cont^0,f,c
  2727  000E3E  2A06               	incf	(_cont+1)^0,f,c
  2728  000E40                     
  2729                           ;K_WEISSBIER.c: 408:      temp = valor;
  2730  000E40  C035  F007         	movff	_valor,_temp
  2731  000E44  C036  F008         	movff	_valor+1,_temp+1
  2732  000E48                     
  2733                           ;K_WEISSBIER.c: 409:      if((cont==1))
  2734  000E48  0405               	decf	_cont^0,w,c
  2735  000E4A  1006               	iorwf	(_cont+1)^0,w,c
  2736  000E4C  A4D8               	btfss	status,2,c
  2737  000E4E  EF2B  F007         	goto	u2281
  2738  000E52  EF2D  F007         	goto	u2280
  2739  000E56                     u2281:
  2740  000E56  EF06  F00A         	goto	l2980
  2741  000E5A                     u2280:
  2742  000E5A                     
  2743                           ;K_WEISSBIER.c: 410:      {;K_WEISSBIER.c: 412:      pwmSet2(50);
  2744  000E5A  0E32               	movlw	50
  2745  000E5C  EC11  F01C         	call	_pwmSet2
  2746  000E60                     
  2747                           ;K_WEISSBIER.c: 413:      atraso_ms(100);
  2748  000E60  0E00               	movlw	0
  2749  000E62  6E1B               	movwf	(atraso_ms@valor+1)^0,c
  2750  000E64  0E64               	movlw	100
  2751  000E66  6E1A               	movwf	atraso_ms@valor^0,c
  2752  000E68  ECAF  F01C         	call	_atraso_ms	;wreg free
  2753  000E6C                     
  2754                           ;K_WEISSBIER.c: 414:      pwmSet2(0);
  2755  000E6C  0E00               	movlw	0
  2756  000E6E  EC11  F01C         	call	_pwmSet2
  2757  000E72                     
  2758                           ;K_WEISSBIER.c: 416:     if(valor<=4300){
  2759  000E72  0ECD               	movlw	205
  2760  000E74  5C35               	subwf	_valor^0,w,c
  2761  000E76  0E10               	movlw	16
  2762  000E78  5836               	subwfb	(_valor+1)^0,w,c
  2763  000E7A  B0D8               	btfsc	status,0,c
  2764  000E7C  EF42  F007         	goto	u2291
  2765  000E80  EF44  F007         	goto	u2290
  2766  000E84                     u2291:
  2767  000E84  EF8C  F007         	goto	l2904
  2768  000E88                     u2290:
  2769  000E88                     
  2770                           ;K_WEISSBIER.c: 417:     lcdCommand(0x01);
  2771  000E88  0E01               	movlw	1
  2772  000E8A  EC5C  F01B         	call	_lcdCommand
  2773                           
  2774                           ;K_WEISSBIER.c: 418:     lcdCommand(0x80);
  2775  000E8E  0E80               	movlw	128
  2776  000E90  EC5C  F01B         	call	_lcdCommand
  2777                           
  2778                           ;K_WEISSBIER.c: 419:     lcdData('I');
  2779  000E94  0E49               	movlw	73
  2780  000E96  EC38  F01D         	call	_lcdData
  2781                           
  2782                           ;K_WEISSBIER.c: 420:     lcdData('N');
  2783  000E9A  0E4E               	movlw	78
  2784  000E9C  EC38  F01D         	call	_lcdData
  2785                           
  2786                           ;K_WEISSBIER.c: 421:     lcdData('S');
  2787  000EA0  0E53               	movlw	83
  2788  000EA2  EC38  F01D         	call	_lcdData
  2789                           
  2790                           ;K_WEISSBIER.c: 422:     lcdData('I');
  2791  000EA6  0E49               	movlw	73
  2792  000EA8  EC38  F01D         	call	_lcdData
  2793                           
  2794                           ;K_WEISSBIER.c: 423:     lcdData('R');
  2795  000EAC  0E52               	movlw	82
  2796  000EAE  EC38  F01D         	call	_lcdData
  2797                           
  2798                           ;K_WEISSBIER.c: 424:     lcdData('A');
  2799  000EB2  0E41               	movlw	65
  2800  000EB4  EC38  F01D         	call	_lcdData
  2801                           
  2802                           ;K_WEISSBIER.c: 425:     lcdData(0x00);
  2803  000EB8  0E00               	movlw	0
  2804  000EBA  EC38  F01D         	call	_lcdData
  2805                           
  2806                           ;K_WEISSBIER.c: 426:     lcdData('O');
  2807  000EBE  0E4F               	movlw	79
  2808  000EC0  EC38  F01D         	call	_lcdData
  2809                           
  2810                           ;K_WEISSBIER.c: 427:     lcdData('S');
  2811  000EC4  0E53               	movlw	83
  2812  000EC6  EC38  F01D         	call	_lcdData
  2813                           
  2814                           ;K_WEISSBIER.c: 428:     lcdData(0x00);
  2815  000ECA  0E00               	movlw	0
  2816  000ECC  EC38  F01D         	call	_lcdData
  2817                           
  2818                           ;K_WEISSBIER.c: 429:     lcdData('M');
  2819  000ED0  0E4D               	movlw	77
  2820  000ED2  EC38  F01D         	call	_lcdData
  2821                           
  2822                           ;K_WEISSBIER.c: 430:     lcdData('A');
  2823  000ED6  0E41               	movlw	65
  2824  000ED8  EC38  F01D         	call	_lcdData
  2825                           
  2826                           ;K_WEISSBIER.c: 431:     lcdData('L');
  2827  000EDC  0E4C               	movlw	76
  2828  000EDE  EC38  F01D         	call	_lcdData
  2829                           
  2830                           ;K_WEISSBIER.c: 432:     lcdData('T');
  2831  000EE2  0E54               	movlw	84
  2832  000EE4  EC38  F01D         	call	_lcdData
  2833                           
  2834                           ;K_WEISSBIER.c: 433:     lcdData('E');
  2835  000EE8  0E45               	movlw	69
  2836  000EEA  EC38  F01D         	call	_lcdData
  2837                           
  2838                           ;K_WEISSBIER.c: 434:     lcdData('S');
  2839  000EEE  0E53               	movlw	83
  2840  000EF0  EC38  F01D         	call	_lcdData
  2841                           
  2842                           ;K_WEISSBIER.c: 435:     lcdCommand(0xDB);
  2843  000EF4  0EDB               	movlw	219
  2844  000EF6  EC5C  F01B         	call	_lcdCommand
  2845                           
  2846                           ;K_WEISSBIER.c: 436:     lcdData('O');
  2847  000EFA  0E4F               	movlw	79
  2848  000EFC  EC38  F01D         	call	_lcdData
  2849                           
  2850                           ;K_WEISSBIER.c: 437:     lcdData('K');
  2851  000F00  0E4B               	movlw	75
  2852  000F02  EC38  F01D         	call	_lcdData
  2853                           
  2854                           ;K_WEISSBIER.c: 438:     lcdData('(');
  2855  000F06  0E28               	movlw	40
  2856  000F08  EC38  F01D         	call	_lcdData
  2857                           
  2858                           ;K_WEISSBIER.c: 439:     lcdData('#');
  2859  000F0C  0E23               	movlw	35
  2860  000F0E  EC38  F01D         	call	_lcdData
  2861                           
  2862                           ;K_WEISSBIER.c: 440:     lcdData(')');
  2863  000F12  0E29               	movlw	41
  2864  000F14  EC38  F01D         	call	_lcdData
  2865  000F18                     l2904:
  2866                           
  2867                           ;K_WEISSBIER.c: 443:      if((valor<=(4300 +2))&&( valor > 4300))
  2868  000F18  0ECF               	movlw	207
  2869  000F1A  5C35               	subwf	_valor^0,w,c
  2870  000F1C  0E10               	movlw	16
  2871  000F1E  5836               	subwfb	(_valor+1)^0,w,c
  2872  000F20  B0D8               	btfsc	status,0,c
  2873  000F22  EF95  F007         	goto	u2301
  2874  000F26  EF97  F007         	goto	u2300
  2875  000F2A                     u2301:
  2876  000F2A  EFC4  F007         	goto	l2912
  2877  000F2E                     u2300:
  2878  000F2E  0ECD               	movlw	205
  2879  000F30  5C35               	subwf	_valor^0,w,c
  2880  000F32  0E10               	movlw	16
  2881  000F34  5836               	subwfb	(_valor+1)^0,w,c
  2882  000F36  A0D8               	btfss	status,0,c
  2883  000F38  EFA0  F007         	goto	u2311
  2884  000F3C  EFA2  F007         	goto	u2310
  2885  000F40                     u2311:
  2886  000F40  EFC4  F007         	goto	l2912
  2887  000F44                     u2310:
  2888  000F44                     
  2889                           ;K_WEISSBIER.c: 444:     {;K_WEISSBIER.c: 445:     lcdCommand(0x01);
  2890  000F44  0E01               	movlw	1
  2891  000F46  EC5C  F01B         	call	_lcdCommand
  2892                           
  2893                           ;K_WEISSBIER.c: 446:     lcdCommand(0x80);
  2894  000F4A  0E80               	movlw	128
  2895  000F4C  EC5C  F01B         	call	_lcdCommand
  2896                           
  2897                           ;K_WEISSBIER.c: 447:     lcdData('D');
  2898  000F50  0E44               	movlw	68
  2899  000F52  EC38  F01D         	call	_lcdData
  2900                           
  2901                           ;K_WEISSBIER.c: 448:     lcdData('E');
  2902  000F56  0E45               	movlw	69
  2903  000F58  EC38  F01D         	call	_lcdData
  2904                           
  2905                           ;K_WEISSBIER.c: 449:     lcdData('G');
  2906  000F5C  0E47               	movlw	71
  2907  000F5E  EC38  F01D         	call	_lcdData
  2908                           
  2909                           ;K_WEISSBIER.c: 450:     lcdData('R');
  2910  000F62  0E52               	movlw	82
  2911  000F64  EC38  F01D         	call	_lcdData
  2912                           
  2913                           ;K_WEISSBIER.c: 451:     lcdData('A');
  2914  000F68  0E41               	movlw	65
  2915  000F6A  EC38  F01D         	call	_lcdData
  2916                           
  2917                           ;K_WEISSBIER.c: 452:     lcdData('U');
  2918  000F6E  0E55               	movlw	85
  2919  000F70  EC38  F01D         	call	_lcdData
  2920                           
  2921                           ;K_WEISSBIER.c: 453:     lcdData(0x00);
  2922  000F74  0E00               	movlw	0
  2923  000F76  EC38  F01D         	call	_lcdData
  2924                           
  2925                           ;K_WEISSBIER.c: 454:     lcdData('0');
  2926  000F7A  0E30               	movlw	48
  2927  000F7C  EC38  F01D         	call	_lcdData
  2928  000F80                     
  2929                           ;K_WEISSBIER.c: 455:      valor = 4300 + 2;
  2930  000F80  0E10               	movlw	16
  2931  000F82  6E36               	movwf	(_valor+1)^0,c
  2932  000F84  0ECE               	movlw	206
  2933  000F86  6E35               	movwf	_valor^0,c
  2934  000F88                     l2912:
  2935                           
  2936                           ;K_WEISSBIER.c: 458:      if((valor<=7800)&&( valor > (4300 +2)))
  2937  000F88  0E79               	movlw	121
  2938  000F8A  5C35               	subwf	_valor^0,w,c
  2939  000F8C  0E1E               	movlw	30
  2940  000F8E  5836               	subwfb	(_valor+1)^0,w,c
  2941  000F90  B0D8               	btfsc	status,0,c
  2942  000F92  EFCD  F007         	goto	u2321
  2943  000F96  EFCF  F007         	goto	u2320
  2944  000F9A                     u2321:
  2945  000F9A  EFF9  F007         	goto	l2918
  2946  000F9E                     u2320:
  2947  000F9E  0ECF               	movlw	207
  2948  000FA0  5C35               	subwf	_valor^0,w,c
  2949  000FA2  0E10               	movlw	16
  2950  000FA4  5836               	subwfb	(_valor+1)^0,w,c
  2951  000FA6  A0D8               	btfss	status,0,c
  2952  000FA8  EFD8  F007         	goto	u2331
  2953  000FAC  EFDA  F007         	goto	u2330
  2954  000FB0                     u2331:
  2955  000FB0  EFF9  F007         	goto	l2918
  2956  000FB4                     u2330:
  2957  000FB4                     
  2958                           ;K_WEISSBIER.c: 459:     {;K_WEISSBIER.c: 460:     lcdCommand(0x01);
  2959  000FB4  0E01               	movlw	1
  2960  000FB6  EC5C  F01B         	call	_lcdCommand
  2961                           
  2962                           ;K_WEISSBIER.c: 461:     lcdCommand(0x80);
  2963  000FBA  0E80               	movlw	128
  2964  000FBC  EC5C  F01B         	call	_lcdCommand
  2965                           
  2966                           ;K_WEISSBIER.c: 462:     lcdData('D');
  2967  000FC0  0E44               	movlw	68
  2968  000FC2  EC38  F01D         	call	_lcdData
  2969                           
  2970                           ;K_WEISSBIER.c: 463:     lcdData('E');
  2971  000FC6  0E45               	movlw	69
  2972  000FC8  EC38  F01D         	call	_lcdData
  2973                           
  2974                           ;K_WEISSBIER.c: 464:     lcdData('G');
  2975  000FCC  0E47               	movlw	71
  2976  000FCE  EC38  F01D         	call	_lcdData
  2977                           
  2978                           ;K_WEISSBIER.c: 465:     lcdData('R');
  2979  000FD2  0E52               	movlw	82
  2980  000FD4  EC38  F01D         	call	_lcdData
  2981                           
  2982                           ;K_WEISSBIER.c: 466:     lcdData('A');
  2983  000FD8  0E41               	movlw	65
  2984  000FDA  EC38  F01D         	call	_lcdData
  2985                           
  2986                           ;K_WEISSBIER.c: 467:     lcdData('U');
  2987  000FDE  0E55               	movlw	85
  2988  000FE0  EC38  F01D         	call	_lcdData
  2989                           
  2990                           ;K_WEISSBIER.c: 468:     lcdData(0x00);
  2991  000FE4  0E00               	movlw	0
  2992  000FE6  EC38  F01D         	call	_lcdData
  2993                           
  2994                           ;K_WEISSBIER.c: 469:     lcdData(i + 0x30);
  2995  000FEA  5033               	movf	_i^0,w,c
  2996  000FEC  0F30               	addlw	48
  2997  000FEE  EC38  F01D         	call	_lcdData
  2998  000FF2                     l2918:
  2999                           
  3000                           ;K_WEISSBIER.c: 472:      if((i==5)&&(valor<=9900))
  3001  000FF2  0E05               	movlw	5
  3002  000FF4  1833               	xorwf	_i^0,w,c
  3003  000FF6  1034               	iorwf	(_i+1)^0,w,c
  3004  000FF8  A4D8               	btfss	status,2,c
  3005  000FFA  EF01  F008         	goto	u2341
  3006  000FFE  EF03  F008         	goto	u2340
  3007  001002                     u2341:
  3008  001002  EF72  F008         	goto	l2928
  3009  001006                     u2340:
  3010  001006  0EAD               	movlw	173
  3011  001008  5C35               	subwf	_valor^0,w,c
  3012  00100A  0E26               	movlw	38
  3013  00100C  5836               	subwfb	(_valor+1)^0,w,c
  3014  00100E  B0D8               	btfsc	status,0,c
  3015  001010  EF0C  F008         	goto	u2351
  3016  001014  EF0E  F008         	goto	u2350
  3017  001018                     u2351:
  3018  001018  EF72  F008         	goto	l2928
  3019  00101C                     u2350:
  3020  00101C                     
  3021                           ;K_WEISSBIER.c: 473:     {;K_WEISSBIER.c: 474:     lcdCommand(0x01);
  3022  00101C  0E01               	movlw	1
  3023  00101E  EC5C  F01B         	call	_lcdCommand
  3024                           
  3025                           ;K_WEISSBIER.c: 475:     lcdCommand(0x85);
  3026  001022  0E85               	movlw	133
  3027  001024  EC5C  F01B         	call	_lcdCommand
  3028                           
  3029                           ;K_WEISSBIER.c: 476:     lcdData('F');
  3030  001028  0E46               	movlw	70
  3031  00102A  EC38  F01D         	call	_lcdData
  3032                           
  3033                           ;K_WEISSBIER.c: 477:     lcdData('E');
  3034  00102E  0E45               	movlw	69
  3035  001030  EC38  F01D         	call	_lcdData
  3036                           
  3037                           ;K_WEISSBIER.c: 478:     lcdData('R');
  3038  001034  0E52               	movlw	82
  3039  001036  EC38  F01D         	call	_lcdData
  3040                           
  3041                           ;K_WEISSBIER.c: 479:     lcdData('V');
  3042  00103A  0E56               	movlw	86
  3043  00103C  EC38  F01D         	call	_lcdData
  3044                           
  3045                           ;K_WEISSBIER.c: 480:     lcdData('U');
  3046  001040  0E55               	movlw	85
  3047  001042  EC38  F01D         	call	_lcdData
  3048                           
  3049                           ;K_WEISSBIER.c: 481:     lcdData('R');
  3050  001046  0E52               	movlw	82
  3051  001048  EC38  F01D         	call	_lcdData
  3052                           
  3053                           ;K_WEISSBIER.c: 482:     lcdData('A');
  3054  00104C  0E41               	movlw	65
  3055  00104E  EC38  F01D         	call	_lcdData
  3056                           
  3057                           ;K_WEISSBIER.c: 483:     lcdCommand(0xC0);
  3058  001052  0EC0               	movlw	192
  3059  001054  EC5C  F01B         	call	_lcdCommand
  3060                           
  3061                           ;K_WEISSBIER.c: 484:     lcdData('I');
  3062  001058  0E49               	movlw	73
  3063  00105A  EC38  F01D         	call	_lcdData
  3064                           
  3065                           ;K_WEISSBIER.c: 485:     lcdData('N');
  3066  00105E  0E4E               	movlw	78
  3067  001060  EC38  F01D         	call	_lcdData
  3068                           
  3069                           ;K_WEISSBIER.c: 486:     lcdData('S');
  3070  001064  0E53               	movlw	83
  3071  001066  EC38  F01D         	call	_lcdData
  3072                           
  3073                           ;K_WEISSBIER.c: 487:     lcdData('I');
  3074  00106A  0E49               	movlw	73
  3075  00106C  EC38  F01D         	call	_lcdData
  3076                           
  3077                           ;K_WEISSBIER.c: 488:     lcdData('R');
  3078  001070  0E52               	movlw	82
  3079  001072  EC38  F01D         	call	_lcdData
  3080                           
  3081                           ;K_WEISSBIER.c: 489:     lcdData('A');
  3082  001076  0E41               	movlw	65
  3083  001078  EC38  F01D         	call	_lcdData
  3084                           
  3085                           ;K_WEISSBIER.c: 490:     lcdData(0x00);
  3086  00107C  0E00               	movlw	0
  3087  00107E  EC38  F01D         	call	_lcdData
  3088                           
  3089                           ;K_WEISSBIER.c: 491:     lcdData('L');
  3090  001082  0E4C               	movlw	76
  3091  001084  EC38  F01D         	call	_lcdData
  3092                           
  3093                           ;K_WEISSBIER.c: 492:     lcdData('U');
  3094  001088  0E55               	movlw	85
  3095  00108A  EC38  F01D         	call	_lcdData
  3096                           
  3097                           ;K_WEISSBIER.c: 493:     lcdData('P');
  3098  00108E  0E50               	movlw	80
  3099  001090  EC38  F01D         	call	_lcdData
  3100                           
  3101                           ;K_WEISSBIER.c: 494:     lcdData('U');
  3102  001094  0E55               	movlw	85
  3103  001096  EC38  F01D         	call	_lcdData
  3104                           
  3105                           ;K_WEISSBIER.c: 495:     lcdData('L');
  3106  00109A  0E4C               	movlw	76
  3107  00109C  EC38  F01D         	call	_lcdData
  3108                           
  3109                           ;K_WEISSBIER.c: 496:     lcdData('0');
  3110  0010A0  0E30               	movlw	48
  3111  0010A2  EC38  F01D         	call	_lcdData
  3112                           
  3113                           ;K_WEISSBIER.c: 497:     lcdData(0x00);
  3114  0010A6  0E00               	movlw	0
  3115  0010A8  EC38  F01D         	call	_lcdData
  3116                           
  3117                           ;K_WEISSBIER.c: 498:     lcdData('1');
  3118  0010AC  0E31               	movlw	49
  3119  0010AE  EC38  F01D         	call	_lcdData
  3120                           
  3121                           ;K_WEISSBIER.c: 499:     lcdCommand(0xDB);
  3122  0010B2  0EDB               	movlw	219
  3123  0010B4  EC5C  F01B         	call	_lcdCommand
  3124                           
  3125                           ;K_WEISSBIER.c: 500:     lcdData('O');
  3126  0010B8  0E4F               	movlw	79
  3127  0010BA  EC38  F01D         	call	_lcdData
  3128                           
  3129                           ;K_WEISSBIER.c: 501:     lcdData('K');
  3130  0010BE  0E4B               	movlw	75
  3131  0010C0  EC38  F01D         	call	_lcdData
  3132                           
  3133                           ;K_WEISSBIER.c: 502:     lcdData('(');
  3134  0010C4  0E28               	movlw	40
  3135  0010C6  EC38  F01D         	call	_lcdData
  3136                           
  3137                           ;K_WEISSBIER.c: 503:     lcdData('#');
  3138  0010CA  0E23               	movlw	35
  3139  0010CC  EC38  F01D         	call	_lcdData
  3140                           
  3141                           ;K_WEISSBIER.c: 504:     lcdData(')');
  3142  0010D0  0E29               	movlw	41
  3143  0010D2  EC38  F01D         	call	_lcdData
  3144  0010D6                     
  3145                           ;K_WEISSBIER.c: 505:      pwmSet1(0);
  3146  0010D6  0E00               	movlw	0
  3147  0010D8  EC47  F01C         	call	_pwmSet1
  3148  0010DC                     
  3149                           ;K_WEISSBIER.c: 506:      i = 9;
  3150  0010DC  0E00               	movlw	0
  3151  0010DE  6E34               	movwf	(_i+1)^0,c
  3152  0010E0  0E09               	movlw	9
  3153  0010E2  6E33               	movwf	_i^0,c
  3154  0010E4                     l2928:
  3155                           
  3156                           ;K_WEISSBIER.c: 510:      if((i==6)||(i==8))
  3157  0010E4  0E06               	movlw	6
  3158  0010E6  1833               	xorwf	_i^0,w,c
  3159  0010E8  1034               	iorwf	(_i+1)^0,w,c
  3160  0010EA  B4D8               	btfsc	status,2,c
  3161  0010EC  EF7A  F008         	goto	u2361
  3162  0010F0  EF7C  F008         	goto	u2360
  3163  0010F4                     u2361:
  3164  0010F4  EF86  F008         	goto	l2932
  3165  0010F8                     u2360:
  3166  0010F8  0E08               	movlw	8
  3167  0010FA  1833               	xorwf	_i^0,w,c
  3168  0010FC  1034               	iorwf	(_i+1)^0,w,c
  3169  0010FE  A4D8               	btfss	status,2,c
  3170  001100  EF84  F008         	goto	u2371
  3171  001104  EF86  F008         	goto	u2370
  3172  001108                     u2371:
  3173  001108  EF8D  F009         	goto	l2970
  3174  00110C                     u2370:
  3175  00110C                     l2932:
  3176                           
  3177                           ;K_WEISSBIER.c: 511:     {;K_WEISSBIER.c: 512:     lcdCommand(0x01);
  3178  00110C  0E01               	movlw	1
  3179  00110E  EC5C  F01B         	call	_lcdCommand
  3180                           
  3181                           ;K_WEISSBIER.c: 513:     lcdCommand(0x80);
  3182  001112  0E80               	movlw	128
  3183  001114  EC5C  F01B         	call	_lcdCommand
  3184                           
  3185                           ;K_WEISSBIER.c: 514:     lcdData('F');
  3186  001118  0E46               	movlw	70
  3187  00111A  EC38  F01D         	call	_lcdData
  3188                           
  3189                           ;K_WEISSBIER.c: 515:     lcdData('E');
  3190  00111E  0E45               	movlw	69
  3191  001120  EC38  F01D         	call	_lcdData
  3192                           
  3193                           ;K_WEISSBIER.c: 516:     lcdData('R');
  3194  001124  0E52               	movlw	82
  3195  001126  EC38  F01D         	call	_lcdData
  3196                           
  3197                           ;K_WEISSBIER.c: 517:     lcdData('V');
  3198  00112A  0E56               	movlw	86
  3199  00112C  EC38  F01D         	call	_lcdData
  3200                           
  3201                           ;K_WEISSBIER.c: 518:     lcdData('U');
  3202  001130  0E55               	movlw	85
  3203  001132  EC38  F01D         	call	_lcdData
  3204                           
  3205                           ;K_WEISSBIER.c: 519:     lcdData('R');
  3206  001136  0E52               	movlw	82
  3207  001138  EC38  F01D         	call	_lcdData
  3208                           
  3209                           ;K_WEISSBIER.c: 520:     lcdData('A');
  3210  00113C  0E41               	movlw	65
  3211  00113E  EC38  F01D         	call	_lcdData
  3212  001142                     
  3213                           ;K_WEISSBIER.c: 522:     if(i==8)
  3214  001142  0E08               	movlw	8
  3215  001144  1833               	xorwf	_i^0,w,c
  3216  001146  1034               	iorwf	(_i+1)^0,w,c
  3217  001148  A4D8               	btfss	status,2,c
  3218  00114A  EFA9  F008         	goto	u2381
  3219  00114E  EFAB  F008         	goto	u2380
  3220  001152                     u2381:
  3221  001152  EF8D  F009         	goto	l2970
  3222  001156                     u2380:
  3223  001156                     
  3224                           ;K_WEISSBIER.c: 523:     {;K_WEISSBIER.c: 524:     lcdCommand(0x01);
  3225  001156  0E01               	movlw	1
  3226  001158  EC5C  F01B         	call	_lcdCommand
  3227                           
  3228                           ;K_WEISSBIER.c: 525:     lcdCommand(0xC0);
  3229  00115C  0EC0               	movlw	192
  3230  00115E  EC5C  F01B         	call	_lcdCommand
  3231                           
  3232                           ;K_WEISSBIER.c: 527:     lcdData('-');
  3233  001162  0E2D               	movlw	45
  3234  001164  EC38  F01D         	call	_lcdData
  3235                           
  3236                           ;K_WEISSBIER.c: 528:     lcdData('-');
  3237  001168  0E2D               	movlw	45
  3238  00116A  EC38  F01D         	call	_lcdData
  3239                           
  3240                           ;K_WEISSBIER.c: 529:     lcdData('-');
  3241  00116E  0E2D               	movlw	45
  3242  001170  EC38  F01D         	call	_lcdData
  3243                           
  3244                           ;K_WEISSBIER.c: 530:     lcdData('-');
  3245  001174  0E2D               	movlw	45
  3246  001176  EC38  F01D         	call	_lcdData
  3247                           
  3248                           ;K_WEISSBIER.c: 531:     lcdData('-');
  3249  00117A  0E2D               	movlw	45
  3250  00117C  EC38  F01D         	call	_lcdData
  3251                           
  3252                           ;K_WEISSBIER.c: 532:     lcdData('-');
  3253  001180  0E2D               	movlw	45
  3254  001182  EC38  F01D         	call	_lcdData
  3255                           
  3256                           ;K_WEISSBIER.c: 533:     lcdData('-');
  3257  001186  0E2D               	movlw	45
  3258  001188  EC38  F01D         	call	_lcdData
  3259                           
  3260                           ;K_WEISSBIER.c: 534:     lcdData('-');
  3261  00118C  0E2D               	movlw	45
  3262  00118E  EC38  F01D         	call	_lcdData
  3263                           
  3264                           ;K_WEISSBIER.c: 535:     lcdData('-');
  3265  001192  0E2D               	movlw	45
  3266  001194  EC38  F01D         	call	_lcdData
  3267                           
  3268                           ;K_WEISSBIER.c: 536:     lcdData('-');
  3269  001198  0E2D               	movlw	45
  3270  00119A  EC38  F01D         	call	_lcdData
  3271                           
  3272                           ;K_WEISSBIER.c: 537:     lcdData('-');
  3273  00119E  0E2D               	movlw	45
  3274  0011A0  EC38  F01D         	call	_lcdData
  3275                           
  3276                           ;K_WEISSBIER.c: 538:     lcdData('-');
  3277  0011A4  0E2D               	movlw	45
  3278  0011A6  EC38  F01D         	call	_lcdData
  3279                           
  3280                           ;K_WEISSBIER.c: 539:     lcdData('-');
  3281  0011AA  0E2D               	movlw	45
  3282  0011AC  EC38  F01D         	call	_lcdData
  3283                           
  3284                           ;K_WEISSBIER.c: 540:     lcdData('-');
  3285  0011B0  0E2D               	movlw	45
  3286  0011B2  EC38  F01D         	call	_lcdData
  3287                           
  3288                           ;K_WEISSBIER.c: 541:     lcdData('-');
  3289  0011B6  0E2D               	movlw	45
  3290  0011B8  EC38  F01D         	call	_lcdData
  3291                           
  3292                           ;K_WEISSBIER.c: 542:     lcdData('-');
  3293  0011BC  0E2D               	movlw	45
  3294  0011BE  EC38  F01D         	call	_lcdData
  3295                           
  3296                           ;K_WEISSBIER.c: 544:     lcdCommand(0xA8);
  3297  0011C2  0EA8               	movlw	168
  3298  0011C4  EC5C  F01B         	call	_lcdCommand
  3299                           
  3300                           ;K_WEISSBIER.c: 545:     lcdData('F');
  3301  0011C8  0E46               	movlw	70
  3302  0011CA  EC38  F01D         	call	_lcdData
  3303                           
  3304                           ;K_WEISSBIER.c: 546:     lcdData('I');
  3305  0011CE  0E49               	movlw	73
  3306  0011D0  EC38  F01D         	call	_lcdData
  3307                           
  3308                           ;K_WEISSBIER.c: 547:     lcdData('M');
  3309  0011D4  0E4D               	movlw	77
  3310  0011D6  EC38  F01D         	call	_lcdData
  3311                           
  3312                           ;K_WEISSBIER.c: 548:     lcdData(0x00);
  3313  0011DA  0E00               	movlw	0
  3314  0011DC  EC38  F01D         	call	_lcdData
  3315                           
  3316                           ;K_WEISSBIER.c: 549:     lcdData('D');
  3317  0011E0  0E44               	movlw	68
  3318  0011E2  EC38  F01D         	call	_lcdData
  3319                           
  3320                           ;K_WEISSBIER.c: 550:     lcdData('A');
  3321  0011E6  0E41               	movlw	65
  3322  0011E8  EC38  F01D         	call	_lcdData
  3323                           
  3324                           ;K_WEISSBIER.c: 551:     lcdData(0x00);
  3325  0011EC  0E00               	movlw	0
  3326  0011EE  EC38  F01D         	call	_lcdData
  3327                           
  3328                           ;K_WEISSBIER.c: 552:     lcdData('B');
  3329  0011F2  0E42               	movlw	66
  3330  0011F4  EC38  F01D         	call	_lcdData
  3331                           
  3332                           ;K_WEISSBIER.c: 553:     lcdData('R');
  3333  0011F8  0E52               	movlw	82
  3334  0011FA  EC38  F01D         	call	_lcdData
  3335                           
  3336                           ;K_WEISSBIER.c: 554:     lcdData('A');
  3337  0011FE  0E41               	movlw	65
  3338  001200  EC38  F01D         	call	_lcdData
  3339                           
  3340                           ;K_WEISSBIER.c: 555:     lcdData('S');
  3341  001204  0E53               	movlw	83
  3342  001206  EC38  F01D         	call	_lcdData
  3343                           
  3344                           ;K_WEISSBIER.c: 556:     lcdData('S');
  3345  00120A  0E53               	movlw	83
  3346  00120C  EC38  F01D         	call	_lcdData
  3347                           
  3348                           ;K_WEISSBIER.c: 557:     lcdData('A');
  3349  001210  0E41               	movlw	65
  3350  001212  EC38  F01D         	call	_lcdData
  3351                           
  3352                           ;K_WEISSBIER.c: 558:     lcdData('G');
  3353  001216  0E47               	movlw	71
  3354  001218  EC38  F01D         	call	_lcdData
  3355                           
  3356                           ;K_WEISSBIER.c: 559:     lcdData('E');
  3357  00121C  0E45               	movlw	69
  3358  00121E  EC38  F01D         	call	_lcdData
  3359                           
  3360                           ;K_WEISSBIER.c: 560:     lcdData('M');
  3361  001222  0E4D               	movlw	77
  3362  001224  EC38  F01D         	call	_lcdData
  3363                           
  3364                           ;K_WEISSBIER.c: 563:     lcdCommand(0xD0);
  3365  001228  0ED0               	movlw	208
  3366  00122A  EC5C  F01B         	call	_lcdCommand
  3367                           
  3368                           ;K_WEISSBIER.c: 564:     lcdData('-');
  3369  00122E  0E2D               	movlw	45
  3370  001230  EC38  F01D         	call	_lcdData
  3371                           
  3372                           ;K_WEISSBIER.c: 565:     lcdData('-');
  3373  001234  0E2D               	movlw	45
  3374  001236  EC38  F01D         	call	_lcdData
  3375                           
  3376                           ;K_WEISSBIER.c: 566:     lcdData('-');
  3377  00123A  0E2D               	movlw	45
  3378  00123C  EC38  F01D         	call	_lcdData
  3379                           
  3380                           ;K_WEISSBIER.c: 567:     lcdData('-');
  3381  001240  0E2D               	movlw	45
  3382  001242  EC38  F01D         	call	_lcdData
  3383                           
  3384                           ;K_WEISSBIER.c: 568:     lcdData('-');
  3385  001246  0E2D               	movlw	45
  3386  001248  EC38  F01D         	call	_lcdData
  3387                           
  3388                           ;K_WEISSBIER.c: 569:     lcdData('-');
  3389  00124C  0E2D               	movlw	45
  3390  00124E  EC38  F01D         	call	_lcdData
  3391                           
  3392                           ;K_WEISSBIER.c: 570:     lcdData('-');
  3393  001252  0E2D               	movlw	45
  3394  001254  EC38  F01D         	call	_lcdData
  3395                           
  3396                           ;K_WEISSBIER.c: 571:     lcdData('-');
  3397  001258  0E2D               	movlw	45
  3398  00125A  EC38  F01D         	call	_lcdData
  3399                           
  3400                           ;K_WEISSBIER.c: 572:     lcdData('-');
  3401  00125E  0E2D               	movlw	45
  3402  001260  EC38  F01D         	call	_lcdData
  3403                           
  3404                           ;K_WEISSBIER.c: 573:     lcdData('-');
  3405  001264  0E2D               	movlw	45
  3406  001266  EC38  F01D         	call	_lcdData
  3407                           
  3408                           ;K_WEISSBIER.c: 574:     lcdData('-');
  3409  00126A  0E2D               	movlw	45
  3410  00126C  EC38  F01D         	call	_lcdData
  3411                           
  3412                           ;K_WEISSBIER.c: 575:     lcdData('-');
  3413  001270  0E2D               	movlw	45
  3414  001272  EC38  F01D         	call	_lcdData
  3415                           
  3416                           ;K_WEISSBIER.c: 576:     lcdData('-');
  3417  001276  0E2D               	movlw	45
  3418  001278  EC38  F01D         	call	_lcdData
  3419                           
  3420                           ;K_WEISSBIER.c: 577:     lcdData('-');
  3421  00127C  0E2D               	movlw	45
  3422  00127E  EC38  F01D         	call	_lcdData
  3423                           
  3424                           ;K_WEISSBIER.c: 578:     lcdData('-');
  3425  001282  0E2D               	movlw	45
  3426  001284  EC38  F01D         	call	_lcdData
  3427                           
  3428                           ;K_WEISSBIER.c: 579:     lcdData('-');
  3429  001288  0E2D               	movlw	45
  3430  00128A  EC38  F01D         	call	_lcdData
  3431  00128E                     
  3432                           ;K_WEISSBIER.c: 580:     valor = 2500;
  3433  00128E  0E09               	movlw	9
  3434  001290  6E36               	movwf	(_valor+1)^0,c
  3435  001292  0EC4               	movlw	196
  3436  001294  6E35               	movwf	_valor^0,c
  3437  001296                     
  3438                           ;K_WEISSBIER.c: 582:      pwmSet2(50);
  3439  001296  0E32               	movlw	50
  3440  001298  EC11  F01C         	call	_pwmSet2
  3441  00129C                     
  3442                           ;K_WEISSBIER.c: 583:      atraso_ms(50);
  3443  00129C  0E00               	movlw	0
  3444  00129E  6E1B               	movwf	(atraso_ms@valor+1)^0,c
  3445  0012A0  0E32               	movlw	50
  3446  0012A2  6E1A               	movwf	atraso_ms@valor^0,c
  3447  0012A4  ECAF  F01C         	call	_atraso_ms	;wreg free
  3448  0012A8                     
  3449                           ;K_WEISSBIER.c: 584:      pwmSet2(0);
  3450  0012A8  0E00               	movlw	0
  3451  0012AA  EC11  F01C         	call	_pwmSet2
  3452  0012AE                     
  3453                           ;K_WEISSBIER.c: 585:      atraso_ms(200);
  3454  0012AE  0E00               	movlw	0
  3455  0012B0  6E1B               	movwf	(atraso_ms@valor+1)^0,c
  3456  0012B2  0EC8               	movlw	200
  3457  0012B4  6E1A               	movwf	atraso_ms@valor^0,c
  3458  0012B6  ECAF  F01C         	call	_atraso_ms	;wreg free
  3459  0012BA                     
  3460                           ;K_WEISSBIER.c: 586:      pwmSet2(50);
  3461  0012BA  0E32               	movlw	50
  3462  0012BC  EC11  F01C         	call	_pwmSet2
  3463  0012C0                     
  3464                           ;K_WEISSBIER.c: 587:      atraso_ms(50);
  3465  0012C0  0E00               	movlw	0
  3466  0012C2  6E1B               	movwf	(atraso_ms@valor+1)^0,c
  3467  0012C4  0E32               	movlw	50
  3468  0012C6  6E1A               	movwf	atraso_ms@valor^0,c
  3469  0012C8  ECAF  F01C         	call	_atraso_ms	;wreg free
  3470  0012CC                     
  3471                           ;K_WEISSBIER.c: 588:      pwmSet2(0);
  3472  0012CC  0E00               	movlw	0
  3473  0012CE  EC11  F01C         	call	_pwmSet2
  3474  0012D2                     
  3475                           ;K_WEISSBIER.c: 589:      atraso_ms(200);
  3476  0012D2  0E00               	movlw	0
  3477  0012D4  6E1B               	movwf	(atraso_ms@valor+1)^0,c
  3478  0012D6  0EC8               	movlw	200
  3479  0012D8  6E1A               	movwf	atraso_ms@valor^0,c
  3480  0012DA  ECAF  F01C         	call	_atraso_ms	;wreg free
  3481  0012DE                     
  3482                           ;K_WEISSBIER.c: 590:      pwmSet2(50);
  3483  0012DE  0E32               	movlw	50
  3484  0012E0  EC11  F01C         	call	_pwmSet2
  3485  0012E4                     
  3486                           ;K_WEISSBIER.c: 591:      atraso_ms(50);
  3487  0012E4  0E00               	movlw	0
  3488  0012E6  6E1B               	movwf	(atraso_ms@valor+1)^0,c
  3489  0012E8  0E32               	movlw	50
  3490  0012EA  6E1A               	movwf	atraso_ms@valor^0,c
  3491  0012EC  ECAF  F01C         	call	_atraso_ms	;wreg free
  3492  0012F0                     
  3493                           ;K_WEISSBIER.c: 592:      pwmSet2(0);
  3494  0012F0  0E00               	movlw	0
  3495  0012F2  EC11  F01C         	call	_pwmSet2
  3496  0012F6                     
  3497                           ;K_WEISSBIER.c: 593:      atraso_ms(200);
  3498  0012F6  0E00               	movlw	0
  3499  0012F8  6E1B               	movwf	(atraso_ms@valor+1)^0,c
  3500  0012FA  0EC8               	movlw	200
  3501  0012FC  6E1A               	movwf	atraso_ms@valor^0,c
  3502  0012FE  ECAF  F01C         	call	_atraso_ms	;wreg free
  3503  001302                     
  3504                           ;K_WEISSBIER.c: 594:      pwmSet2(50);
  3505  001302  0E32               	movlw	50
  3506  001304  EC11  F01C         	call	_pwmSet2
  3507  001308                     
  3508                           ;K_WEISSBIER.c: 595:      atraso_ms(50);
  3509  001308  0E00               	movlw	0
  3510  00130A  6E1B               	movwf	(atraso_ms@valor+1)^0,c
  3511  00130C  0E32               	movlw	50
  3512  00130E  6E1A               	movwf	atraso_ms@valor^0,c
  3513  001310  ECAF  F01C         	call	_atraso_ms	;wreg free
  3514  001314                     
  3515                           ;K_WEISSBIER.c: 596:      pwmSet2(0);
  3516  001314  0E00               	movlw	0
  3517  001316  EC11  F01C         	call	_pwmSet2
  3518  00131A                     l2970:
  3519                           
  3520                           ;K_WEISSBIER.c: 600:      if((i==7)&&(valor<=9900))
  3521  00131A  0E07               	movlw	7
  3522  00131C  1833               	xorwf	_i^0,w,c
  3523  00131E  1034               	iorwf	(_i+1)^0,w,c
  3524  001320  A4D8               	btfss	status,2,c
  3525  001322  EF95  F009         	goto	u2391
  3526  001326  EF97  F009         	goto	u2390
  3527  00132A                     u2391:
  3528  00132A  EF06  F00A         	goto	l2980
  3529  00132E                     u2390:
  3530  00132E  0EAD               	movlw	173
  3531  001330  5C35               	subwf	_valor^0,w,c
  3532  001332  0E26               	movlw	38
  3533  001334  5836               	subwfb	(_valor+1)^0,w,c
  3534  001336  B0D8               	btfsc	status,0,c
  3535  001338  EFA0  F009         	goto	u2401
  3536  00133C  EFA2  F009         	goto	u2400
  3537  001340                     u2401:
  3538  001340  EF06  F00A         	goto	l2980
  3539  001344                     u2400:
  3540  001344                     
  3541                           ;K_WEISSBIER.c: 601:     {;K_WEISSBIER.c: 602:     lcdCommand(0x01);
  3542  001344  0E01               	movlw	1
  3543  001346  EC5C  F01B         	call	_lcdCommand
  3544                           
  3545                           ;K_WEISSBIER.c: 603:     lcdCommand(0x85);
  3546  00134A  0E85               	movlw	133
  3547  00134C  EC5C  F01B         	call	_lcdCommand
  3548                           
  3549                           ;K_WEISSBIER.c: 604:     lcdData('F');
  3550  001350  0E46               	movlw	70
  3551  001352  EC38  F01D         	call	_lcdData
  3552                           
  3553                           ;K_WEISSBIER.c: 605:     lcdData('E');
  3554  001356  0E45               	movlw	69
  3555  001358  EC38  F01D         	call	_lcdData
  3556                           
  3557                           ;K_WEISSBIER.c: 606:     lcdData('R');
  3558  00135C  0E52               	movlw	82
  3559  00135E  EC38  F01D         	call	_lcdData
  3560                           
  3561                           ;K_WEISSBIER.c: 607:     lcdData('V');
  3562  001362  0E56               	movlw	86
  3563  001364  EC38  F01D         	call	_lcdData
  3564                           
  3565                           ;K_WEISSBIER.c: 608:     lcdData('U');
  3566  001368  0E55               	movlw	85
  3567  00136A  EC38  F01D         	call	_lcdData
  3568                           
  3569                           ;K_WEISSBIER.c: 609:     lcdData('R');
  3570  00136E  0E52               	movlw	82
  3571  001370  EC38  F01D         	call	_lcdData
  3572                           
  3573                           ;K_WEISSBIER.c: 610:     lcdData('A');
  3574  001374  0E41               	movlw	65
  3575  001376  EC38  F01D         	call	_lcdData
  3576                           
  3577                           ;K_WEISSBIER.c: 611:     lcdCommand(0xC0);
  3578  00137A  0EC0               	movlw	192
  3579  00137C  EC5C  F01B         	call	_lcdCommand
  3580                           
  3581                           ;K_WEISSBIER.c: 612:     lcdData('I');
  3582  001380  0E49               	movlw	73
  3583  001382  EC38  F01D         	call	_lcdData
  3584                           
  3585                           ;K_WEISSBIER.c: 613:     lcdData('N');
  3586  001386  0E4E               	movlw	78
  3587  001388  EC38  F01D         	call	_lcdData
  3588                           
  3589                           ;K_WEISSBIER.c: 614:     lcdData('S');
  3590  00138C  0E53               	movlw	83
  3591  00138E  EC38  F01D         	call	_lcdData
  3592                           
  3593                           ;K_WEISSBIER.c: 615:     lcdData('I');
  3594  001392  0E49               	movlw	73
  3595  001394  EC38  F01D         	call	_lcdData
  3596                           
  3597                           ;K_WEISSBIER.c: 616:     lcdData('R');
  3598  001398  0E52               	movlw	82
  3599  00139A  EC38  F01D         	call	_lcdData
  3600                           
  3601                           ;K_WEISSBIER.c: 617:     lcdData('A');
  3602  00139E  0E41               	movlw	65
  3603  0013A0  EC38  F01D         	call	_lcdData
  3604                           
  3605                           ;K_WEISSBIER.c: 618:     lcdData(0x00);
  3606  0013A4  0E00               	movlw	0
  3607  0013A6  EC38  F01D         	call	_lcdData
  3608                           
  3609                           ;K_WEISSBIER.c: 619:     lcdData('L');
  3610  0013AA  0E4C               	movlw	76
  3611  0013AC  EC38  F01D         	call	_lcdData
  3612                           
  3613                           ;K_WEISSBIER.c: 620:     lcdData('U');
  3614  0013B0  0E55               	movlw	85
  3615  0013B2  EC38  F01D         	call	_lcdData
  3616                           
  3617                           ;K_WEISSBIER.c: 621:     lcdData('P');
  3618  0013B6  0E50               	movlw	80
  3619  0013B8  EC38  F01D         	call	_lcdData
  3620                           
  3621                           ;K_WEISSBIER.c: 622:     lcdData('U');
  3622  0013BC  0E55               	movlw	85
  3623  0013BE  EC38  F01D         	call	_lcdData
  3624                           
  3625                           ;K_WEISSBIER.c: 623:     lcdData('L');
  3626  0013C2  0E4C               	movlw	76
  3627  0013C4  EC38  F01D         	call	_lcdData
  3628                           
  3629                           ;K_WEISSBIER.c: 624:     lcdData('0');
  3630  0013C8  0E30               	movlw	48
  3631  0013CA  EC38  F01D         	call	_lcdData
  3632                           
  3633                           ;K_WEISSBIER.c: 625:     lcdData(0x00);
  3634  0013CE  0E00               	movlw	0
  3635  0013D0  EC38  F01D         	call	_lcdData
  3636                           
  3637                           ;K_WEISSBIER.c: 626:     lcdData('2');
  3638  0013D4  0E32               	movlw	50
  3639  0013D6  EC38  F01D         	call	_lcdData
  3640                           
  3641                           ;K_WEISSBIER.c: 627:     lcdCommand(0xDB);
  3642  0013DA  0EDB               	movlw	219
  3643  0013DC  EC5C  F01B         	call	_lcdCommand
  3644                           
  3645                           ;K_WEISSBIER.c: 628:     lcdData('O');
  3646  0013E0  0E4F               	movlw	79
  3647  0013E2  EC38  F01D         	call	_lcdData
  3648                           
  3649                           ;K_WEISSBIER.c: 629:     lcdData('K');
  3650  0013E6  0E4B               	movlw	75
  3651  0013E8  EC38  F01D         	call	_lcdData
  3652                           
  3653                           ;K_WEISSBIER.c: 630:     lcdData('(');
  3654  0013EC  0E28               	movlw	40
  3655  0013EE  EC38  F01D         	call	_lcdData
  3656                           
  3657                           ;K_WEISSBIER.c: 631:     lcdData('#');
  3658  0013F2  0E23               	movlw	35
  3659  0013F4  EC38  F01D         	call	_lcdData
  3660                           
  3661                           ;K_WEISSBIER.c: 632:     lcdData(')');
  3662  0013F8  0E29               	movlw	41
  3663  0013FA  EC38  F01D         	call	_lcdData
  3664  0013FE                     
  3665                           ;K_WEISSBIER.c: 633:      pwmSet1(0);
  3666  0013FE  0E00               	movlw	0
  3667  001400  EC47  F01C         	call	_pwmSet1
  3668  001404                     
  3669                           ;K_WEISSBIER.c: 634:      i = 10;
  3670  001404  0E00               	movlw	0
  3671  001406  6E34               	movwf	(_i+1)^0,c
  3672  001408  0E0A               	movlw	10
  3673  00140A  6E33               	movwf	_i^0,c
  3674  00140C                     l2980:
  3675                           
  3676                           ;K_WEISSBIER.c: 639:      Teclado();
  3677  00140C  EC83  F017         	call	_Teclado	;wreg free
  3678  001410                     
  3679                           ;K_WEISSBIER.c: 640:      kpDebounce();
  3680  001410  EC5E  F019         	call	_kpDebounce	;wreg free
  3681  001414                     
  3682                           ;K_WEISSBIER.c: 642:      slot = 2;
  3683  001414  0E02               	movlw	2
  3684  001416  6E2A               	movwf	k_weissbier@slot^0,c
  3685                           
  3686                           ;K_WEISSBIER.c: 643:      break;
  3687  001418  EF3C  F00B         	goto	l3022
  3688  00141C                     l2986:
  3689                           
  3690                           ;K_WEISSBIER.c: 646:     if((valor >= (4300 +1))&&(i < 9))
  3691  00141C  0ECD               	movlw	205
  3692  00141E  5C35               	subwf	_valor^0,w,c
  3693  001420  0E10               	movlw	16
  3694  001422  5836               	subwfb	(_valor+1)^0,w,c
  3695  001424  A0D8               	btfss	status,0,c
  3696  001426  EF17  F00A         	goto	u2411
  3697  00142A  EF19  F00A         	goto	u2410
  3698  00142E                     u2411:
  3699  00142E  EF3A  F00B         	goto	l3016
  3700  001432                     u2410:
  3701  001432  5034               	movf	(_i+1)^0,w,c
  3702  001434  E107               	bnz	u2421
  3703  001436  0E09               	movlw	9
  3704  001438  5C33               	subwf	_i^0,w,c
  3705  00143A  B0D8               	btfsc	status,0,c
  3706  00143C  EF22  F00A         	goto	u2421
  3707  001440  EF24  F00A         	goto	u2420
  3708  001444                     u2421:
  3709  001444  EF3A  F00B         	goto	l3016
  3710  001448                     u2420:
  3711  001448                     
  3712                           ;K_WEISSBIER.c: 647:     {;K_WEISSBIER.c: 649:     lcdCommand(0xC0);
  3713  001448  0EC0               	movlw	192
  3714  00144A  EC5C  F01B         	call	_lcdCommand
  3715                           
  3716                           ;K_WEISSBIER.c: 650:     lcdData((time/1000)%10 + '0');
  3717  00144E  0E03               	movlw	3
  3718  001450  6E1D               	movwf	(___lwdiv@divisor+1)^0,c
  3719  001452  0EE8               	movlw	232
  3720  001454  6E1C               	movwf	___lwdiv@divisor^0,c
  3721  001456  C003  F01A         	movff	_time,___lwdiv@dividend
  3722  00145A  C004  F01B         	movff	_time+1,___lwdiv@dividend+1
  3723  00145E  ECD7  F01B         	call	___lwdiv	;wreg free
  3724  001462  C01A  F021         	movff	?___lwdiv,___lwmod@dividend
  3725  001466  C01B  F022         	movff	?___lwdiv+1,___lwmod@dividend+1
  3726  00146A  0E00               	movlw	0
  3727  00146C  6E24               	movwf	(___lwmod@divisor+1)^0,c
  3728  00146E  0E0A               	movlw	10
  3729  001470  6E23               	movwf	___lwmod@divisor^0,c
  3730  001472  EC7D  F01C         	call	___lwmod	;wreg free
  3731  001476  5021               	movf	?___lwmod^0,w,c
  3732  001478  0F30               	addlw	48
  3733  00147A  EC38  F01D         	call	_lcdData
  3734                           
  3735                           ;K_WEISSBIER.c: 651:     lcdData((time/100)%10 + '0');
  3736  00147E  0E00               	movlw	0
  3737  001480  6E1D               	movwf	(___lwdiv@divisor+1)^0,c
  3738  001482  0E64               	movlw	100
  3739  001484  6E1C               	movwf	___lwdiv@divisor^0,c
  3740  001486  C003  F01A         	movff	_time,___lwdiv@dividend
  3741  00148A  C004  F01B         	movff	_time+1,___lwdiv@dividend+1
  3742  00148E  ECD7  F01B         	call	___lwdiv	;wreg free
  3743  001492  C01A  F021         	movff	?___lwdiv,___lwmod@dividend
  3744  001496  C01B  F022         	movff	?___lwdiv+1,___lwmod@dividend+1
  3745  00149A  0E00               	movlw	0
  3746  00149C  6E24               	movwf	(___lwmod@divisor+1)^0,c
  3747  00149E  0E0A               	movlw	10
  3748  0014A0  6E23               	movwf	___lwmod@divisor^0,c
  3749  0014A2  EC7D  F01C         	call	___lwmod	;wreg free
  3750  0014A6  5021               	movf	?___lwmod^0,w,c
  3751  0014A8  0F30               	addlw	48
  3752  0014AA  EC38  F01D         	call	_lcdData
  3753                           
  3754                           ;K_WEISSBIER.c: 652:     lcdData(0x00);
  3755  0014AE  0E00               	movlw	0
  3756  0014B0  EC38  F01D         	call	_lcdData
  3757                           
  3758                           ;K_WEISSBIER.c: 653:     lcdData('m');
  3759  0014B4  0E6D               	movlw	109
  3760  0014B6  EC38  F01D         	call	_lcdData
  3761                           
  3762                           ;K_WEISSBIER.c: 654:     lcdData('i');
  3763  0014BA  0E69               	movlw	105
  3764  0014BC  EC38  F01D         	call	_lcdData
  3765                           
  3766                           ;K_WEISSBIER.c: 655:     lcdData('n');
  3767  0014C0  0E6E               	movlw	110
  3768  0014C2  EC38  F01D         	call	_lcdData
  3769  0014C6                     
  3770                           ;K_WEISSBIER.c: 657:     if(time != 0 )
  3771  0014C6  5003               	movf	_time^0,w,c
  3772  0014C8  1004               	iorwf	(_time+1)^0,w,c
  3773  0014CA  B4D8               	btfsc	status,2,c
  3774  0014CC  EF6A  F00A         	goto	u2431
  3775  0014D0  EF6C  F00A         	goto	u2430
  3776  0014D4                     u2431:
  3777  0014D4  EFE9  F00A         	goto	l3014
  3778  0014D8                     u2430:
  3779  0014D8                     
  3780                           ;K_WEISSBIER.c: 658:     {;K_WEISSBIER.c: 659:       time --;
  3781  0014D8  0603               	decf	_time^0,f,c
  3782  0014DA  A0D8               	btfss	status,0,c
  3783  0014DC  0604               	decf	(_time+1)^0,f,c
  3784                           
  3785                           ;K_WEISSBIER.c: 660:      }
  3786  0014DE  EF3A  F00B         	goto	l3016
  3787  0014E2                     l2996:
  3788                           
  3789                           ;K_WEISSBIER.c: 668:             time = 2000;
  3790  0014E2  0E07               	movlw	7
  3791  0014E4  6E04               	movwf	(_time+1)^0,c
  3792  0014E6  0ED0               	movlw	208
  3793  0014E8  6E03               	movwf	_time^0,c
  3794                           
  3795                           ;K_WEISSBIER.c: 669:             break;
  3796  0014EA  EF3A  F00B         	goto	l3016
  3797  0014EE                     l2998:
  3798                           
  3799                           ;K_WEISSBIER.c: 671:         valor = 5200 ;
  3800  0014EE  0E14               	movlw	20
  3801  0014F0  6E36               	movwf	(_valor+1)^0,c
  3802  0014F2  0E50               	movlw	80
  3803  0014F4  6E35               	movwf	_valor^0,c
  3804                           
  3805                           ;K_WEISSBIER.c: 672:         cont = 0;
  3806  0014F6  0E00               	movlw	0
  3807  0014F8  6E06               	movwf	(_cont+1)^0,c
  3808  0014FA  0E00               	movlw	0
  3809  0014FC  6E05               	movwf	_cont^0,c
  3810                           
  3811                           ;K_WEISSBIER.c: 673:         i=1;
  3812  0014FE  0E00               	movlw	0
  3813  001500  6E34               	movwf	(_i+1)^0,c
  3814  001502  0E01               	movlw	1
  3815  001504  6E33               	movwf	_i^0,c
  3816                           
  3817                           ;K_WEISSBIER.c: 674:         time = 1500;
  3818  001506  0E05               	movlw	5
  3819  001508  6E04               	movwf	(_time+1)^0,c
  3820  00150A  0EDC               	movlw	220
  3821  00150C  6E03               	movwf	_time^0,c
  3822                           
  3823                           ;K_WEISSBIER.c: 675:             break;
  3824  00150E  EF3A  F00B         	goto	l3016
  3825  001512                     l3000:
  3826                           
  3827                           ;K_WEISSBIER.c: 677:         valor = 6500 ;
  3828  001512  0E19               	movlw	25
  3829  001514  6E36               	movwf	(_valor+1)^0,c
  3830  001516  0E64               	movlw	100
  3831  001518  6E35               	movwf	_valor^0,c
  3832                           
  3833                           ;K_WEISSBIER.c: 678:         cont = 0;
  3834  00151A  0E00               	movlw	0
  3835  00151C  6E06               	movwf	(_cont+1)^0,c
  3836  00151E  0E00               	movlw	0
  3837  001520  6E05               	movwf	_cont^0,c
  3838                           
  3839                           ;K_WEISSBIER.c: 679:         i=2;
  3840  001522  0E00               	movlw	0
  3841  001524  6E34               	movwf	(_i+1)^0,c
  3842  001526  0E02               	movlw	2
  3843  001528  6E33               	movwf	_i^0,c
  3844                           
  3845                           ;K_WEISSBIER.c: 680:         time = 4000;
  3846  00152A  0E0F               	movlw	15
  3847  00152C  6E04               	movwf	(_time+1)^0,c
  3848  00152E  0EA0               	movlw	160
  3849  001530  6E03               	movwf	_time^0,c
  3850                           
  3851                           ;K_WEISSBIER.c: 681:             break;
  3852  001532  EF3A  F00B         	goto	l3016
  3853  001536                     l3002:
  3854                           
  3855                           ;K_WEISSBIER.c: 683:         valor = 7200 ;
  3856  001536  0E1C               	movlw	28
  3857  001538  6E36               	movwf	(_valor+1)^0,c
  3858  00153A  0E20               	movlw	32
  3859  00153C  6E35               	movwf	_valor^0,c
  3860                           
  3861                           ;K_WEISSBIER.c: 684:         cont = 0;
  3862  00153E  0E00               	movlw	0
  3863  001540  6E06               	movwf	(_cont+1)^0,c
  3864  001542  0E00               	movlw	0
  3865  001544  6E05               	movwf	_cont^0,c
  3866                           
  3867                           ;K_WEISSBIER.c: 685:         i=3;
  3868  001546  0E00               	movlw	0
  3869  001548  6E34               	movwf	(_i+1)^0,c
  3870  00154A  0E03               	movlw	3
  3871  00154C  6E33               	movwf	_i^0,c
  3872                           
  3873                           ;K_WEISSBIER.c: 686:         time = 2000;
  3874  00154E  0E07               	movlw	7
  3875  001550  6E04               	movwf	(_time+1)^0,c
  3876  001552  0ED0               	movlw	208
  3877  001554  6E03               	movwf	_time^0,c
  3878                           
  3879                           ;K_WEISSBIER.c: 687:             break;
  3880  001556  EF3A  F00B         	goto	l3016
  3881  00155A                     l3004:
  3882                           
  3883                           ;K_WEISSBIER.c: 689:         valor = 7800 ;
  3884  00155A  0E1E               	movlw	30
  3885  00155C  6E36               	movwf	(_valor+1)^0,c
  3886  00155E  0E78               	movlw	120
  3887  001560  6E35               	movwf	_valor^0,c
  3888                           
  3889                           ;K_WEISSBIER.c: 690:         cont = 0;
  3890  001562  0E00               	movlw	0
  3891  001564  6E06               	movwf	(_cont+1)^0,c
  3892  001566  0E00               	movlw	0
  3893  001568  6E05               	movwf	_cont^0,c
  3894                           
  3895                           ;K_WEISSBIER.c: 691:         i=4;
  3896  00156A  0E00               	movlw	0
  3897  00156C  6E34               	movwf	(_i+1)^0,c
  3898  00156E  0E04               	movlw	4
  3899  001570  6E33               	movwf	_i^0,c
  3900                           
  3901                           ;K_WEISSBIER.c: 692:         time = 1000;
  3902  001572  0E03               	movlw	3
  3903  001574  6E04               	movwf	(_time+1)^0,c
  3904  001576  0EE8               	movlw	232
  3905  001578  6E03               	movwf	_time^0,c
  3906                           
  3907                           ;K_WEISSBIER.c: 693:             break;
  3908  00157A  EF3A  F00B         	goto	l3016
  3909  00157E                     l3006:
  3910                           
  3911                           ;K_WEISSBIER.c: 695:         valor = 9900 ;
  3912  00157E  0E26               	movlw	38
  3913  001580  6E36               	movwf	(_valor+1)^0,c
  3914  001582  0EAC               	movlw	172
  3915  001584  6E35               	movwf	_valor^0,c
  3916                           
  3917                           ;K_WEISSBIER.c: 696:         cont = 0;
  3918  001586  0E00               	movlw	0
  3919  001588  6E06               	movwf	(_cont+1)^0,c
  3920  00158A  0E00               	movlw	0
  3921  00158C  6E05               	movwf	_cont^0,c
  3922                           
  3923                           ;K_WEISSBIER.c: 697:         i=5;
  3924  00158E  0E00               	movlw	0
  3925  001590  6E34               	movwf	(_i+1)^0,c
  3926  001592  0E05               	movlw	5
  3927  001594  6E33               	movwf	_i^0,c
  3928                           
  3929                           ;K_WEISSBIER.c: 698:         time = 1100;
  3930  001596  0E04               	movlw	4
  3931  001598  6E04               	movwf	(_time+1)^0,c
  3932  00159A  0E4C               	movlw	76
  3933  00159C  6E03               	movwf	_time^0,c
  3934                           
  3935                           ;K_WEISSBIER.c: 699:             break;
  3936  00159E  EF3A  F00B         	goto	l3016
  3937  0015A2                     l3008:
  3938                           
  3939                           ;K_WEISSBIER.c: 701:         cont = 0;
  3940  0015A2  0E00               	movlw	0
  3941  0015A4  6E06               	movwf	(_cont+1)^0,c
  3942  0015A6  0E00               	movlw	0
  3943  0015A8  6E05               	movwf	_cont^0,c
  3944                           
  3945                           ;K_WEISSBIER.c: 702:         i=7;
  3946  0015AA  0E00               	movlw	0
  3947  0015AC  6E34               	movwf	(_i+1)^0,c
  3948  0015AE  0E07               	movlw	7
  3949  0015B0  6E33               	movwf	_i^0,c
  3950                           
  3951                           ;K_WEISSBIER.c: 703:         time = 1000;
  3952  0015B2  0E03               	movlw	3
  3953  0015B4  6E04               	movwf	(_time+1)^0,c
  3954  0015B6  0EE8               	movlw	232
  3955  0015B8  6E03               	movwf	_time^0,c
  3956                           
  3957                           ;K_WEISSBIER.c: 704:             break;
  3958  0015BA  EF3A  F00B         	goto	l3016
  3959  0015BE                     l3010:
  3960                           
  3961                           ;K_WEISSBIER.c: 706:         cont = 0;
  3962  0015BE  0E00               	movlw	0
  3963  0015C0  6E06               	movwf	(_cont+1)^0,c
  3964  0015C2  0E00               	movlw	0
  3965  0015C4  6E05               	movwf	_cont^0,c
  3966                           
  3967                           ;K_WEISSBIER.c: 707:         i=8;
  3968  0015C6  0E00               	movlw	0
  3969  0015C8  6E34               	movwf	(_i+1)^0,c
  3970  0015CA  0E08               	movlw	8
  3971  0015CC  6E33               	movwf	_i^0,c
  3972                           
  3973                           ;K_WEISSBIER.c: 708:             break;
  3974  0015CE  EF3A  F00B         	goto	l3016
  3975  0015D2                     l3014:
  3976  0015D2  C035  F028         	movff	_valor,??_k_weissbier
  3977  0015D6  C036  F029         	movff	_valor+1,??_k_weissbier+1
  3978                           
  3979                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 6 sub-sw
      +                          itches
  3980                           ; Switch size 1, requested type "simple"
  3981                           ; Number of cases is 6, Range of values is 16 to 38
  3982                           ; switch strategies available:
  3983                           ; Name         Instructions Cycles
  3984                           ; simple_byte           19    10 (average)
  3985                           ;	Chosen strategy is simple_byte
  3986  0015DA  5029               	movf	(??_k_weissbier+1)^0,w,c
  3987  0015DC  0A10               	xorlw	16	; case 16
  3988  0015DE  B4D8               	btfsc	status,2,c
  3989  0015E0  EF08  F00B         	goto	l3226
  3990  0015E4  0A04               	xorlw	4	; case 20
  3991  0015E6  B4D8               	btfsc	status,2,c
  3992  0015E8  EF13  F00B         	goto	l3228
  3993  0015EC  0A0D               	xorlw	13	; case 25
  3994  0015EE  B4D8               	btfsc	status,2,c
  3995  0015F0  EF1A  F00B         	goto	l3230
  3996  0015F4  0A05               	xorlw	5	; case 28
  3997  0015F6  B4D8               	btfsc	status,2,c
  3998  0015F8  EF21  F00B         	goto	l3232
  3999  0015FC  0A02               	xorlw	2	; case 30
  4000  0015FE  B4D8               	btfsc	status,2,c
  4001  001600  EF28  F00B         	goto	l3234
  4002  001604  0A38               	xorlw	56	; case 38
  4003  001606  B4D8               	btfsc	status,2,c
  4004  001608  EF2F  F00B         	goto	l3236
  4005  00160C  EF3A  F00B         	goto	l3016
  4006  001610                     l3226:
  4007                           
  4008                           ; Switch size 1, requested type "simple"
  4009                           ; Number of cases is 2, Range of values is 205 to 206
  4010                           ; switch strategies available:
  4011                           ; Name         Instructions Cycles
  4012                           ; simple_byte            7     4 (average)
  4013                           ;	Chosen strategy is simple_byte
  4014  001610  5028               	movf	??_k_weissbier^0,w,c
  4015  001612  0ACD               	xorlw	205	; case 205
  4016  001614  B4D8               	btfsc	status,2,c
  4017  001616  EF71  F00A         	goto	l2996
  4018  00161A  0A03               	xorlw	3	; case 206
  4019  00161C  B4D8               	btfsc	status,2,c
  4020  00161E  EF77  F00A         	goto	l2998
  4021  001622  EF3A  F00B         	goto	l3016
  4022  001626                     l3228:
  4023                           
  4024                           ; Switch size 1, requested type "simple"
  4025                           ; Number of cases is 1, Range of values is 80 to 80
  4026                           ; switch strategies available:
  4027                           ; Name         Instructions Cycles
  4028                           ; simple_byte            4     3 (average)
  4029                           ;	Chosen strategy is simple_byte
  4030  001626  5028               	movf	??_k_weissbier^0,w,c
  4031  001628  0A50               	xorlw	80	; case 80
  4032  00162A  B4D8               	btfsc	status,2,c
  4033  00162C  EF89  F00A         	goto	l3000
  4034  001630  EF3A  F00B         	goto	l3016
  4035  001634                     l3230:
  4036                           
  4037                           ; Switch size 1, requested type "simple"
  4038                           ; Number of cases is 1, Range of values is 100 to 100
  4039                           ; switch strategies available:
  4040                           ; Name         Instructions Cycles
  4041                           ; simple_byte            4     3 (average)
  4042                           ;	Chosen strategy is simple_byte
  4043  001634  5028               	movf	??_k_weissbier^0,w,c
  4044  001636  0A64               	xorlw	100	; case 100
  4045  001638  B4D8               	btfsc	status,2,c
  4046  00163A  EF9B  F00A         	goto	l3002
  4047  00163E  EF3A  F00B         	goto	l3016
  4048  001642                     l3232:
  4049                           
  4050                           ; Switch size 1, requested type "simple"
  4051                           ; Number of cases is 1, Range of values is 32 to 32
  4052                           ; switch strategies available:
  4053                           ; Name         Instructions Cycles
  4054                           ; simple_byte            4     3 (average)
  4055                           ;	Chosen strategy is simple_byte
  4056  001642  5028               	movf	??_k_weissbier^0,w,c
  4057  001644  0A20               	xorlw	32	; case 32
  4058  001646  B4D8               	btfsc	status,2,c
  4059  001648  EFAD  F00A         	goto	l3004
  4060  00164C  EF3A  F00B         	goto	l3016
  4061  001650                     l3234:
  4062                           
  4063                           ; Switch size 1, requested type "simple"
  4064                           ; Number of cases is 1, Range of values is 120 to 120
  4065                           ; switch strategies available:
  4066                           ; Name         Instructions Cycles
  4067                           ; simple_byte            4     3 (average)
  4068                           ;	Chosen strategy is simple_byte
  4069  001650  5028               	movf	??_k_weissbier^0,w,c
  4070  001652  0A78               	xorlw	120	; case 120
  4071  001654  B4D8               	btfsc	status,2,c
  4072  001656  EFBF  F00A         	goto	l3006
  4073  00165A  EF3A  F00B         	goto	l3016
  4074  00165E                     l3236:
  4075                           
  4076                           ; Switch size 1, requested type "simple"
  4077                           ; Number of cases is 2, Range of values is 172 to 173
  4078                           ; switch strategies available:
  4079                           ; Name         Instructions Cycles
  4080                           ; simple_byte            7     4 (average)
  4081                           ;	Chosen strategy is simple_byte
  4082  00165E  5028               	movf	??_k_weissbier^0,w,c
  4083  001660  0AAC               	xorlw	172	; case 172
  4084  001662  B4D8               	btfsc	status,2,c
  4085  001664  EFD1  F00A         	goto	l3008
  4086  001668  0A01               	xorlw	1	; case 173
  4087  00166A  B4D8               	btfsc	status,2,c
  4088  00166C  EFDF  F00A         	goto	l3010
  4089  001670  EF3A  F00B         	goto	l3016
  4090  001674                     l3016:
  4091                           
  4092                           ;K_WEISSBIER.c: 714:   slot = 0 ;
  4093  001674  0E00               	movlw	0
  4094  001676  6E2A               	movwf	k_weissbier@slot^0,c
  4095  001678                     l3022:
  4096  001678  502A               	movf	k_weissbier@slot^0,w,c
  4097  00167A  6E28               	movwf	??_k_weissbier^0,c
  4098  00167C  6A29               	clrf	(??_k_weissbier+1)^0,c
  4099                           
  4100                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4101                           ; Switch size 1, requested type "simple"
  4102                           ; Number of cases is 1, Range of values is 0 to 0
  4103                           ; switch strategies available:
  4104                           ; Name         Instructions Cycles
  4105                           ; simple_byte            4     3 (average)
  4106                           ;	Chosen strategy is simple_byte
  4107  00167E  5029               	movf	(??_k_weissbier+1)^0,w,c
  4108  001680  0A00               	xorlw	0	; case 0
  4109  001682  B4D8               	btfsc	status,2,c
  4110  001684  EF46  F00B         	goto	l3238
  4111  001688  EF3A  F00B         	goto	l3016
  4112  00168C                     l3238:
  4113                           
  4114                           ; Switch size 1, requested type "simple"
  4115                           ; Number of cases is 3, Range of values is 0 to 2
  4116                           ; switch strategies available:
  4117                           ; Name         Instructions Cycles
  4118                           ; simple_byte           10     6 (average)
  4119                           ;	Chosen strategy is simple_byte
  4120  00168C  5028               	movf	??_k_weissbier^0,w,c
  4121  00168E  0A00               	xorlw	0	; case 0
  4122  001690  B4D8               	btfsc	status,2,c
  4123  001692  EFCE  F006         	goto	l2872
  4124  001696  0A01               	xorlw	1	; case 1
  4125  001698  B4D8               	btfsc	status,2,c
  4126  00169A  EF1E  F007         	goto	l2888
  4127  00169E  0A03               	xorlw	3	; case 2
  4128  0016A0  B4D8               	btfsc	status,2,c
  4129  0016A2  EF0E  F00A         	goto	l2986
  4130  0016A6  EF3A  F00B         	goto	l3016
  4131  0016AA  0012               	return		;funcret
  4132  0016AC                     __end_of_k_weissbier:
  4133                           	callstack 0
  4134                           
  4135 ;; *************** function _Teclado *****************
  4136 ;; Defined at:
  4137 ;;		line 731 in file "K_WEISSBIER.c"
  4138 ;; Parameters:    Size  Location     Type
  4139 ;;		None
  4140 ;; Auto vars:     Size  Location     Type
  4141 ;;  t               2   12[COMRAM] int 
  4142 ;; Return value:  Size  Location     Type
  4143 ;;                  1    wreg      void 
  4144 ;; Registers used:
  4145 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4146 ;; Tracked objects:
  4147 ;;		On entry : 0/0
  4148 ;;		On exit  : 0/0
  4149 ;;		Unchanged: 0/0
  4150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4151 ;;      Params:         0       0       0       0       0       0       0
  4152 ;;      Locals:         2       0       0       0       0       0       0
  4153 ;;      Temps:          0       0       0       0       0       0       0
  4154 ;;      Totals:         2       0       0       0       0       0       0
  4155 ;;Total ram usage:        2 bytes
  4156 ;; Hardware stack levels used:    1
  4157 ;; Hardware stack levels required when called:    3
  4158 ;; This function calls:
  4159 ;;		_atraso_ms
  4160 ;;		_kpRead
  4161 ;;		_lcdCommand
  4162 ;;		_lcdData
  4163 ;;		_pwmSet1
  4164 ;; This function is called by:
  4165 ;;		_k_weissbier
  4166 ;; This function uses a non-reentrant model
  4167 ;;
  4168                           
  4169                           	psect	text3
  4170  002F06                     __ptext3:
  4171                           	callstack 0
  4172  002F06                     _Teclado:
  4173                           	callstack 25
  4174  002F06                     
  4175                           ;K_WEISSBIER.c: 732:   int t ;;K_WEISSBIER.c: 734: lcdCommand(0x80);
  4176  002F06  0E80               	movlw	128
  4177  002F08  EC5C  F01B         	call	_lcdCommand
  4178                           
  4179                           ;K_WEISSBIER.c: 736: if(kpRead()!= t)
  4180  002F0C  ECB9  F01D         	call	_kpRead	;wreg free
  4181  002F10  5026               	movf	Teclado@t^0,w,c
  4182  002F12  181A               	xorwf	?_kpRead^0,w,c
  4183  002F14  E109               	bnz	u1950
  4184  002F16  5027               	movf	(Teclado@t+1)^0,w,c
  4185  002F18  181B               	xorwf	(?_kpRead+1)^0,w,c
  4186  002F1A  B4D8               	btfsc	status,2,c
  4187  002F1C  EF92  F017         	goto	u1951
  4188  002F20  EF94  F017         	goto	u1950
  4189  002F24                     u1951:
  4190  002F24  EF96  F017         	goto	l418
  4191  002F28                     u1950:
  4192  002F28  ECB9  F01D         	call	_kpRead	;wreg free
  4193  002F2C                     l418:
  4194                           
  4195                           ;K_WEISSBIER.c: 741: if((((kpRead()) & (1<<8)))&&(valor < (4300 +1)))
  4196  002F2C  ECB9  F01D         	call	_kpRead	;wreg free
  4197  002F30  A01B               	btfss	(?_kpRead+1)^0,0,c
  4198  002F32  EF9D  F017         	goto	u1961
  4199  002F36  EF9F  F017         	goto	u1960
  4200  002F3A                     u1961:
  4201  002F3A  EFF2  F017         	goto	l2636
  4202  002F3E                     u1960:
  4203  002F3E  0ECD               	movlw	205
  4204  002F40  5C35               	subwf	_valor^0,w,c
  4205  002F42  0E10               	movlw	16
  4206  002F44  5836               	subwfb	(_valor+1)^0,w,c
  4207  002F46  B0D8               	btfsc	status,0,c
  4208  002F48  EFA8  F017         	goto	u1971
  4209  002F4C  EFAA  F017         	goto	u1970
  4210  002F50                     u1971:
  4211  002F50  EFF2  F017         	goto	l2636
  4212  002F54                     u1970:
  4213  002F54                     
  4214                           ;K_WEISSBIER.c: 742: {;K_WEISSBIER.c: 743:    lcdCommand(0x01);
  4215  002F54  0E01               	movlw	1
  4216  002F56  EC5C  F01B         	call	_lcdCommand
  4217                           
  4218                           ;K_WEISSBIER.c: 744:    lcdData('M');
  4219  002F5A  0E4D               	movlw	77
  4220  002F5C  EC38  F01D         	call	_lcdData
  4221                           
  4222                           ;K_WEISSBIER.c: 745:    lcdData('A');
  4223  002F60  0E41               	movlw	65
  4224  002F62  EC38  F01D         	call	_lcdData
  4225                           
  4226                           ;K_WEISSBIER.c: 746:    lcdData('L');
  4227  002F66  0E4C               	movlw	76
  4228  002F68  EC38  F01D         	call	_lcdData
  4229                           
  4230                           ;K_WEISSBIER.c: 747:    lcdData('T');
  4231  002F6C  0E54               	movlw	84
  4232  002F6E  EC38  F01D         	call	_lcdData
  4233                           
  4234                           ;K_WEISSBIER.c: 748:    lcdData('E');
  4235  002F72  0E45               	movlw	69
  4236  002F74  EC38  F01D         	call	_lcdData
  4237                           
  4238                           ;K_WEISSBIER.c: 749:    lcdData('S');
  4239  002F78  0E53               	movlw	83
  4240  002F7A  EC38  F01D         	call	_lcdData
  4241                           
  4242                           ;K_WEISSBIER.c: 750:    lcdData(0x00);
  4243  002F7E  0E00               	movlw	0
  4244  002F80  EC38  F01D         	call	_lcdData
  4245                           
  4246                           ;K_WEISSBIER.c: 751:    lcdData('I');
  4247  002F84  0E49               	movlw	73
  4248  002F86  EC38  F01D         	call	_lcdData
  4249                           
  4250                           ;K_WEISSBIER.c: 752:    lcdData('N');
  4251  002F8A  0E4E               	movlw	78
  4252  002F8C  EC38  F01D         	call	_lcdData
  4253                           
  4254                           ;K_WEISSBIER.c: 753:    lcdData('S');
  4255  002F90  0E53               	movlw	83
  4256  002F92  EC38  F01D         	call	_lcdData
  4257                           
  4258                           ;K_WEISSBIER.c: 754:    lcdData('E');
  4259  002F96  0E45               	movlw	69
  4260  002F98  EC38  F01D         	call	_lcdData
  4261                           
  4262                           ;K_WEISSBIER.c: 755:    lcdData('R');
  4263  002F9C  0E52               	movlw	82
  4264  002F9E  EC38  F01D         	call	_lcdData
  4265                           
  4266                           ;K_WEISSBIER.c: 756:    lcdData('I');
  4267  002FA2  0E49               	movlw	73
  4268  002FA4  EC38  F01D         	call	_lcdData
  4269                           
  4270                           ;K_WEISSBIER.c: 757:    lcdData('D');
  4271  002FA8  0E44               	movlw	68
  4272  002FAA  EC38  F01D         	call	_lcdData
  4273                           
  4274                           ;K_WEISSBIER.c: 758:    lcdData('O');
  4275  002FAE  0E4F               	movlw	79
  4276  002FB0  EC38  F01D         	call	_lcdData
  4277                           
  4278                           ;K_WEISSBIER.c: 759:    lcdData('S');
  4279  002FB4  0E53               	movlw	83
  4280  002FB6  EC38  F01D         	call	_lcdData
  4281  002FBA                     
  4282                           ;K_WEISSBIER.c: 760:    pwmSet1(50);
  4283  002FBA  0E32               	movlw	50
  4284  002FBC  EC47  F01C         	call	_pwmSet1
  4285  002FC0                     
  4286                           ;K_WEISSBIER.c: 761:    valor = (4300 +1);
  4287  002FC0  0E10               	movlw	16
  4288  002FC2  6E36               	movwf	(_valor+1)^0,c
  4289  002FC4  0ECD               	movlw	205
  4290  002FC6  6E35               	movwf	_valor^0,c
  4291  002FC8                     
  4292                           ;K_WEISSBIER.c: 762:    temp = (4300 +1);
  4293  002FC8  0E10               	movlw	16
  4294  002FCA  6E08               	movwf	(_temp+1)^0,c
  4295  002FCC  0ECD               	movlw	205
  4296  002FCE  6E07               	movwf	_temp^0,c
  4297  002FD0                     
  4298                           ;K_WEISSBIER.c: 763:    cont = 0;
  4299  002FD0  0E00               	movlw	0
  4300  002FD2  6E06               	movwf	(_cont+1)^0,c
  4301  002FD4  0E00               	movlw	0
  4302  002FD6  6E05               	movwf	_cont^0,c
  4303  002FD8                     
  4304                           ;K_WEISSBIER.c: 764:    atraso_ms(550);
  4305  002FD8  0E02               	movlw	2
  4306  002FDA  6E1B               	movwf	(atraso_ms@valor+1)^0,c
  4307  002FDC  0E26               	movlw	38
  4308  002FDE  6E1A               	movwf	atraso_ms@valor^0,c
  4309  002FE0  ECAF  F01C         	call	_atraso_ms	;wreg free
  4310  002FE4                     l2636:
  4311                           
  4312                           ;K_WEISSBIER.c: 767: if((i == 9 )&&(((kpRead()) & (1<<8))))
  4313  002FE4  0E09               	movlw	9
  4314  002FE6  1833               	xorwf	_i^0,w,c
  4315  002FE8  1034               	iorwf	(_i+1)^0,w,c
  4316  002FEA  A4D8               	btfss	status,2,c
  4317  002FEC  EFFA  F017         	goto	u1981
  4318  002FF0  EFFC  F017         	goto	u1980
  4319  002FF4                     u1981:
  4320  002FF4  EF43  F018         	goto	l2646
  4321  002FF8                     u1980:
  4322  002FF8  ECB9  F01D         	call	_kpRead	;wreg free
  4323  002FFC  A01B               	btfss	(?_kpRead+1)^0,0,c
  4324  002FFE  EF03  F018         	goto	u1991
  4325  003002  EF05  F018         	goto	u1990
  4326  003006                     u1991:
  4327  003006  EF43  F018         	goto	l2646
  4328  00300A                     u1990:
  4329  00300A                     
  4330                           ;K_WEISSBIER.c: 768: {;K_WEISSBIER.c: 769:    lcdCommand(0x01);
  4331  00300A  0E01               	movlw	1
  4332  00300C  EC5C  F01B         	call	_lcdCommand
  4333                           
  4334                           ;K_WEISSBIER.c: 770:    lcdData('L');
  4335  003010  0E4C               	movlw	76
  4336  003012  EC38  F01D         	call	_lcdData
  4337                           
  4338                           ;K_WEISSBIER.c: 771:    lcdData('U');
  4339  003016  0E55               	movlw	85
  4340  003018  EC38  F01D         	call	_lcdData
  4341                           
  4342                           ;K_WEISSBIER.c: 772:    lcdData('P');
  4343  00301C  0E50               	movlw	80
  4344  00301E  EC38  F01D         	call	_lcdData
  4345                           
  4346                           ;K_WEISSBIER.c: 773:    lcdData('U');
  4347  003022  0E55               	movlw	85
  4348  003024  EC38  F01D         	call	_lcdData
  4349                           
  4350                           ;K_WEISSBIER.c: 774:    lcdData('L');
  4351  003028  0E4C               	movlw	76
  4352  00302A  EC38  F01D         	call	_lcdData
  4353                           
  4354                           ;K_WEISSBIER.c: 775:    lcdData('O');
  4355  00302E  0E4F               	movlw	79
  4356  003030  EC38  F01D         	call	_lcdData
  4357                           
  4358                           ;K_WEISSBIER.c: 776:    lcdData(0x00);
  4359  003034  0E00               	movlw	0
  4360  003036  EC38  F01D         	call	_lcdData
  4361                           
  4362                           ;K_WEISSBIER.c: 777:    lcdData('I');
  4363  00303A  0E49               	movlw	73
  4364  00303C  EC38  F01D         	call	_lcdData
  4365                           
  4366                           ;K_WEISSBIER.c: 778:    lcdData('N');
  4367  003040  0E4E               	movlw	78
  4368  003042  EC38  F01D         	call	_lcdData
  4369                           
  4370                           ;K_WEISSBIER.c: 779:    lcdData('S');
  4371  003046  0E53               	movlw	83
  4372  003048  EC38  F01D         	call	_lcdData
  4373                           
  4374                           ;K_WEISSBIER.c: 780:    lcdData('E');
  4375  00304C  0E45               	movlw	69
  4376  00304E  EC38  F01D         	call	_lcdData
  4377                           
  4378                           ;K_WEISSBIER.c: 781:    lcdData('R');
  4379  003052  0E52               	movlw	82
  4380  003054  EC38  F01D         	call	_lcdData
  4381                           
  4382                           ;K_WEISSBIER.c: 782:    lcdData('I');
  4383  003058  0E49               	movlw	73
  4384  00305A  EC38  F01D         	call	_lcdData
  4385                           
  4386                           ;K_WEISSBIER.c: 783:    lcdData('D');
  4387  00305E  0E44               	movlw	68
  4388  003060  EC38  F01D         	call	_lcdData
  4389                           
  4390                           ;K_WEISSBIER.c: 784:    lcdData('O');
  4391  003064  0E4F               	movlw	79
  4392  003066  EC38  F01D         	call	_lcdData
  4393  00306A                     
  4394                           ;K_WEISSBIER.c: 785:    cont = 0;
  4395  00306A  0E00               	movlw	0
  4396  00306C  6E06               	movwf	(_cont+1)^0,c
  4397  00306E  0E00               	movlw	0
  4398  003070  6E05               	movwf	_cont^0,c
  4399  003072                     
  4400                           ;K_WEISSBIER.c: 786:    i = 6;
  4401  003072  0E00               	movlw	0
  4402  003074  6E34               	movwf	(_i+1)^0,c
  4403  003076  0E06               	movlw	6
  4404  003078  6E33               	movwf	_i^0,c
  4405                           
  4406                           ;K_WEISSBIER.c: 787:    atraso_ms(550);
  4407  00307A  0E02               	movlw	2
  4408  00307C  6E1B               	movwf	(atraso_ms@valor+1)^0,c
  4409  00307E  0E26               	movlw	38
  4410  003080  6E1A               	movwf	atraso_ms@valor^0,c
  4411  003082  ECAF  F01C         	call	_atraso_ms	;wreg free
  4412  003086                     l2646:
  4413                           
  4414                           ;K_WEISSBIER.c: 790: if((i == 10 )&&(((kpRead()) & (1<<8))))
  4415  003086  0E0A               	movlw	10
  4416  003088  1833               	xorwf	_i^0,w,c
  4417  00308A  1034               	iorwf	(_i+1)^0,w,c
  4418  00308C  A4D8               	btfss	status,2,c
  4419  00308E  EF4B  F018         	goto	u2001
  4420  003092  EF4D  F018         	goto	u2000
  4421  003096                     u2001:
  4422  003096  EF98  F018         	goto	l422
  4423  00309A                     u2000:
  4424  00309A  ECB9  F01D         	call	_kpRead	;wreg free
  4425  00309E  A01B               	btfss	(?_kpRead+1)^0,0,c
  4426  0030A0  EF54  F018         	goto	u2011
  4427  0030A4  EF56  F018         	goto	u2010
  4428  0030A8                     u2011:
  4429  0030A8  EF98  F018         	goto	l422
  4430  0030AC                     u2010:
  4431  0030AC                     
  4432                           ;K_WEISSBIER.c: 791: {;K_WEISSBIER.c: 792:    lcdCommand(0x01);
  4433  0030AC  0E01               	movlw	1
  4434  0030AE  EC5C  F01B         	call	_lcdCommand
  4435                           
  4436                           ;K_WEISSBIER.c: 793:    lcdData('L');
  4437  0030B2  0E4C               	movlw	76
  4438  0030B4  EC38  F01D         	call	_lcdData
  4439                           
  4440                           ;K_WEISSBIER.c: 794:    lcdData('U');
  4441  0030B8  0E55               	movlw	85
  4442  0030BA  EC38  F01D         	call	_lcdData
  4443                           
  4444                           ;K_WEISSBIER.c: 795:    lcdData('P');
  4445  0030BE  0E50               	movlw	80
  4446  0030C0  EC38  F01D         	call	_lcdData
  4447                           
  4448                           ;K_WEISSBIER.c: 796:    lcdData('U');
  4449  0030C4  0E55               	movlw	85
  4450  0030C6  EC38  F01D         	call	_lcdData
  4451                           
  4452                           ;K_WEISSBIER.c: 797:    lcdData('L');
  4453  0030CA  0E4C               	movlw	76
  4454  0030CC  EC38  F01D         	call	_lcdData
  4455                           
  4456                           ;K_WEISSBIER.c: 798:    lcdData('O');
  4457  0030D0  0E4F               	movlw	79
  4458  0030D2  EC38  F01D         	call	_lcdData
  4459                           
  4460                           ;K_WEISSBIER.c: 799:    lcdData(0x00);
  4461  0030D6  0E00               	movlw	0
  4462  0030D8  EC38  F01D         	call	_lcdData
  4463                           
  4464                           ;K_WEISSBIER.c: 800:    lcdData('I');
  4465  0030DC  0E49               	movlw	73
  4466  0030DE  EC38  F01D         	call	_lcdData
  4467                           
  4468                           ;K_WEISSBIER.c: 801:    lcdData('N');
  4469  0030E2  0E4E               	movlw	78
  4470  0030E4  EC38  F01D         	call	_lcdData
  4471                           
  4472                           ;K_WEISSBIER.c: 802:    lcdData('S');
  4473  0030E8  0E53               	movlw	83
  4474  0030EA  EC38  F01D         	call	_lcdData
  4475                           
  4476                           ;K_WEISSBIER.c: 803:    lcdData('E');
  4477  0030EE  0E45               	movlw	69
  4478  0030F0  EC38  F01D         	call	_lcdData
  4479                           
  4480                           ;K_WEISSBIER.c: 804:    lcdData('R');
  4481  0030F4  0E52               	movlw	82
  4482  0030F6  EC38  F01D         	call	_lcdData
  4483                           
  4484                           ;K_WEISSBIER.c: 805:    lcdData('I');
  4485  0030FA  0E49               	movlw	73
  4486  0030FC  EC38  F01D         	call	_lcdData
  4487                           
  4488                           ;K_WEISSBIER.c: 806:    lcdData('D');
  4489  003100  0E44               	movlw	68
  4490  003102  EC38  F01D         	call	_lcdData
  4491                           
  4492                           ;K_WEISSBIER.c: 807:    lcdData('O');
  4493  003106  0E4F               	movlw	79
  4494  003108  EC38  F01D         	call	_lcdData
  4495  00310C                     
  4496                           ;K_WEISSBIER.c: 808:    cont = 0;
  4497  00310C  0E00               	movlw	0
  4498  00310E  6E06               	movwf	(_cont+1)^0,c
  4499  003110  0E00               	movlw	0
  4500  003112  6E05               	movwf	_cont^0,c
  4501  003114                     
  4502                           ;K_WEISSBIER.c: 809:    i = 6;
  4503  003114  0E00               	movlw	0
  4504  003116  6E34               	movwf	(_i+1)^0,c
  4505  003118  0E06               	movlw	6
  4506  00311A  6E33               	movwf	_i^0,c
  4507  00311C                     
  4508                           ;K_WEISSBIER.c: 810:    valor = 9900 + 1;
  4509  00311C  0E26               	movlw	38
  4510  00311E  6E36               	movwf	(_valor+1)^0,c
  4511  003120  0EAD               	movlw	173
  4512  003122  6E35               	movwf	_valor^0,c
  4513  003124                     
  4514                           ;K_WEISSBIER.c: 811:    atraso_ms(550);
  4515  003124  0E02               	movlw	2
  4516  003126  6E1B               	movwf	(atraso_ms@valor+1)^0,c
  4517  003128  0E26               	movlw	38
  4518  00312A  6E1A               	movwf	atraso_ms@valor^0,c
  4519  00312C  ECAF  F01C         	call	_atraso_ms	;wreg free
  4520  003130                     l422:
  4521  003130  0012               	return		;funcret
  4522  003132                     __end_of_Teclado:
  4523                           	callstack 0
  4524                           
  4525 ;; *************** function _amber_lager *****************
  4526 ;; Defined at:
  4527 ;;		line 24 in file "AMBER_LAGER.c"
  4528 ;; Parameters:    Size  Location     Type
  4529 ;;		None
  4530 ;; Auto vars:     Size  Location     Type
  4531 ;;  slot            1   16[COMRAM] unsigned char 
  4532 ;; Return value:  Size  Location     Type
  4533 ;;                  1    wreg      void 
  4534 ;; Registers used:
  4535 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4536 ;; Tracked objects:
  4537 ;;		On entry : 0/0
  4538 ;;		On exit  : 0/0
  4539 ;;		Unchanged: 0/0
  4540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4541 ;;      Params:         0       0       0       0       0       0       0
  4542 ;;      Locals:         1       0       0       0       0       0       0
  4543 ;;      Temps:          2       0       0       0       0       0       0
  4544 ;;      Totals:         3       0       0       0       0       0       0
  4545 ;;Total ram usage:        3 bytes
  4546 ;; Hardware stack levels used:    1
  4547 ;; Hardware stack levels required when called:    4
  4548 ;; This function calls:
  4549 ;;		_Tecl
  4550 ;;		___lwdiv
  4551 ;;		___lwmod
  4552 ;;		_atraso_ms
  4553 ;;		_kpDebounce
  4554 ;;		_kpInit
  4555 ;;		_lcdCommand
  4556 ;;		_lcdData
  4557 ;;		_lcdInit
  4558 ;;		_pwmInit
  4559 ;;		_pwmSet1
  4560 ;;		_pwmSet2
  4561 ;;		_ssdDigit
  4562 ;;		_ssdInit
  4563 ;;		_ssdUpdate
  4564 ;; This function is called by:
  4565 ;;		_escolha
  4566 ;; This function uses a non-reentrant model
  4567 ;;
  4568                           
  4569                           	psect	text4
  4570  0016AC                     __ptext4:
  4571                           	callstack 0
  4572  0016AC                     _amber_lager:
  4573                           	callstack 25
  4574  0016AC                     
  4575                           ;AMBER_LAGER.c: 28: char slot;;AMBER_LAGER.c: 30: pwmInit();
  4576  0016AC  ECAA  F01D         	call	_pwmInit	;wreg free
  4577                           
  4578                           ;AMBER_LAGER.c: 31: ssdInit();
  4579  0016B0  EC0D  F01D         	call	_ssdInit	;wreg free
  4580                           
  4581                           ;AMBER_LAGER.c: 32: lcdInit();
  4582  0016B4  EC9B  F01B         	call	_lcdInit	;wreg free
  4583                           
  4584                           ;AMBER_LAGER.c: 33: kpInit();
  4585  0016B8  ECB4  F01D         	call	_kpInit	;wreg free
  4586                           
  4587                           ;AMBER_LAGER.c: 36:     lcdCommand(0x01);
  4588  0016BC  0E01               	movlw	1
  4589  0016BE  EC5C  F01B         	call	_lcdCommand
  4590                           
  4591                           ;AMBER_LAGER.c: 37:     lcdCommand(0x80);
  4592  0016C2  0E80               	movlw	128
  4593  0016C4  EC5C  F01B         	call	_lcdCommand
  4594                           
  4595                           ;AMBER_LAGER.c: 39:     lcdData('-');
  4596  0016C8  0E2D               	movlw	45
  4597  0016CA  EC38  F01D         	call	_lcdData
  4598                           
  4599                           ;AMBER_LAGER.c: 40:     lcdData('-');
  4600  0016CE  0E2D               	movlw	45
  4601  0016D0  EC38  F01D         	call	_lcdData
  4602                           
  4603                           ;AMBER_LAGER.c: 41:     lcdData('-');
  4604  0016D4  0E2D               	movlw	45
  4605  0016D6  EC38  F01D         	call	_lcdData
  4606                           
  4607                           ;AMBER_LAGER.c: 42:     lcdData('-');
  4608  0016DA  0E2D               	movlw	45
  4609  0016DC  EC38  F01D         	call	_lcdData
  4610                           
  4611                           ;AMBER_LAGER.c: 43:     lcdData('-');
  4612  0016E0  0E2D               	movlw	45
  4613  0016E2  EC38  F01D         	call	_lcdData
  4614                           
  4615                           ;AMBER_LAGER.c: 44:     lcdData('-');
  4616  0016E6  0E2D               	movlw	45
  4617  0016E8  EC38  F01D         	call	_lcdData
  4618                           
  4619                           ;AMBER_LAGER.c: 45:     lcdData('-');
  4620  0016EC  0E2D               	movlw	45
  4621  0016EE  EC38  F01D         	call	_lcdData
  4622                           
  4623                           ;AMBER_LAGER.c: 46:     lcdData('-');
  4624  0016F2  0E2D               	movlw	45
  4625  0016F4  EC38  F01D         	call	_lcdData
  4626                           
  4627                           ;AMBER_LAGER.c: 47:     lcdData('-');
  4628  0016F8  0E2D               	movlw	45
  4629  0016FA  EC38  F01D         	call	_lcdData
  4630                           
  4631                           ;AMBER_LAGER.c: 48:     lcdData('-');
  4632  0016FE  0E2D               	movlw	45
  4633  001700  EC38  F01D         	call	_lcdData
  4634                           
  4635                           ;AMBER_LAGER.c: 49:     lcdData('-');
  4636  001704  0E2D               	movlw	45
  4637  001706  EC38  F01D         	call	_lcdData
  4638                           
  4639                           ;AMBER_LAGER.c: 50:     lcdData('-');
  4640  00170A  0E2D               	movlw	45
  4641  00170C  EC38  F01D         	call	_lcdData
  4642                           
  4643                           ;AMBER_LAGER.c: 51:     lcdData('-');
  4644  001710  0E2D               	movlw	45
  4645  001712  EC38  F01D         	call	_lcdData
  4646                           
  4647                           ;AMBER_LAGER.c: 52:     lcdData('-');
  4648  001716  0E2D               	movlw	45
  4649  001718  EC38  F01D         	call	_lcdData
  4650                           
  4651                           ;AMBER_LAGER.c: 53:     lcdData('-');
  4652  00171C  0E2D               	movlw	45
  4653  00171E  EC38  F01D         	call	_lcdData
  4654                           
  4655                           ;AMBER_LAGER.c: 54:     lcdData('-');
  4656  001722  0E2D               	movlw	45
  4657  001724  EC38  F01D         	call	_lcdData
  4658                           
  4659                           ;AMBER_LAGER.c: 56:     lcdCommand(0xC5);
  4660  001728  0EC5               	movlw	197
  4661  00172A  EC5C  F01B         	call	_lcdCommand
  4662                           
  4663                           ;AMBER_LAGER.c: 57:     lcdData('A');
  4664  00172E  0E41               	movlw	65
  4665  001730  EC38  F01D         	call	_lcdData
  4666                           
  4667                           ;AMBER_LAGER.c: 58:     lcdData('M');
  4668  001734  0E4D               	movlw	77
  4669  001736  EC38  F01D         	call	_lcdData
  4670                           
  4671                           ;AMBER_LAGER.c: 59:     lcdData('B');
  4672  00173A  0E42               	movlw	66
  4673  00173C  EC38  F01D         	call	_lcdData
  4674                           
  4675                           ;AMBER_LAGER.c: 60:     lcdData('E');
  4676  001740  0E45               	movlw	69
  4677  001742  EC38  F01D         	call	_lcdData
  4678                           
  4679                           ;AMBER_LAGER.c: 61:     lcdData('R');
  4680  001746  0E52               	movlw	82
  4681  001748  EC38  F01D         	call	_lcdData
  4682                           
  4683                           ;AMBER_LAGER.c: 63:     lcdCommand(0xAD);
  4684  00174C  0EAD               	movlw	173
  4685  00174E  EC5C  F01B         	call	_lcdCommand
  4686                           
  4687                           ;AMBER_LAGER.c: 64:     lcdData('L');
  4688  001752  0E4C               	movlw	76
  4689  001754  EC38  F01D         	call	_lcdData
  4690                           
  4691                           ;AMBER_LAGER.c: 65:     lcdData('A');
  4692  001758  0E41               	movlw	65
  4693  00175A  EC38  F01D         	call	_lcdData
  4694                           
  4695                           ;AMBER_LAGER.c: 66:     lcdData('G');
  4696  00175E  0E47               	movlw	71
  4697  001760  EC38  F01D         	call	_lcdData
  4698                           
  4699                           ;AMBER_LAGER.c: 67:     lcdData('E');
  4700  001764  0E45               	movlw	69
  4701  001766  EC38  F01D         	call	_lcdData
  4702                           
  4703                           ;AMBER_LAGER.c: 68:     lcdData('R');
  4704  00176A  0E52               	movlw	82
  4705  00176C  EC38  F01D         	call	_lcdData
  4706                           
  4707                           ;AMBER_LAGER.c: 71:     lcdCommand(0xD0);
  4708  001770  0ED0               	movlw	208
  4709  001772  EC5C  F01B         	call	_lcdCommand
  4710                           
  4711                           ;AMBER_LAGER.c: 72:     lcdData('-');
  4712  001776  0E2D               	movlw	45
  4713  001778  EC38  F01D         	call	_lcdData
  4714                           
  4715                           ;AMBER_LAGER.c: 73:     lcdData('-');
  4716  00177C  0E2D               	movlw	45
  4717  00177E  EC38  F01D         	call	_lcdData
  4718                           
  4719                           ;AMBER_LAGER.c: 74:     lcdData('-');
  4720  001782  0E2D               	movlw	45
  4721  001784  EC38  F01D         	call	_lcdData
  4722                           
  4723                           ;AMBER_LAGER.c: 75:     lcdData('-');
  4724  001788  0E2D               	movlw	45
  4725  00178A  EC38  F01D         	call	_lcdData
  4726                           
  4727                           ;AMBER_LAGER.c: 76:     lcdData('-');
  4728  00178E  0E2D               	movlw	45
  4729  001790  EC38  F01D         	call	_lcdData
  4730                           
  4731                           ;AMBER_LAGER.c: 77:     lcdData('-');
  4732  001794  0E2D               	movlw	45
  4733  001796  EC38  F01D         	call	_lcdData
  4734                           
  4735                           ;AMBER_LAGER.c: 78:     lcdData('-');
  4736  00179A  0E2D               	movlw	45
  4737  00179C  EC38  F01D         	call	_lcdData
  4738                           
  4739                           ;AMBER_LAGER.c: 79:     lcdData('-');
  4740  0017A0  0E2D               	movlw	45
  4741  0017A2  EC38  F01D         	call	_lcdData
  4742                           
  4743                           ;AMBER_LAGER.c: 80:     lcdData('-');
  4744  0017A6  0E2D               	movlw	45
  4745  0017A8  EC38  F01D         	call	_lcdData
  4746                           
  4747                           ;AMBER_LAGER.c: 81:     lcdData('-');
  4748  0017AC  0E2D               	movlw	45
  4749  0017AE  EC38  F01D         	call	_lcdData
  4750                           
  4751                           ;AMBER_LAGER.c: 82:     lcdData('-');
  4752  0017B2  0E2D               	movlw	45
  4753  0017B4  EC38  F01D         	call	_lcdData
  4754                           
  4755                           ;AMBER_LAGER.c: 83:     lcdData('-');
  4756  0017B8  0E2D               	movlw	45
  4757  0017BA  EC38  F01D         	call	_lcdData
  4758                           
  4759                           ;AMBER_LAGER.c: 84:     lcdData('-');
  4760  0017BE  0E2D               	movlw	45
  4761  0017C0  EC38  F01D         	call	_lcdData
  4762                           
  4763                           ;AMBER_LAGER.c: 85:     lcdData('-');
  4764  0017C4  0E2D               	movlw	45
  4765  0017C6  EC38  F01D         	call	_lcdData
  4766                           
  4767                           ;AMBER_LAGER.c: 86:     lcdData('-');
  4768  0017CA  0E2D               	movlw	45
  4769  0017CC  EC38  F01D         	call	_lcdData
  4770                           
  4771                           ;AMBER_LAGER.c: 87:     lcdData('-');
  4772  0017D0  0E2D               	movlw	45
  4773  0017D2  EC38  F01D         	call	_lcdData
  4774                           
  4775                           ;AMBER_LAGER.c: 88:     atraso_ms(2000);
  4776  0017D6  0E07               	movlw	7
  4777  0017D8  6E1B               	movwf	(atraso_ms@valor+1)^0,c
  4778  0017DA  0ED0               	movlw	208
  4779  0017DC  6E1A               	movwf	atraso_ms@valor^0,c
  4780  0017DE  ECAF  F01C         	call	_atraso_ms	;wreg free
  4781                           
  4782                           ;AMBER_LAGER.c: 90:     lcdCommand(0x01);
  4783  0017E2  0E01               	movlw	1
  4784  0017E4  EC5C  F01B         	call	_lcdCommand
  4785                           
  4786                           ;AMBER_LAGER.c: 91:     lcdCommand(0x83);
  4787  0017E8  0E83               	movlw	131
  4788  0017EA  EC5C  F01B         	call	_lcdCommand
  4789                           
  4790                           ;AMBER_LAGER.c: 93:     lcdData('-');
  4791  0017EE  0E2D               	movlw	45
  4792  0017F0  EC38  F01D         	call	_lcdData
  4793                           
  4794                           ;AMBER_LAGER.c: 94:     lcdData('C');
  4795  0017F4  0E43               	movlw	67
  4796  0017F6  EC38  F01D         	call	_lcdData
  4797                           
  4798                           ;AMBER_LAGER.c: 95:     lcdData('R');
  4799  0017FA  0E52               	movlw	82
  4800  0017FC  EC38  F01D         	call	_lcdData
  4801                           
  4802                           ;AMBER_LAGER.c: 96:     lcdData('E');
  4803  001800  0E45               	movlw	69
  4804  001802  EC38  F01D         	call	_lcdData
  4805                           
  4806                           ;AMBER_LAGER.c: 97:     lcdData('D');
  4807  001806  0E44               	movlw	68
  4808  001808  EC38  F01D         	call	_lcdData
  4809                           
  4810                           ;AMBER_LAGER.c: 98:     lcdData('I');
  4811  00180C  0E49               	movlw	73
  4812  00180E  EC38  F01D         	call	_lcdData
  4813                           
  4814                           ;AMBER_LAGER.c: 99:     lcdData('T');
  4815  001812  0E54               	movlw	84
  4816  001814  EC38  F01D         	call	_lcdData
  4817                           
  4818                           ;AMBER_LAGER.c: 100:     lcdData('O');
  4819  001818  0E4F               	movlw	79
  4820  00181A  EC38  F01D         	call	_lcdData
  4821                           
  4822                           ;AMBER_LAGER.c: 101:     lcdData('S');
  4823  00181E  0E53               	movlw	83
  4824  001820  EC38  F01D         	call	_lcdData
  4825                           
  4826                           ;AMBER_LAGER.c: 102:     lcdData('-');
  4827  001824  0E2D               	movlw	45
  4828  001826  EC38  F01D         	call	_lcdData
  4829                           
  4830                           ;AMBER_LAGER.c: 104:     lcdCommand(0xC0);
  4831  00182A  0EC0               	movlw	192
  4832  00182C  EC5C  F01B         	call	_lcdCommand
  4833                           
  4834                           ;AMBER_LAGER.c: 105:     lcdData('C');
  4835  001830  0E43               	movlw	67
  4836  001832  EC38  F01D         	call	_lcdData
  4837                           
  4838                           ;AMBER_LAGER.c: 106:     lcdData('A');
  4839  001836  0E41               	movlw	65
  4840  001838  EC38  F01D         	call	_lcdData
  4841                           
  4842                           ;AMBER_LAGER.c: 107:     lcdData('N');
  4843  00183C  0E4E               	movlw	78
  4844  00183E  EC38  F01D         	call	_lcdData
  4845                           
  4846                           ;AMBER_LAGER.c: 108:     lcdData('A');
  4847  001842  0E41               	movlw	65
  4848  001844  EC38  F01D         	call	_lcdData
  4849                           
  4850                           ;AMBER_LAGER.c: 109:     lcdData('L');
  4851  001848  0E4C               	movlw	76
  4852  00184A  EC38  F01D         	call	_lcdData
  4853                           
  4854                           ;AMBER_LAGER.c: 110:     lcdData(0x00);
  4855  00184E  0E00               	movlw	0
  4856  001850  EC38  F01D         	call	_lcdData
  4857                           
  4858                           ;AMBER_LAGER.c: 111:     lcdData('D');
  4859  001854  0E44               	movlw	68
  4860  001856  EC38  F01D         	call	_lcdData
  4861                           
  4862                           ;AMBER_LAGER.c: 112:     lcdData('O');
  4863  00185A  0E4F               	movlw	79
  4864  00185C  EC38  F01D         	call	_lcdData
  4865                           
  4866                           ;AMBER_LAGER.c: 113:     lcdData(0x00);
  4867  001860  0E00               	movlw	0
  4868  001862  EC38  F01D         	call	_lcdData
  4869                           
  4870                           ;AMBER_LAGER.c: 114:     lcdData('C');
  4871  001866  0E43               	movlw	67
  4872  001868  EC38  F01D         	call	_lcdData
  4873                           
  4874                           ;AMBER_LAGER.c: 115:     lcdData('H');
  4875  00186C  0E48               	movlw	72
  4876  00186E  EC38  F01D         	call	_lcdData
  4877                           
  4878                           ;AMBER_LAGER.c: 116:     lcdData('O');
  4879  001872  0E4F               	movlw	79
  4880  001874  EC38  F01D         	call	_lcdData
  4881                           
  4882                           ;AMBER_LAGER.c: 117:     lcdData('P');
  4883  001878  0E50               	movlw	80
  4884  00187A  EC38  F01D         	call	_lcdData
  4885                           
  4886                           ;AMBER_LAGER.c: 118:     lcdData('P');
  4887  00187E  0E50               	movlw	80
  4888  001880  EC38  F01D         	call	_lcdData
  4889                           
  4890                           ;AMBER_LAGER.c: 120:     atraso_ms(2500);
  4891  001884  0E09               	movlw	9
  4892  001886  6E1B               	movwf	(atraso_ms@valor+1)^0,c
  4893  001888  0EC4               	movlw	196
  4894  00188A  6E1A               	movwf	atraso_ms@valor^0,c
  4895  00188C  ECAF  F01C         	call	_atraso_ms	;wreg free
  4896                           
  4897                           ;AMBER_LAGER.c: 122:     lcdCommand(0x01);
  4898  001890  0E01               	movlw	1
  4899  001892  EC5C  F01B         	call	_lcdCommand
  4900                           
  4901                           ;AMBER_LAGER.c: 123:     lcdCommand(0x83);
  4902  001896  0E83               	movlw	131
  4903  001898  EC5C  F01B         	call	_lcdCommand
  4904                           
  4905                           ;AMBER_LAGER.c: 125:     lcdData('-');
  4906  00189C  0E2D               	movlw	45
  4907  00189E  EC38  F01D         	call	_lcdData
  4908                           
  4909                           ;AMBER_LAGER.c: 126:     lcdData('R');
  4910  0018A2  0E52               	movlw	82
  4911  0018A4  EC38  F01D         	call	_lcdData
  4912                           
  4913                           ;AMBER_LAGER.c: 127:     lcdData('E');
  4914  0018A8  0E45               	movlw	69
  4915  0018AA  EC38  F01D         	call	_lcdData
  4916                           
  4917                           ;AMBER_LAGER.c: 128:     lcdData('C');
  4918  0018AE  0E43               	movlw	67
  4919  0018B0  EC38  F01D         	call	_lcdData
  4920                           
  4921                           ;AMBER_LAGER.c: 129:     lcdData('E');
  4922  0018B4  0E45               	movlw	69
  4923  0018B6  EC38  F01D         	call	_lcdData
  4924                           
  4925                           ;AMBER_LAGER.c: 130:     lcdData('I');
  4926  0018BA  0E49               	movlw	73
  4927  0018BC  EC38  F01D         	call	_lcdData
  4928                           
  4929                           ;AMBER_LAGER.c: 131:     lcdData('T');
  4930  0018C0  0E54               	movlw	84
  4931  0018C2  EC38  F01D         	call	_lcdData
  4932                           
  4933                           ;AMBER_LAGER.c: 132:     lcdData('A');
  4934  0018C6  0E41               	movlw	65
  4935  0018C8  EC38  F01D         	call	_lcdData
  4936                           
  4937                           ;AMBER_LAGER.c: 133:     lcdData('-');
  4938  0018CC  0E2D               	movlw	45
  4939  0018CE  EC38  F01D         	call	_lcdData
  4940                           
  4941                           ;AMBER_LAGER.c: 135:     lcdCommand(0xC0);
  4942  0018D2  0EC0               	movlw	192
  4943  0018D4  EC5C  F01B         	call	_lcdCommand
  4944                           
  4945                           ;AMBER_LAGER.c: 136:     lcdData('-');
  4946  0018D8  0E2D               	movlw	45
  4947  0018DA  EC38  F01D         	call	_lcdData
  4948                           
  4949                           ;AMBER_LAGER.c: 137:     lcdData(0x00);
  4950  0018DE  0E00               	movlw	0
  4951  0018E0  EC38  F01D         	call	_lcdData
  4952                           
  4953                           ;AMBER_LAGER.c: 138:     lcdData('V');
  4954  0018E4  0E56               	movlw	86
  4955  0018E6  EC38  F01D         	call	_lcdData
  4956                           
  4957                           ;AMBER_LAGER.c: 139:     lcdData('O');
  4958  0018EA  0E4F               	movlw	79
  4959  0018EC  EC38  F01D         	call	_lcdData
  4960                           
  4961                           ;AMBER_LAGER.c: 140:     lcdData('L');
  4962  0018F0  0E4C               	movlw	76
  4963  0018F2  EC38  F01D         	call	_lcdData
  4964                           
  4965                           ;AMBER_LAGER.c: 141:     lcdData('U');
  4966  0018F6  0E55               	movlw	85
  4967  0018F8  EC38  F01D         	call	_lcdData
  4968                           
  4969                           ;AMBER_LAGER.c: 142:     lcdData('M');
  4970  0018FC  0E4D               	movlw	77
  4971  0018FE  EC38  F01D         	call	_lcdData
  4972                           
  4973                           ;AMBER_LAGER.c: 143:     lcdData('E');
  4974  001902  0E45               	movlw	69
  4975  001904  EC38  F01D         	call	_lcdData
  4976                           
  4977                           ;AMBER_LAGER.c: 144:     lcdData(':');
  4978  001908  0E3A               	movlw	58
  4979  00190A  EC38  F01D         	call	_lcdData
  4980                           
  4981                           ;AMBER_LAGER.c: 145:     lcdData(0x00);
  4982  00190E  0E00               	movlw	0
  4983  001910  EC38  F01D         	call	_lcdData
  4984                           
  4985                           ;AMBER_LAGER.c: 146:     lcdData('2');
  4986  001914  0E32               	movlw	50
  4987  001916  EC38  F01D         	call	_lcdData
  4988                           
  4989                           ;AMBER_LAGER.c: 147:     lcdData('0');
  4990  00191A  0E30               	movlw	48
  4991  00191C  EC38  F01D         	call	_lcdData
  4992                           
  4993                           ;AMBER_LAGER.c: 148:     lcdData('L');
  4994  001920  0E4C               	movlw	76
  4995  001922  EC38  F01D         	call	_lcdData
  4996                           
  4997                           ;AMBER_LAGER.c: 150:     lcdCommand(0xA8);
  4998  001926  0EA8               	movlw	168
  4999  001928  EC5C  F01B         	call	_lcdCommand
  5000                           
  5001                           ;AMBER_LAGER.c: 151:     lcdData('-');
  5002  00192C  0E2D               	movlw	45
  5003  00192E  EC38  F01D         	call	_lcdData
  5004                           
  5005                           ;AMBER_LAGER.c: 152:     lcdData(0x00);
  5006  001932  0E00               	movlw	0
  5007  001934  EC38  F01D         	call	_lcdData
  5008                           
  5009                           ;AMBER_LAGER.c: 153:     lcdData('A');
  5010  001938  0E41               	movlw	65
  5011  00193A  EC38  F01D         	call	_lcdData
  5012                           
  5013                           ;AMBER_LAGER.c: 154:     lcdData('B');
  5014  00193E  0E42               	movlw	66
  5015  001940  EC38  F01D         	call	_lcdData
  5016                           
  5017                           ;AMBER_LAGER.c: 155:     lcdData('V');
  5018  001944  0E56               	movlw	86
  5019  001946  EC38  F01D         	call	_lcdData
  5020                           
  5021                           ;AMBER_LAGER.c: 156:     lcdData(':');
  5022  00194A  0E3A               	movlw	58
  5023  00194C  EC38  F01D         	call	_lcdData
  5024                           
  5025                           ;AMBER_LAGER.c: 157:     lcdData(0x00);
  5026  001950  0E00               	movlw	0
  5027  001952  EC38  F01D         	call	_lcdData
  5028                           
  5029                           ;AMBER_LAGER.c: 158:     lcdData('4');
  5030  001956  0E34               	movlw	52
  5031  001958  EC38  F01D         	call	_lcdData
  5032                           
  5033                           ;AMBER_LAGER.c: 159:     lcdData(',');
  5034  00195C  0E2C               	movlw	44
  5035  00195E  EC38  F01D         	call	_lcdData
  5036                           
  5037                           ;AMBER_LAGER.c: 160:     lcdData('5');
  5038  001962  0E35               	movlw	53
  5039  001964  EC38  F01D         	call	_lcdData
  5040                           
  5041                           ;AMBER_LAGER.c: 161:     lcdData('%');
  5042  001968  0E25               	movlw	37
  5043  00196A  EC38  F01D         	call	_lcdData
  5044                           
  5045                           ;AMBER_LAGER.c: 163:     lcdCommand(0xD0);
  5046  00196E  0ED0               	movlw	208
  5047  001970  EC5C  F01B         	call	_lcdCommand
  5048                           
  5049                           ;AMBER_LAGER.c: 164:     lcdData('-');
  5050  001974  0E2D               	movlw	45
  5051  001976  EC38  F01D         	call	_lcdData
  5052                           
  5053                           ;AMBER_LAGER.c: 165:     lcdData(0x00);
  5054  00197A  0E00               	movlw	0
  5055  00197C  EC38  F01D         	call	_lcdData
  5056                           
  5057                           ;AMBER_LAGER.c: 166:     lcdData('I');
  5058  001980  0E49               	movlw	73
  5059  001982  EC38  F01D         	call	_lcdData
  5060                           
  5061                           ;AMBER_LAGER.c: 167:     lcdData('B');
  5062  001986  0E42               	movlw	66
  5063  001988  EC38  F01D         	call	_lcdData
  5064                           
  5065                           ;AMBER_LAGER.c: 168:     lcdData('U');
  5066  00198C  0E55               	movlw	85
  5067  00198E  EC38  F01D         	call	_lcdData
  5068                           
  5069                           ;AMBER_LAGER.c: 169:     lcdData(':');
  5070  001992  0E3A               	movlw	58
  5071  001994  EC38  F01D         	call	_lcdData
  5072                           
  5073                           ;AMBER_LAGER.c: 170:     lcdData(0x00);
  5074  001998  0E00               	movlw	0
  5075  00199A  EC38  F01D         	call	_lcdData
  5076                           
  5077                           ;AMBER_LAGER.c: 171:     lcdData('1');
  5078  00199E  0E31               	movlw	49
  5079  0019A0  EC38  F01D         	call	_lcdData
  5080                           
  5081                           ;AMBER_LAGER.c: 172:     lcdData('6');
  5082  0019A4  0E36               	movlw	54
  5083  0019A6  EC38  F01D         	call	_lcdData
  5084                           
  5085                           ;AMBER_LAGER.c: 174:     atraso_ms(3000);
  5086  0019AA  0E0B               	movlw	11
  5087  0019AC  6E1B               	movwf	(atraso_ms@valor+1)^0,c
  5088  0019AE  0EB8               	movlw	184
  5089  0019B0  6E1A               	movwf	atraso_ms@valor^0,c
  5090  0019B2  ECAF  F01C         	call	_atraso_ms	;wreg free
  5091                           
  5092                           ;AMBER_LAGER.c: 176:     lcdCommand(0x01);
  5093  0019B6  0E01               	movlw	1
  5094  0019B8  EC5C  F01B         	call	_lcdCommand
  5095                           
  5096                           ;AMBER_LAGER.c: 177:     lcdCommand(0x83);
  5097  0019BC  0E83               	movlw	131
  5098  0019BE  EC5C  F01B         	call	_lcdCommand
  5099                           
  5100                           ;AMBER_LAGER.c: 178:     lcdData('-');
  5101  0019C2  0E2D               	movlw	45
  5102  0019C4  EC38  F01D         	call	_lcdData
  5103                           
  5104                           ;AMBER_LAGER.c: 179:     lcdData('M');
  5105  0019C8  0E4D               	movlw	77
  5106  0019CA  EC38  F01D         	call	_lcdData
  5107                           
  5108                           ;AMBER_LAGER.c: 180:     lcdData('A');
  5109  0019CE  0E41               	movlw	65
  5110  0019D0  EC38  F01D         	call	_lcdData
  5111                           
  5112                           ;AMBER_LAGER.c: 181:     lcdData('L');
  5113  0019D4  0E4C               	movlw	76
  5114  0019D6  EC38  F01D         	call	_lcdData
  5115                           
  5116                           ;AMBER_LAGER.c: 182:     lcdData('T');
  5117  0019DA  0E54               	movlw	84
  5118  0019DC  EC38  F01D         	call	_lcdData
  5119                           
  5120                           ;AMBER_LAGER.c: 183:     lcdData('E');
  5121  0019E0  0E45               	movlw	69
  5122  0019E2  EC38  F01D         	call	_lcdData
  5123                           
  5124                           ;AMBER_LAGER.c: 184:     lcdData(0x00);
  5125  0019E6  0E00               	movlw	0
  5126  0019E8  EC38  F01D         	call	_lcdData
  5127                           
  5128                           ;AMBER_LAGER.c: 185:     lcdData('1');
  5129  0019EC  0E31               	movlw	49
  5130  0019EE  EC38  F01D         	call	_lcdData
  5131                           
  5132                           ;AMBER_LAGER.c: 186:     lcdData('-');
  5133  0019F2  0E2D               	movlw	45
  5134  0019F4  EC38  F01D         	call	_lcdData
  5135                           
  5136                           ;AMBER_LAGER.c: 188:     lcdCommand(0xC0);
  5137  0019F8  0EC0               	movlw	192
  5138  0019FA  EC5C  F01B         	call	_lcdCommand
  5139                           
  5140                           ;AMBER_LAGER.c: 189:     lcdData('P');
  5141  0019FE  0E50               	movlw	80
  5142  001A00  EC38  F01D         	call	_lcdData
  5143                           
  5144                           ;AMBER_LAGER.c: 190:     lcdData('I');
  5145  001A04  0E49               	movlw	73
  5146  001A06  EC38  F01D         	call	_lcdData
  5147                           
  5148                           ;AMBER_LAGER.c: 191:     lcdData('L');
  5149  001A0A  0E4C               	movlw	76
  5150  001A0C  EC38  F01D         	call	_lcdData
  5151                           
  5152                           ;AMBER_LAGER.c: 192:     lcdData('S');
  5153  001A10  0E53               	movlw	83
  5154  001A12  EC38  F01D         	call	_lcdData
  5155                           
  5156                           ;AMBER_LAGER.c: 193:     lcdData('E');
  5157  001A16  0E45               	movlw	69
  5158  001A18  EC38  F01D         	call	_lcdData
  5159                           
  5160                           ;AMBER_LAGER.c: 194:     lcdData('N');
  5161  001A1C  0E4E               	movlw	78
  5162  001A1E  EC38  F01D         	call	_lcdData
  5163                           
  5164                           ;AMBER_LAGER.c: 195:     lcdData(0x00);
  5165  001A22  0E00               	movlw	0
  5166  001A24  EC38  F01D         	call	_lcdData
  5167                           
  5168                           ;AMBER_LAGER.c: 196:     lcdData('N');
  5169  001A28  0E4E               	movlw	78
  5170  001A2A  EC38  F01D         	call	_lcdData
  5171                           
  5172                           ;AMBER_LAGER.c: 197:     lcdData('A');
  5173  001A2E  0E41               	movlw	65
  5174  001A30  EC38  F01D         	call	_lcdData
  5175                           
  5176                           ;AMBER_LAGER.c: 198:     lcdData('C');
  5177  001A34  0E43               	movlw	67
  5178  001A36  EC38  F01D         	call	_lcdData
  5179                           
  5180                           ;AMBER_LAGER.c: 199:     lcdData('I');
  5181  001A3A  0E49               	movlw	73
  5182  001A3C  EC38  F01D         	call	_lcdData
  5183                           
  5184                           ;AMBER_LAGER.c: 200:     lcdData('O');
  5185  001A40  0E4F               	movlw	79
  5186  001A42  EC38  F01D         	call	_lcdData
  5187                           
  5188                           ;AMBER_LAGER.c: 201:     lcdData('N');
  5189  001A46  0E4E               	movlw	78
  5190  001A48  EC38  F01D         	call	_lcdData
  5191                           
  5192                           ;AMBER_LAGER.c: 202:     lcdData('A');
  5193  001A4C  0E41               	movlw	65
  5194  001A4E  EC38  F01D         	call	_lcdData
  5195                           
  5196                           ;AMBER_LAGER.c: 203:     lcdData('L');
  5197  001A52  0E4C               	movlw	76
  5198  001A54  EC38  F01D         	call	_lcdData
  5199                           
  5200                           ;AMBER_LAGER.c: 206:     lcdCommand(0xA8);
  5201  001A58  0EA8               	movlw	168
  5202  001A5A  EC5C  F01B         	call	_lcdCommand
  5203                           
  5204                           ;AMBER_LAGER.c: 207:     lcdData('-');
  5205  001A5E  0E2D               	movlw	45
  5206  001A60  EC38  F01D         	call	_lcdData
  5207                           
  5208                           ;AMBER_LAGER.c: 208:     lcdData(0x00);
  5209  001A64  0E00               	movlw	0
  5210  001A66  EC38  F01D         	call	_lcdData
  5211                           
  5212                           ;AMBER_LAGER.c: 209:     lcdData('3');
  5213  001A6A  0E33               	movlw	51
  5214  001A6C  EC38  F01D         	call	_lcdData
  5215                           
  5216                           ;AMBER_LAGER.c: 210:     lcdData(',');
  5217  001A70  0E2C               	movlw	44
  5218  001A72  EC38  F01D         	call	_lcdData
  5219                           
  5220                           ;AMBER_LAGER.c: 211:     lcdData('5');
  5221  001A76  0E35               	movlw	53
  5222  001A78  EC38  F01D         	call	_lcdData
  5223                           
  5224                           ;AMBER_LAGER.c: 212:     lcdData('K');
  5225  001A7C  0E4B               	movlw	75
  5226  001A7E  EC38  F01D         	call	_lcdData
  5227                           
  5228                           ;AMBER_LAGER.c: 213:     lcdData('G');
  5229  001A82  0E47               	movlw	71
  5230  001A84  EC38  F01D         	call	_lcdData
  5231                           
  5232                           ;AMBER_LAGER.c: 215:     lcdCommand(0xD0);
  5233  001A88  0ED0               	movlw	208
  5234  001A8A  EC5C  F01B         	call	_lcdCommand
  5235                           
  5236                           ;AMBER_LAGER.c: 216:     lcdData('-');
  5237  001A8E  0E2D               	movlw	45
  5238  001A90  EC38  F01D         	call	_lcdData
  5239                           
  5240                           ;AMBER_LAGER.c: 217:     lcdData(0x00);
  5241  001A94  0E00               	movlw	0
  5242  001A96  EC38  F01D         	call	_lcdData
  5243                           
  5244                           ;AMBER_LAGER.c: 218:     lcdData('7');
  5245  001A9A  0E37               	movlw	55
  5246  001A9C  EC38  F01D         	call	_lcdData
  5247                           
  5248                           ;AMBER_LAGER.c: 219:     lcdData('1');
  5249  001AA0  0E31               	movlw	49
  5250  001AA2  EC38  F01D         	call	_lcdData
  5251                           
  5252                           ;AMBER_LAGER.c: 220:     lcdData('%');
  5253  001AA6  0E25               	movlw	37
  5254  001AA8  EC38  F01D         	call	_lcdData
  5255                           
  5256                           ;AMBER_LAGER.c: 222:      atraso_ms(2500);
  5257  001AAC  0E09               	movlw	9
  5258  001AAE  6E1B               	movwf	(atraso_ms@valor+1)^0,c
  5259  001AB0  0EC4               	movlw	196
  5260  001AB2  6E1A               	movwf	atraso_ms@valor^0,c
  5261  001AB4  ECAF  F01C         	call	_atraso_ms	;wreg free
  5262                           
  5263                           ;AMBER_LAGER.c: 224:     lcdCommand(0x01);
  5264  001AB8  0E01               	movlw	1
  5265  001ABA  EC5C  F01B         	call	_lcdCommand
  5266                           
  5267                           ;AMBER_LAGER.c: 225:     lcdCommand(0x83);
  5268  001ABE  0E83               	movlw	131
  5269  001AC0  EC5C  F01B         	call	_lcdCommand
  5270                           
  5271                           ;AMBER_LAGER.c: 226:     lcdData('-');
  5272  001AC4  0E2D               	movlw	45
  5273  001AC6  EC38  F01D         	call	_lcdData
  5274                           
  5275                           ;AMBER_LAGER.c: 227:     lcdData('M');
  5276  001ACA  0E4D               	movlw	77
  5277  001ACC  EC38  F01D         	call	_lcdData
  5278                           
  5279                           ;AMBER_LAGER.c: 228:     lcdData('A');
  5280  001AD0  0E41               	movlw	65
  5281  001AD2  EC38  F01D         	call	_lcdData
  5282                           
  5283                           ;AMBER_LAGER.c: 229:     lcdData('L');
  5284  001AD6  0E4C               	movlw	76
  5285  001AD8  EC38  F01D         	call	_lcdData
  5286                           
  5287                           ;AMBER_LAGER.c: 230:     lcdData('T');
  5288  001ADC  0E54               	movlw	84
  5289  001ADE  EC38  F01D         	call	_lcdData
  5290                           
  5291                           ;AMBER_LAGER.c: 231:     lcdData('E');
  5292  001AE2  0E45               	movlw	69
  5293  001AE4  EC38  F01D         	call	_lcdData
  5294                           
  5295                           ;AMBER_LAGER.c: 232:     lcdData(0x00);
  5296  001AE8  0E00               	movlw	0
  5297  001AEA  EC38  F01D         	call	_lcdData
  5298                           
  5299                           ;AMBER_LAGER.c: 233:     lcdData('2');
  5300  001AEE  0E32               	movlw	50
  5301  001AF0  EC38  F01D         	call	_lcdData
  5302                           
  5303                           ;AMBER_LAGER.c: 234:     lcdData('-');
  5304  001AF4  0E2D               	movlw	45
  5305  001AF6  EC38  F01D         	call	_lcdData
  5306                           
  5307                           ;AMBER_LAGER.c: 236:     lcdCommand(0xC0);
  5308  001AFA  0EC0               	movlw	192
  5309  001AFC  EC5C  F01B         	call	_lcdCommand
  5310                           
  5311                           ;AMBER_LAGER.c: 237:     lcdData('M');
  5312  001B00  0E4D               	movlw	77
  5313  001B02  EC38  F01D         	call	_lcdData
  5314                           
  5315                           ;AMBER_LAGER.c: 238:     lcdData('E');
  5316  001B06  0E45               	movlw	69
  5317  001B08  EC38  F01D         	call	_lcdData
  5318                           
  5319                           ;AMBER_LAGER.c: 239:     lcdData('L');
  5320  001B0C  0E4C               	movlw	76
  5321  001B0E  EC38  F01D         	call	_lcdData
  5322                           
  5323                           ;AMBER_LAGER.c: 240:     lcdData('A');
  5324  001B12  0E41               	movlw	65
  5325  001B14  EC38  F01D         	call	_lcdData
  5326                           
  5327                           ;AMBER_LAGER.c: 241:     lcdData('N');
  5328  001B18  0E4E               	movlw	78
  5329  001B1A  EC38  F01D         	call	_lcdData
  5330                           
  5331                           ;AMBER_LAGER.c: 242:     lcdData('O');
  5332  001B1E  0E4F               	movlw	79
  5333  001B20  EC38  F01D         	call	_lcdData
  5334                           
  5335                           ;AMBER_LAGER.c: 243:     lcdData('I');
  5336  001B24  0E49               	movlw	73
  5337  001B26  EC38  F01D         	call	_lcdData
  5338                           
  5339                           ;AMBER_LAGER.c: 244:     lcdData('D');
  5340  001B2A  0E44               	movlw	68
  5341  001B2C  EC38  F01D         	call	_lcdData
  5342                           
  5343                           ;AMBER_LAGER.c: 245:     lcdData('I');
  5344  001B30  0E49               	movlw	73
  5345  001B32  EC38  F01D         	call	_lcdData
  5346                           
  5347                           ;AMBER_LAGER.c: 246:     lcdData('N');
  5348  001B36  0E4E               	movlw	78
  5349  001B38  EC38  F01D         	call	_lcdData
  5350                           
  5351                           ;AMBER_LAGER.c: 247:     lcdData('A');
  5352  001B3C  0E41               	movlw	65
  5353  001B3E  EC38  F01D         	call	_lcdData
  5354                           
  5355                           ;AMBER_LAGER.c: 249:     lcdCommand(0xA8);
  5356  001B42  0EA8               	movlw	168
  5357  001B44  EC5C  F01B         	call	_lcdCommand
  5358                           
  5359                           ;AMBER_LAGER.c: 250:     lcdData('-');
  5360  001B48  0E2D               	movlw	45
  5361  001B4A  EC38  F01D         	call	_lcdData
  5362                           
  5363                           ;AMBER_LAGER.c: 251:     lcdData(0x00);
  5364  001B4E  0E00               	movlw	0
  5365  001B50  EC38  F01D         	call	_lcdData
  5366                           
  5367                           ;AMBER_LAGER.c: 252:     lcdData('6');
  5368  001B54  0E36               	movlw	54
  5369  001B56  EC38  F01D         	call	_lcdData
  5370                           
  5371                           ;AMBER_LAGER.c: 253:     lcdData('0');
  5372  001B5A  0E30               	movlw	48
  5373  001B5C  EC38  F01D         	call	_lcdData
  5374                           
  5375                           ;AMBER_LAGER.c: 254:     lcdData('0');
  5376  001B60  0E30               	movlw	48
  5377  001B62  EC38  F01D         	call	_lcdData
  5378                           
  5379                           ;AMBER_LAGER.c: 255:     lcdData('G');
  5380  001B66  0E47               	movlw	71
  5381  001B68  EC38  F01D         	call	_lcdData
  5382                           
  5383                           ;AMBER_LAGER.c: 257:     lcdCommand(0xD0);
  5384  001B6C  0ED0               	movlw	208
  5385  001B6E  EC5C  F01B         	call	_lcdCommand
  5386                           
  5387                           ;AMBER_LAGER.c: 258:     lcdData('-');
  5388  001B72  0E2D               	movlw	45
  5389  001B74  EC38  F01D         	call	_lcdData
  5390                           
  5391                           ;AMBER_LAGER.c: 259:     lcdData(0x00);
  5392  001B78  0E00               	movlw	0
  5393  001B7A  EC38  F01D         	call	_lcdData
  5394                           
  5395                           ;AMBER_LAGER.c: 260:     lcdData('1');
  5396  001B7E  0E31               	movlw	49
  5397  001B80  EC38  F01D         	call	_lcdData
  5398                           
  5399                           ;AMBER_LAGER.c: 261:     lcdData('2');
  5400  001B84  0E32               	movlw	50
  5401  001B86  EC38  F01D         	call	_lcdData
  5402                           
  5403                           ;AMBER_LAGER.c: 262:     lcdData('%');
  5404  001B8A  0E25               	movlw	37
  5405  001B8C  EC38  F01D         	call	_lcdData
  5406                           
  5407                           ;AMBER_LAGER.c: 264:      atraso_ms(2500);
  5408  001B90  0E09               	movlw	9
  5409  001B92  6E1B               	movwf	(atraso_ms@valor+1)^0,c
  5410  001B94  0EC4               	movlw	196
  5411  001B96  6E1A               	movwf	atraso_ms@valor^0,c
  5412  001B98  ECAF  F01C         	call	_atraso_ms	;wreg free
  5413                           
  5414                           ;AMBER_LAGER.c: 266:     lcdCommand(0x01);
  5415  001B9C  0E01               	movlw	1
  5416  001B9E  EC5C  F01B         	call	_lcdCommand
  5417                           
  5418                           ;AMBER_LAGER.c: 267:     lcdCommand(0x83);
  5419  001BA2  0E83               	movlw	131
  5420  001BA4  EC5C  F01B         	call	_lcdCommand
  5421                           
  5422                           ;AMBER_LAGER.c: 268:     lcdData('-');
  5423  001BA8  0E2D               	movlw	45
  5424  001BAA  EC38  F01D         	call	_lcdData
  5425                           
  5426                           ;AMBER_LAGER.c: 269:     lcdData('M');
  5427  001BAE  0E4D               	movlw	77
  5428  001BB0  EC38  F01D         	call	_lcdData
  5429                           
  5430                           ;AMBER_LAGER.c: 270:     lcdData('A');
  5431  001BB4  0E41               	movlw	65
  5432  001BB6  EC38  F01D         	call	_lcdData
  5433                           
  5434                           ;AMBER_LAGER.c: 271:     lcdData('L');
  5435  001BBA  0E4C               	movlw	76
  5436  001BBC  EC38  F01D         	call	_lcdData
  5437                           
  5438                           ;AMBER_LAGER.c: 272:     lcdData('T');
  5439  001BC0  0E54               	movlw	84
  5440  001BC2  EC38  F01D         	call	_lcdData
  5441                           
  5442                           ;AMBER_LAGER.c: 273:     lcdData('E');
  5443  001BC6  0E45               	movlw	69
  5444  001BC8  EC38  F01D         	call	_lcdData
  5445                           
  5446                           ;AMBER_LAGER.c: 274:     lcdData(0x00);
  5447  001BCC  0E00               	movlw	0
  5448  001BCE  EC38  F01D         	call	_lcdData
  5449                           
  5450                           ;AMBER_LAGER.c: 275:     lcdData('3');
  5451  001BD2  0E33               	movlw	51
  5452  001BD4  EC38  F01D         	call	_lcdData
  5453                           
  5454                           ;AMBER_LAGER.c: 276:     lcdData('-');
  5455  001BD8  0E2D               	movlw	45
  5456  001BDA  EC38  F01D         	call	_lcdData
  5457                           
  5458                           ;AMBER_LAGER.c: 278:     lcdCommand(0xC0);
  5459  001BDE  0EC0               	movlw	192
  5460  001BE0  EC5C  F01B         	call	_lcdCommand
  5461                           
  5462                           ;AMBER_LAGER.c: 279:     lcdData('C');
  5463  001BE4  0E43               	movlw	67
  5464  001BE6  EC38  F01D         	call	_lcdData
  5465                           
  5466                           ;AMBER_LAGER.c: 280:     lcdData('A');
  5467  001BEA  0E41               	movlw	65
  5468  001BEC  EC38  F01D         	call	_lcdData
  5469                           
  5470                           ;AMBER_LAGER.c: 281:     lcdData('R');
  5471  001BF0  0E52               	movlw	82
  5472  001BF2  EC38  F01D         	call	_lcdData
  5473                           
  5474                           ;AMBER_LAGER.c: 282:     lcdData('A');
  5475  001BF6  0E41               	movlw	65
  5476  001BF8  EC38  F01D         	call	_lcdData
  5477                           
  5478                           ;AMBER_LAGER.c: 283:     lcdData('R');
  5479  001BFC  0E52               	movlw	82
  5480  001BFE  EC38  F01D         	call	_lcdData
  5481                           
  5482                           ;AMBER_LAGER.c: 284:     lcdData('E');
  5483  001C02  0E45               	movlw	69
  5484  001C04  EC38  F01D         	call	_lcdData
  5485                           
  5486                           ;AMBER_LAGER.c: 285:     lcdData('D');
  5487  001C08  0E44               	movlw	68
  5488  001C0A  EC38  F01D         	call	_lcdData
  5489                           
  5490                           ;AMBER_LAGER.c: 287:     lcdCommand(0xA8);
  5491  001C0E  0EA8               	movlw	168
  5492  001C10  EC5C  F01B         	call	_lcdCommand
  5493                           
  5494                           ;AMBER_LAGER.c: 288:     lcdData('-');
  5495  001C14  0E2D               	movlw	45
  5496  001C16  EC38  F01D         	call	_lcdData
  5497                           
  5498                           ;AMBER_LAGER.c: 289:     lcdData(0x00);
  5499  001C1A  0E00               	movlw	0
  5500  001C1C  EC38  F01D         	call	_lcdData
  5501                           
  5502                           ;AMBER_LAGER.c: 290:     lcdData('4');
  5503  001C20  0E34               	movlw	52
  5504  001C22  EC38  F01D         	call	_lcdData
  5505                           
  5506                           ;AMBER_LAGER.c: 291:     lcdData('0');
  5507  001C26  0E30               	movlw	48
  5508  001C28  EC38  F01D         	call	_lcdData
  5509                           
  5510                           ;AMBER_LAGER.c: 292:     lcdData('0');
  5511  001C2C  0E30               	movlw	48
  5512  001C2E  EC38  F01D         	call	_lcdData
  5513                           
  5514                           ;AMBER_LAGER.c: 293:     lcdData('G');
  5515  001C32  0E47               	movlw	71
  5516  001C34  EC38  F01D         	call	_lcdData
  5517                           
  5518                           ;AMBER_LAGER.c: 295:     lcdCommand(0xD0);
  5519  001C38  0ED0               	movlw	208
  5520  001C3A  EC5C  F01B         	call	_lcdCommand
  5521                           
  5522                           ;AMBER_LAGER.c: 296:     lcdData('-');
  5523  001C3E  0E2D               	movlw	45
  5524  001C40  EC38  F01D         	call	_lcdData
  5525                           
  5526                           ;AMBER_LAGER.c: 297:     lcdData(0x00);
  5527  001C44  0E00               	movlw	0
  5528  001C46  EC38  F01D         	call	_lcdData
  5529                           
  5530                           ;AMBER_LAGER.c: 298:     lcdData('8');
  5531  001C4A  0E38               	movlw	56
  5532  001C4C  EC38  F01D         	call	_lcdData
  5533                           
  5534                           ;AMBER_LAGER.c: 299:     lcdData('%');
  5535  001C50  0E25               	movlw	37
  5536  001C52  EC38  F01D         	call	_lcdData
  5537                           
  5538                           ;AMBER_LAGER.c: 301:     atraso_ms(2500);
  5539  001C56  0E09               	movlw	9
  5540  001C58  6E1B               	movwf	(atraso_ms@valor+1)^0,c
  5541  001C5A  0EC4               	movlw	196
  5542  001C5C  6E1A               	movwf	atraso_ms@valor^0,c
  5543  001C5E  ECAF  F01C         	call	_atraso_ms	;wreg free
  5544                           
  5545                           ;AMBER_LAGER.c: 303:     lcdCommand(0x01);
  5546  001C62  0E01               	movlw	1
  5547  001C64  EC5C  F01B         	call	_lcdCommand
  5548                           
  5549                           ;AMBER_LAGER.c: 304:     lcdCommand(0x83);
  5550  001C68  0E83               	movlw	131
  5551  001C6A  EC5C  F01B         	call	_lcdCommand
  5552                           
  5553                           ;AMBER_LAGER.c: 305:     lcdData('-');
  5554  001C6E  0E2D               	movlw	45
  5555  001C70  EC38  F01D         	call	_lcdData
  5556                           
  5557                           ;AMBER_LAGER.c: 306:     lcdData('M');
  5558  001C74  0E4D               	movlw	77
  5559  001C76  EC38  F01D         	call	_lcdData
  5560                           
  5561                           ;AMBER_LAGER.c: 307:     lcdData('A');
  5562  001C7A  0E41               	movlw	65
  5563  001C7C  EC38  F01D         	call	_lcdData
  5564                           
  5565                           ;AMBER_LAGER.c: 308:     lcdData('L');
  5566  001C80  0E4C               	movlw	76
  5567  001C82  EC38  F01D         	call	_lcdData
  5568                           
  5569                           ;AMBER_LAGER.c: 309:     lcdData('T');
  5570  001C86  0E54               	movlw	84
  5571  001C88  EC38  F01D         	call	_lcdData
  5572                           
  5573                           ;AMBER_LAGER.c: 310:     lcdData('E');
  5574  001C8C  0E45               	movlw	69
  5575  001C8E  EC38  F01D         	call	_lcdData
  5576                           
  5577                           ;AMBER_LAGER.c: 311:     lcdData(0x00);
  5578  001C92  0E00               	movlw	0
  5579  001C94  EC38  F01D         	call	_lcdData
  5580                           
  5581                           ;AMBER_LAGER.c: 312:     lcdData('4');
  5582  001C98  0E34               	movlw	52
  5583  001C9A  EC38  F01D         	call	_lcdData
  5584                           
  5585                           ;AMBER_LAGER.c: 313:     lcdData('-');
  5586  001C9E  0E2D               	movlw	45
  5587  001CA0  EC38  F01D         	call	_lcdData
  5588                           
  5589                           ;AMBER_LAGER.c: 315:     lcdCommand(0xC0);
  5590  001CA4  0EC0               	movlw	192
  5591  001CA6  EC5C  F01B         	call	_lcdCommand
  5592                           
  5593                           ;AMBER_LAGER.c: 316:     lcdData('C');
  5594  001CAA  0E43               	movlw	67
  5595  001CAC  EC38  F01D         	call	_lcdData
  5596                           
  5597                           ;AMBER_LAGER.c: 317:     lcdData('A');
  5598  001CB0  0E41               	movlw	65
  5599  001CB2  EC38  F01D         	call	_lcdData
  5600                           
  5601                           ;AMBER_LAGER.c: 318:     lcdData('R');
  5602  001CB6  0E52               	movlw	82
  5603  001CB8  EC38  F01D         	call	_lcdData
  5604                           
  5605                           ;AMBER_LAGER.c: 319:     lcdData('A');
  5606  001CBC  0E41               	movlw	65
  5607  001CBE  EC38  F01D         	call	_lcdData
  5608                           
  5609                           ;AMBER_LAGER.c: 320:     lcdData('P');
  5610  001CC2  0E50               	movlw	80
  5611  001CC4  EC38  F01D         	call	_lcdData
  5612                           
  5613                           ;AMBER_LAGER.c: 321:     lcdData('I');
  5614  001CC8  0E49               	movlw	73
  5615  001CCA  EC38  F01D         	call	_lcdData
  5616                           
  5617                           ;AMBER_LAGER.c: 322:     lcdData('L');
  5618  001CCE  0E4C               	movlw	76
  5619  001CD0  EC38  F01D         	call	_lcdData
  5620                           
  5621                           ;AMBER_LAGER.c: 323:     lcdData('S');
  5622  001CD4  0E53               	movlw	83
  5623  001CD6  EC38  F01D         	call	_lcdData
  5624                           
  5625                           ;AMBER_LAGER.c: 325:     lcdCommand(0xA8);
  5626  001CDA  0EA8               	movlw	168
  5627  001CDC  EC5C  F01B         	call	_lcdCommand
  5628                           
  5629                           ;AMBER_LAGER.c: 326:     lcdData('-');
  5630  001CE0  0E2D               	movlw	45
  5631  001CE2  EC38  F01D         	call	_lcdData
  5632                           
  5633                           ;AMBER_LAGER.c: 327:     lcdData(0x00);
  5634  001CE6  0E00               	movlw	0
  5635  001CE8  EC38  F01D         	call	_lcdData
  5636                           
  5637                           ;AMBER_LAGER.c: 328:     lcdData('2');
  5638  001CEC  0E32               	movlw	50
  5639  001CEE  EC38  F01D         	call	_lcdData
  5640                           
  5641                           ;AMBER_LAGER.c: 329:     lcdData('3');
  5642  001CF2  0E33               	movlw	51
  5643  001CF4  EC38  F01D         	call	_lcdData
  5644                           
  5645                           ;AMBER_LAGER.c: 330:     lcdData('0');
  5646  001CF8  0E30               	movlw	48
  5647  001CFA  EC38  F01D         	call	_lcdData
  5648                           
  5649                           ;AMBER_LAGER.c: 331:     lcdData('G');
  5650  001CFE  0E47               	movlw	71
  5651  001D00  EC38  F01D         	call	_lcdData
  5652                           
  5653                           ;AMBER_LAGER.c: 333:     lcdCommand(0xD0);
  5654  001D04  0ED0               	movlw	208
  5655  001D06  EC5C  F01B         	call	_lcdCommand
  5656                           
  5657                           ;AMBER_LAGER.c: 334:     lcdData('-');
  5658  001D0A  0E2D               	movlw	45
  5659  001D0C  EC38  F01D         	call	_lcdData
  5660                           
  5661                           ;AMBER_LAGER.c: 335:     lcdData(0x00);
  5662  001D10  0E00               	movlw	0
  5663  001D12  EC38  F01D         	call	_lcdData
  5664                           
  5665                           ;AMBER_LAGER.c: 336:     lcdData('5');
  5666  001D16  0E35               	movlw	53
  5667  001D18  EC38  F01D         	call	_lcdData
  5668                           
  5669                           ;AMBER_LAGER.c: 337:     lcdData('%');
  5670  001D1C  0E25               	movlw	37
  5671  001D1E  EC38  F01D         	call	_lcdData
  5672                           
  5673                           ;AMBER_LAGER.c: 339:     atraso_ms(2500);
  5674  001D22  0E09               	movlw	9
  5675  001D24  6E1B               	movwf	(atraso_ms@valor+1)^0,c
  5676  001D26  0EC4               	movlw	196
  5677  001D28  6E1A               	movwf	atraso_ms@valor^0,c
  5678  001D2A  ECAF  F01C         	call	_atraso_ms	;wreg free
  5679                           
  5680                           ;AMBER_LAGER.c: 341:      lcdCommand(0x01);
  5681  001D2E  0E01               	movlw	1
  5682  001D30  EC5C  F01B         	call	_lcdCommand
  5683                           
  5684                           ;AMBER_LAGER.c: 342:     lcdCommand(0x83);
  5685  001D34  0E83               	movlw	131
  5686  001D36  EC5C  F01B         	call	_lcdCommand
  5687                           
  5688                           ;AMBER_LAGER.c: 343:     lcdData('-');
  5689  001D3A  0E2D               	movlw	45
  5690  001D3C  EC38  F01D         	call	_lcdData
  5691                           
  5692                           ;AMBER_LAGER.c: 344:     lcdData('M');
  5693  001D40  0E4D               	movlw	77
  5694  001D42  EC38  F01D         	call	_lcdData
  5695                           
  5696                           ;AMBER_LAGER.c: 345:     lcdData('A');
  5697  001D46  0E41               	movlw	65
  5698  001D48  EC38  F01D         	call	_lcdData
  5699                           
  5700                           ;AMBER_LAGER.c: 346:     lcdData('L');
  5701  001D4C  0E4C               	movlw	76
  5702  001D4E  EC38  F01D         	call	_lcdData
  5703                           
  5704                           ;AMBER_LAGER.c: 347:     lcdData('T');
  5705  001D52  0E54               	movlw	84
  5706  001D54  EC38  F01D         	call	_lcdData
  5707                           
  5708                           ;AMBER_LAGER.c: 348:     lcdData('E');
  5709  001D58  0E45               	movlw	69
  5710  001D5A  EC38  F01D         	call	_lcdData
  5711                           
  5712                           ;AMBER_LAGER.c: 349:     lcdData(0x00);
  5713  001D5E  0E00               	movlw	0
  5714  001D60  EC38  F01D         	call	_lcdData
  5715                           
  5716                           ;AMBER_LAGER.c: 350:     lcdData('5');
  5717  001D64  0E35               	movlw	53
  5718  001D66  EC38  F01D         	call	_lcdData
  5719                           
  5720                           ;AMBER_LAGER.c: 351:     lcdData('-');
  5721  001D6A  0E2D               	movlw	45
  5722  001D6C  EC38  F01D         	call	_lcdData
  5723                           
  5724                           ;AMBER_LAGER.c: 353:     lcdCommand(0xC0);
  5725  001D70  0EC0               	movlw	192
  5726  001D72  EC5C  F01B         	call	_lcdCommand
  5727                           
  5728                           ;AMBER_LAGER.c: 354:     lcdData('C');
  5729  001D76  0E43               	movlw	67
  5730  001D78  EC38  F01D         	call	_lcdData
  5731                           
  5732                           ;AMBER_LAGER.c: 355:     lcdData('A');
  5733  001D7C  0E41               	movlw	65
  5734  001D7E  EC38  F01D         	call	_lcdData
  5735                           
  5736                           ;AMBER_LAGER.c: 356:     lcdData('R');
  5737  001D82  0E52               	movlw	82
  5738  001D84  EC38  F01D         	call	_lcdData
  5739                           
  5740                           ;AMBER_LAGER.c: 357:     lcdData('A');
  5741  001D88  0E41               	movlw	65
  5742  001D8A  EC38  F01D         	call	_lcdData
  5743                           
  5744                           ;AMBER_LAGER.c: 358:     lcdData('A');
  5745  001D8E  0E41               	movlw	65
  5746  001D90  EC38  F01D         	call	_lcdData
  5747                           
  5748                           ;AMBER_LAGER.c: 359:     lcdData('M');
  5749  001D94  0E4D               	movlw	77
  5750  001D96  EC38  F01D         	call	_lcdData
  5751                           
  5752                           ;AMBER_LAGER.c: 360:     lcdData('B');
  5753  001D9A  0E42               	movlw	66
  5754  001D9C  EC38  F01D         	call	_lcdData
  5755                           
  5756                           ;AMBER_LAGER.c: 361:     lcdData('E');
  5757  001DA0  0E45               	movlw	69
  5758  001DA2  EC38  F01D         	call	_lcdData
  5759                           
  5760                           ;AMBER_LAGER.c: 362:     lcdData('R');
  5761  001DA6  0E52               	movlw	82
  5762  001DA8  EC38  F01D         	call	_lcdData
  5763                           
  5764                           ;AMBER_LAGER.c: 364:     lcdCommand(0xA8);
  5765  001DAC  0EA8               	movlw	168
  5766  001DAE  EC5C  F01B         	call	_lcdCommand
  5767                           
  5768                           ;AMBER_LAGER.c: 365:     lcdData('-');
  5769  001DB2  0E2D               	movlw	45
  5770  001DB4  EC38  F01D         	call	_lcdData
  5771                           
  5772                           ;AMBER_LAGER.c: 366:     lcdData(0x00);
  5773  001DB8  0E00               	movlw	0
  5774  001DBA  EC38  F01D         	call	_lcdData
  5775                           
  5776                           ;AMBER_LAGER.c: 367:     lcdData('2');
  5777  001DBE  0E32               	movlw	50
  5778  001DC0  EC38  F01D         	call	_lcdData
  5779                           
  5780                           ;AMBER_LAGER.c: 368:     lcdData('0');
  5781  001DC4  0E30               	movlw	48
  5782  001DC6  EC38  F01D         	call	_lcdData
  5783                           
  5784                           ;AMBER_LAGER.c: 369:     lcdData('0');
  5785  001DCA  0E30               	movlw	48
  5786  001DCC  EC38  F01D         	call	_lcdData
  5787                           
  5788                           ;AMBER_LAGER.c: 370:     lcdData('G');
  5789  001DD0  0E47               	movlw	71
  5790  001DD2  EC38  F01D         	call	_lcdData
  5791                           
  5792                           ;AMBER_LAGER.c: 372:     lcdCommand(0xD0);
  5793  001DD6  0ED0               	movlw	208
  5794  001DD8  EC5C  F01B         	call	_lcdCommand
  5795                           
  5796                           ;AMBER_LAGER.c: 373:     lcdData('-');
  5797  001DDC  0E2D               	movlw	45
  5798  001DDE  EC38  F01D         	call	_lcdData
  5799                           
  5800                           ;AMBER_LAGER.c: 374:     lcdData(0x00);
  5801  001DE2  0E00               	movlw	0
  5802  001DE4  EC38  F01D         	call	_lcdData
  5803                           
  5804                           ;AMBER_LAGER.c: 375:     lcdData('4');
  5805  001DE8  0E34               	movlw	52
  5806  001DEA  EC38  F01D         	call	_lcdData
  5807                           
  5808                           ;AMBER_LAGER.c: 376:     lcdData('%');
  5809  001DEE  0E25               	movlw	37
  5810  001DF0  EC38  F01D         	call	_lcdData
  5811                           
  5812                           ;AMBER_LAGER.c: 378:     atraso_ms(2500);
  5813  001DF4  0E09               	movlw	9
  5814  001DF6  6E1B               	movwf	(atraso_ms@valor+1)^0,c
  5815  001DF8  0EC4               	movlw	196
  5816  001DFA  6E1A               	movwf	atraso_ms@valor^0,c
  5817  001DFC  ECAF  F01C         	call	_atraso_ms	;wreg free
  5818                           
  5819                           ;AMBER_LAGER.c: 380:     lcdCommand(0x01);
  5820  001E00  0E01               	movlw	1
  5821  001E02  EC5C  F01B         	call	_lcdCommand
  5822                           
  5823                           ;AMBER_LAGER.c: 381:     lcdCommand(0x83);
  5824  001E06  0E83               	movlw	131
  5825  001E08  EC5C  F01B         	call	_lcdCommand
  5826                           
  5827                           ;AMBER_LAGER.c: 382:     lcdData('-');
  5828  001E0C  0E2D               	movlw	45
  5829  001E0E  EC38  F01D         	call	_lcdData
  5830                           
  5831                           ;AMBER_LAGER.c: 383:     lcdData('L');
  5832  001E12  0E4C               	movlw	76
  5833  001E14  EC38  F01D         	call	_lcdData
  5834                           
  5835                           ;AMBER_LAGER.c: 384:     lcdData('U');
  5836  001E18  0E55               	movlw	85
  5837  001E1A  EC38  F01D         	call	_lcdData
  5838                           
  5839                           ;AMBER_LAGER.c: 385:     lcdData('P');
  5840  001E1E  0E50               	movlw	80
  5841  001E20  EC38  F01D         	call	_lcdData
  5842                           
  5843                           ;AMBER_LAGER.c: 386:     lcdData('U');
  5844  001E24  0E55               	movlw	85
  5845  001E26  EC38  F01D         	call	_lcdData
  5846                           
  5847                           ;AMBER_LAGER.c: 387:     lcdData('L');
  5848  001E2A  0E4C               	movlw	76
  5849  001E2C  EC38  F01D         	call	_lcdData
  5850                           
  5851                           ;AMBER_LAGER.c: 388:     lcdData('O');
  5852  001E30  0E4F               	movlw	79
  5853  001E32  EC38  F01D         	call	_lcdData
  5854                           
  5855                           ;AMBER_LAGER.c: 389:     lcdData(0x00);
  5856  001E36  0E00               	movlw	0
  5857  001E38  EC38  F01D         	call	_lcdData
  5858                           
  5859                           ;AMBER_LAGER.c: 390:     lcdData('1');
  5860  001E3C  0E31               	movlw	49
  5861  001E3E  EC38  F01D         	call	_lcdData
  5862                           
  5863                           ;AMBER_LAGER.c: 391:     lcdData('-');
  5864  001E42  0E2D               	movlw	45
  5865  001E44  EC38  F01D         	call	_lcdData
  5866                           
  5867                           ;AMBER_LAGER.c: 393:     lcdCommand(0xC0);
  5868  001E48  0EC0               	movlw	192
  5869  001E4A  EC5C  F01B         	call	_lcdCommand
  5870                           
  5871                           ;AMBER_LAGER.c: 394:     lcdData('M');
  5872  001E4E  0E4D               	movlw	77
  5873  001E50  EC38  F01D         	call	_lcdData
  5874                           
  5875                           ;AMBER_LAGER.c: 395:     lcdData('A');
  5876  001E54  0E41               	movlw	65
  5877  001E56  EC38  F01D         	call	_lcdData
  5878                           
  5879                           ;AMBER_LAGER.c: 396:     lcdData('G');
  5880  001E5A  0E47               	movlw	71
  5881  001E5C  EC38  F01D         	call	_lcdData
  5882                           
  5883                           ;AMBER_LAGER.c: 397:     lcdData('N');
  5884  001E60  0E4E               	movlw	78
  5885  001E62  EC38  F01D         	call	_lcdData
  5886                           
  5887                           ;AMBER_LAGER.c: 398:     lcdData('U');
  5888  001E66  0E55               	movlw	85
  5889  001E68  EC38  F01D         	call	_lcdData
  5890                           
  5891                           ;AMBER_LAGER.c: 399:     lcdData('M');
  5892  001E6C  0E4D               	movlw	77
  5893  001E6E  EC38  F01D         	call	_lcdData
  5894                           
  5895                           ;AMBER_LAGER.c: 401:     lcdCommand(0xA8);
  5896  001E72  0EA8               	movlw	168
  5897  001E74  EC5C  F01B         	call	_lcdCommand
  5898                           
  5899                           ;AMBER_LAGER.c: 402:     lcdData('-');
  5900  001E78  0E2D               	movlw	45
  5901  001E7A  EC38  F01D         	call	_lcdData
  5902                           
  5903                           ;AMBER_LAGER.c: 403:     lcdData(0x00);
  5904  001E7E  0E00               	movlw	0
  5905  001E80  EC38  F01D         	call	_lcdData
  5906                           
  5907                           ;AMBER_LAGER.c: 404:     lcdData('1');
  5908  001E84  0E31               	movlw	49
  5909  001E86  EC38  F01D         	call	_lcdData
  5910                           
  5911                           ;AMBER_LAGER.c: 405:     lcdData('2');
  5912  001E8A  0E32               	movlw	50
  5913  001E8C  EC38  F01D         	call	_lcdData
  5914                           
  5915                           ;AMBER_LAGER.c: 406:     lcdData('G');
  5916  001E90  0E47               	movlw	71
  5917  001E92  EC38  F01D         	call	_lcdData
  5918                           
  5919                           ;AMBER_LAGER.c: 409:      atraso_ms(3000);
  5920  001E96  0E0B               	movlw	11
  5921  001E98  6E1B               	movwf	(atraso_ms@valor+1)^0,c
  5922  001E9A  0EB8               	movlw	184
  5923  001E9C  6E1A               	movwf	atraso_ms@valor^0,c
  5924  001E9E  ECAF  F01C         	call	_atraso_ms	;wreg free
  5925                           
  5926                           ;AMBER_LAGER.c: 412:     lcdCommand(0x01);
  5927  001EA2  0E01               	movlw	1
  5928  001EA4  EC5C  F01B         	call	_lcdCommand
  5929                           
  5930                           ;AMBER_LAGER.c: 413:     lcdCommand(0x80);
  5931  001EA8  0E80               	movlw	128
  5932  001EAA  EC5C  F01B         	call	_lcdCommand
  5933                           
  5934                           ;AMBER_LAGER.c: 414:     lcdData('E');
  5935  001EAE  0E45               	movlw	69
  5936  001EB0  EC38  F01D         	call	_lcdData
  5937                           
  5938                           ;AMBER_LAGER.c: 415:     lcdData('S');
  5939  001EB4  0E53               	movlw	83
  5940  001EB6  EC38  F01D         	call	_lcdData
  5941                           
  5942                           ;AMBER_LAGER.c: 416:     lcdData('Q');
  5943  001EBA  0E51               	movlw	81
  5944  001EBC  EC38  F01D         	call	_lcdData
  5945                           
  5946                           ;AMBER_LAGER.c: 417:     lcdData('U');
  5947  001EC0  0E55               	movlw	85
  5948  001EC2  EC38  F01D         	call	_lcdData
  5949                           
  5950                           ;AMBER_LAGER.c: 418:     lcdData('E');
  5951  001EC6  0E45               	movlw	69
  5952  001EC8  EC38  F01D         	call	_lcdData
  5953                           
  5954                           ;AMBER_LAGER.c: 419:     lcdData('N');
  5955  001ECC  0E4E               	movlw	78
  5956  001ECE  EC38  F01D         	call	_lcdData
  5957                           
  5958                           ;AMBER_LAGER.c: 420:     lcdData('T');
  5959  001ED2  0E54               	movlw	84
  5960  001ED4  EC38  F01D         	call	_lcdData
  5961                           
  5962                           ;AMBER_LAGER.c: 421:     lcdData('A');
  5963  001ED8  0E41               	movlw	65
  5964  001EDA  EC38  F01D         	call	_lcdData
  5965                           
  5966                           ;AMBER_LAGER.c: 422:     lcdData('N');
  5967  001EDE  0E4E               	movlw	78
  5968  001EE0  EC38  F01D         	call	_lcdData
  5969                           
  5970                           ;AMBER_LAGER.c: 423:     lcdData('D');
  5971  001EE4  0E44               	movlw	68
  5972  001EE6  EC38  F01D         	call	_lcdData
  5973                           
  5974                           ;AMBER_LAGER.c: 424:     lcdData('0');
  5975  001EEA  0E30               	movlw	48
  5976  001EEC  EC38  F01D         	call	_lcdData
  5977                           
  5978                           ;AMBER_LAGER.c: 425:     lcdData('.');
  5979  001EF0  0E2E               	movlw	46
  5980  001EF2  EC38  F01D         	call	_lcdData
  5981                           
  5982                           ;AMBER_LAGER.c: 426:     lcdData('.');
  5983  001EF6  0E2E               	movlw	46
  5984  001EF8  EC38  F01D         	call	_lcdData
  5985                           
  5986                           ;AMBER_LAGER.c: 427:     lcdData('.');
  5987  001EFC  0E2E               	movlw	46
  5988  001EFE  EC38  F01D         	call	_lcdData
  5989  001F02  EF54  F013         	goto	l2852
  5990  001F06                     l2710:
  5991                           
  5992                           ;AMBER_LAGER.c: 432:  atraso_ms(1);
  5993  001F06  0E00               	movlw	0
  5994  001F08  6E1B               	movwf	(atraso_ms@valor+1)^0,c
  5995  001F0A  0E01               	movlw	1
  5996  001F0C  6E1A               	movwf	atraso_ms@valor^0,c
  5997  001F0E  ECAF  F01C         	call	_atraso_ms	;wreg free
  5998  001F12                     
  5999                           ;AMBER_LAGER.c: 433:  tmp++;
  6000  001F12  4A01               	infsnz	_tmp^0,f,c
  6001  001F14  2A02               	incf	(_tmp+1)^0,f,c
  6002  001F16                     
  6003                           ;AMBER_LAGER.c: 434:  ssdDigit(16 , 3);
  6004  001F16  0E03               	movlw	3
  6005  001F18  6E26               	movwf	ssdDigit@pos^0,c
  6006  001F1A  0E10               	movlw	16
  6007  001F1C  ECE1  F01C         	call	_ssdDigit
  6008  001F20                     
  6009                           ;AMBER_LAGER.c: 435:  ssdDigit((tmp/100)%10 , 2);
  6010  001F20  0E02               	movlw	2
  6011  001F22  6E26               	movwf	ssdDigit@pos^0,c
  6012  001F24  0E00               	movlw	0
  6013  001F26  6E1D               	movwf	(___lwdiv@divisor+1)^0,c
  6014  001F28  0E64               	movlw	100
  6015  001F2A  6E1C               	movwf	___lwdiv@divisor^0,c
  6016  001F2C  C001  F01A         	movff	_tmp,___lwdiv@dividend
  6017  001F30  C002  F01B         	movff	_tmp+1,___lwdiv@dividend+1
  6018  001F34  ECD7  F01B         	call	___lwdiv	;wreg free
  6019  001F38  C01A  F021         	movff	?___lwdiv,___lwmod@dividend
  6020  001F3C  C01B  F022         	movff	?___lwdiv+1,___lwmod@dividend+1
  6021  001F40  0E00               	movlw	0
  6022  001F42  6E24               	movwf	(___lwmod@divisor+1)^0,c
  6023  001F44  0E0A               	movlw	10
  6024  001F46  6E23               	movwf	___lwmod@divisor^0,c
  6025  001F48  EC7D  F01C         	call	___lwmod	;wreg free
  6026  001F4C  5021               	movf	?___lwmod^0,w,c
  6027  001F4E  ECE1  F01C         	call	_ssdDigit
  6028  001F52                     
  6029                           ;AMBER_LAGER.c: 436:  ssdDigit((tmp/1000)%10, 1);
  6030  001F52  0E01               	movlw	1
  6031  001F54  6E26               	movwf	ssdDigit@pos^0,c
  6032  001F56  0E03               	movlw	3
  6033  001F58  6E1D               	movwf	(___lwdiv@divisor+1)^0,c
  6034  001F5A  0EE8               	movlw	232
  6035  001F5C  6E1C               	movwf	___lwdiv@divisor^0,c
  6036  001F5E  C001  F01A         	movff	_tmp,___lwdiv@dividend
  6037  001F62  C002  F01B         	movff	_tmp+1,___lwdiv@dividend+1
  6038  001F66  ECD7  F01B         	call	___lwdiv	;wreg free
  6039  001F6A  C01A  F021         	movff	?___lwdiv,___lwmod@dividend
  6040  001F6E  C01B  F022         	movff	?___lwdiv+1,___lwmod@dividend+1
  6041  001F72  0E00               	movlw	0
  6042  001F74  6E24               	movwf	(___lwmod@divisor+1)^0,c
  6043  001F76  0E0A               	movlw	10
  6044  001F78  6E23               	movwf	___lwmod@divisor^0,c
  6045  001F7A  EC7D  F01C         	call	___lwmod	;wreg free
  6046  001F7E  5021               	movf	?___lwmod^0,w,c
  6047  001F80  ECE1  F01C         	call	_ssdDigit
  6048  001F84                     
  6049                           ;AMBER_LAGER.c: 437:  ssdUpdate();
  6050  001F84  EC1B  F01A         	call	_ssdUpdate	;wreg free
  6051  001F88                     
  6052                           ;AMBER_LAGER.c: 439: if(tmp>= vlr)
  6053  001F88  5031               	movf	_vlr^0,w,c
  6054  001F8A  5C01               	subwf	_tmp^0,w,c
  6055  001F8C  5032               	movf	(_vlr+1)^0,w,c
  6056  001F8E  5802               	subwfb	(_tmp+1)^0,w,c
  6057  001F90  A0D8               	btfss	status,0,c
  6058  001F92  EFCD  F00F         	goto	u2101
  6059  001F96  EFCF  F00F         	goto	u2100
  6060  001F9A                     u2101:
  6061  001F9A  EF54  F013         	goto	l2852
  6062  001F9E                     u2100:
  6063  001F9E                     
  6064                           ;AMBER_LAGER.c: 440: {;AMBER_LAGER.c: 441:   slot = 1;
  6065  001F9E  0E01               	movlw	1
  6066  001FA0  6E2A               	movwf	amber_lager@slot^0,c
  6067  001FA2  EF54  F013         	goto	l2852
  6068  001FA6                     l2726:
  6069                           
  6070                           ;AMBER_LAGER.c: 446:      cont++;
  6071  001FA6  4A05               	infsnz	_cont^0,f,c
  6072  001FA8  2A06               	incf	(_cont+1)^0,f,c
  6073  001FAA                     
  6074                           ;AMBER_LAGER.c: 447:      tmp = vlr;
  6075  001FAA  C031  F001         	movff	_vlr,_tmp
  6076  001FAE  C032  F002         	movff	_vlr+1,_tmp+1
  6077  001FB2                     
  6078                           ;AMBER_LAGER.c: 448:      if((cont==1))
  6079  001FB2  0405               	decf	_cont^0,w,c
  6080  001FB4  1006               	iorwf	(_cont+1)^0,w,c
  6081  001FB6  A4D8               	btfss	status,2,c
  6082  001FB8  EFE0  F00F         	goto	u2111
  6083  001FBC  EFE2  F00F         	goto	u2110
  6084  001FC0                     u2111:
  6085  001FC0  EF75  F012         	goto	l2816
  6086  001FC4                     u2110:
  6087  001FC4                     
  6088                           ;AMBER_LAGER.c: 449:      {;AMBER_LAGER.c: 451:      pwmSet2(50);
  6089  001FC4  0E32               	movlw	50
  6090  001FC6  EC11  F01C         	call	_pwmSet2
  6091  001FCA                     
  6092                           ;AMBER_LAGER.c: 452:      atraso_ms(100);
  6093  001FCA  0E00               	movlw	0
  6094  001FCC  6E1B               	movwf	(atraso_ms@valor+1)^0,c
  6095  001FCE  0E64               	movlw	100
  6096  001FD0  6E1A               	movwf	atraso_ms@valor^0,c
  6097  001FD2  ECAF  F01C         	call	_atraso_ms	;wreg free
  6098  001FD6                     
  6099                           ;AMBER_LAGER.c: 453:      pwmSet2(0);
  6100  001FD6  0E00               	movlw	0
  6101  001FD8  EC11  F01C         	call	_pwmSet2
  6102  001FDC                     
  6103                           ;AMBER_LAGER.c: 455:     if(vlr<=6700){
  6104  001FDC  0E2D               	movlw	45
  6105  001FDE  5C31               	subwf	_vlr^0,w,c
  6106  001FE0  0E1A               	movlw	26
  6107  001FE2  5832               	subwfb	(_vlr+1)^0,w,c
  6108  001FE4  B0D8               	btfsc	status,0,c
  6109  001FE6  EFF7  F00F         	goto	u2121
  6110  001FEA  EFF9  F00F         	goto	u2120
  6111  001FEE                     u2121:
  6112  001FEE  EF41  F010         	goto	l2742
  6113  001FF2                     u2120:
  6114  001FF2                     
  6115                           ;AMBER_LAGER.c: 456:     lcdCommand(0x01);
  6116  001FF2  0E01               	movlw	1
  6117  001FF4  EC5C  F01B         	call	_lcdCommand
  6118                           
  6119                           ;AMBER_LAGER.c: 457:     lcdCommand(0x80);
  6120  001FF8  0E80               	movlw	128
  6121  001FFA  EC5C  F01B         	call	_lcdCommand
  6122                           
  6123                           ;AMBER_LAGER.c: 458:     lcdData('I');
  6124  001FFE  0E49               	movlw	73
  6125  002000  EC38  F01D         	call	_lcdData
  6126                           
  6127                           ;AMBER_LAGER.c: 459:     lcdData('N');
  6128  002004  0E4E               	movlw	78
  6129  002006  EC38  F01D         	call	_lcdData
  6130                           
  6131                           ;AMBER_LAGER.c: 460:     lcdData('S');
  6132  00200A  0E53               	movlw	83
  6133  00200C  EC38  F01D         	call	_lcdData
  6134                           
  6135                           ;AMBER_LAGER.c: 461:     lcdData('I');
  6136  002010  0E49               	movlw	73
  6137  002012  EC38  F01D         	call	_lcdData
  6138                           
  6139                           ;AMBER_LAGER.c: 462:     lcdData('R');
  6140  002016  0E52               	movlw	82
  6141  002018  EC38  F01D         	call	_lcdData
  6142                           
  6143                           ;AMBER_LAGER.c: 463:     lcdData('A');
  6144  00201C  0E41               	movlw	65
  6145  00201E  EC38  F01D         	call	_lcdData
  6146                           
  6147                           ;AMBER_LAGER.c: 464:     lcdData(0x00);
  6148  002022  0E00               	movlw	0
  6149  002024  EC38  F01D         	call	_lcdData
  6150                           
  6151                           ;AMBER_LAGER.c: 465:     lcdData('O');
  6152  002028  0E4F               	movlw	79
  6153  00202A  EC38  F01D         	call	_lcdData
  6154                           
  6155                           ;AMBER_LAGER.c: 466:     lcdData('S');
  6156  00202E  0E53               	movlw	83
  6157  002030  EC38  F01D         	call	_lcdData
  6158                           
  6159                           ;AMBER_LAGER.c: 467:     lcdData(0x00);
  6160  002034  0E00               	movlw	0
  6161  002036  EC38  F01D         	call	_lcdData
  6162                           
  6163                           ;AMBER_LAGER.c: 468:     lcdData('M');
  6164  00203A  0E4D               	movlw	77
  6165  00203C  EC38  F01D         	call	_lcdData
  6166                           
  6167                           ;AMBER_LAGER.c: 469:     lcdData('A');
  6168  002040  0E41               	movlw	65
  6169  002042  EC38  F01D         	call	_lcdData
  6170                           
  6171                           ;AMBER_LAGER.c: 470:     lcdData('L');
  6172  002046  0E4C               	movlw	76
  6173  002048  EC38  F01D         	call	_lcdData
  6174                           
  6175                           ;AMBER_LAGER.c: 471:     lcdData('T');
  6176  00204C  0E54               	movlw	84
  6177  00204E  EC38  F01D         	call	_lcdData
  6178                           
  6179                           ;AMBER_LAGER.c: 472:     lcdData('E');
  6180  002052  0E45               	movlw	69
  6181  002054  EC38  F01D         	call	_lcdData
  6182                           
  6183                           ;AMBER_LAGER.c: 473:     lcdData('S');
  6184  002058  0E53               	movlw	83
  6185  00205A  EC38  F01D         	call	_lcdData
  6186                           
  6187                           ;AMBER_LAGER.c: 474:     lcdCommand(0xDB);
  6188  00205E  0EDB               	movlw	219
  6189  002060  EC5C  F01B         	call	_lcdCommand
  6190                           
  6191                           ;AMBER_LAGER.c: 475:     lcdData('O');
  6192  002064  0E4F               	movlw	79
  6193  002066  EC38  F01D         	call	_lcdData
  6194                           
  6195                           ;AMBER_LAGER.c: 476:     lcdData('K');
  6196  00206A  0E4B               	movlw	75
  6197  00206C  EC38  F01D         	call	_lcdData
  6198                           
  6199                           ;AMBER_LAGER.c: 477:     lcdData('(');
  6200  002070  0E28               	movlw	40
  6201  002072  EC38  F01D         	call	_lcdData
  6202                           
  6203                           ;AMBER_LAGER.c: 478:     lcdData('#');
  6204  002076  0E23               	movlw	35
  6205  002078  EC38  F01D         	call	_lcdData
  6206                           
  6207                           ;AMBER_LAGER.c: 479:     lcdData(')');
  6208  00207C  0E29               	movlw	41
  6209  00207E  EC38  F01D         	call	_lcdData
  6210  002082                     l2742:
  6211                           
  6212                           ;AMBER_LAGER.c: 482:      if((vlr<=(6700 +2))&&( vlr > 6700))
  6213  002082  0E2F               	movlw	47
  6214  002084  5C31               	subwf	_vlr^0,w,c
  6215  002086  0E1A               	movlw	26
  6216  002088  5832               	subwfb	(_vlr+1)^0,w,c
  6217  00208A  B0D8               	btfsc	status,0,c
  6218  00208C  EF4A  F010         	goto	u2131
  6219  002090  EF4C  F010         	goto	u2130
  6220  002094                     u2131:
  6221  002094  EF79  F010         	goto	l2750
  6222  002098                     u2130:
  6223  002098  0E2D               	movlw	45
  6224  00209A  5C31               	subwf	_vlr^0,w,c
  6225  00209C  0E1A               	movlw	26
  6226  00209E  5832               	subwfb	(_vlr+1)^0,w,c
  6227  0020A0  A0D8               	btfss	status,0,c
  6228  0020A2  EF55  F010         	goto	u2141
  6229  0020A6  EF57  F010         	goto	u2140
  6230  0020AA                     u2141:
  6231  0020AA  EF79  F010         	goto	l2750
  6232  0020AE                     u2140:
  6233  0020AE                     
  6234                           ;AMBER_LAGER.c: 483:     {;AMBER_LAGER.c: 484:     lcdCommand(0x01);
  6235  0020AE  0E01               	movlw	1
  6236  0020B0  EC5C  F01B         	call	_lcdCommand
  6237                           
  6238                           ;AMBER_LAGER.c: 485:     lcdCommand(0x80);
  6239  0020B4  0E80               	movlw	128
  6240  0020B6  EC5C  F01B         	call	_lcdCommand
  6241                           
  6242                           ;AMBER_LAGER.c: 486:     lcdData('D');
  6243  0020BA  0E44               	movlw	68
  6244  0020BC  EC38  F01D         	call	_lcdData
  6245                           
  6246                           ;AMBER_LAGER.c: 487:     lcdData('E');
  6247  0020C0  0E45               	movlw	69
  6248  0020C2  EC38  F01D         	call	_lcdData
  6249                           
  6250                           ;AMBER_LAGER.c: 488:     lcdData('G');
  6251  0020C6  0E47               	movlw	71
  6252  0020C8  EC38  F01D         	call	_lcdData
  6253                           
  6254                           ;AMBER_LAGER.c: 489:     lcdData('R');
  6255  0020CC  0E52               	movlw	82
  6256  0020CE  EC38  F01D         	call	_lcdData
  6257                           
  6258                           ;AMBER_LAGER.c: 490:     lcdData('A');
  6259  0020D2  0E41               	movlw	65
  6260  0020D4  EC38  F01D         	call	_lcdData
  6261                           
  6262                           ;AMBER_LAGER.c: 491:     lcdData('U');
  6263  0020D8  0E55               	movlw	85
  6264  0020DA  EC38  F01D         	call	_lcdData
  6265                           
  6266                           ;AMBER_LAGER.c: 492:     lcdData(0x00);
  6267  0020DE  0E00               	movlw	0
  6268  0020E0  EC38  F01D         	call	_lcdData
  6269                           
  6270                           ;AMBER_LAGER.c: 493:     lcdData('0');
  6271  0020E4  0E30               	movlw	48
  6272  0020E6  EC38  F01D         	call	_lcdData
  6273  0020EA                     
  6274                           ;AMBER_LAGER.c: 494:      vlr = 6700 + 2;
  6275  0020EA  0E1A               	movlw	26
  6276  0020EC  6E32               	movwf	(_vlr+1)^0,c
  6277  0020EE  0E2E               	movlw	46
  6278  0020F0  6E31               	movwf	_vlr^0,c
  6279  0020F2                     l2750:
  6280                           
  6281                           ;AMBER_LAGER.c: 497:      if((vlr<=7600)&&( vlr > (6700 +2)))
  6282  0020F2  0EB1               	movlw	177
  6283  0020F4  5C31               	subwf	_vlr^0,w,c
  6284  0020F6  0E1D               	movlw	29
  6285  0020F8  5832               	subwfb	(_vlr+1)^0,w,c
  6286  0020FA  B0D8               	btfsc	status,0,c
  6287  0020FC  EF82  F010         	goto	u2151
  6288  002100  EF84  F010         	goto	u2150
  6289  002104                     u2151:
  6290  002104  EFAE  F010         	goto	l2756
  6291  002108                     u2150:
  6292  002108  0E2F               	movlw	47
  6293  00210A  5C31               	subwf	_vlr^0,w,c
  6294  00210C  0E1A               	movlw	26
  6295  00210E  5832               	subwfb	(_vlr+1)^0,w,c
  6296  002110  A0D8               	btfss	status,0,c
  6297  002112  EF8D  F010         	goto	u2161
  6298  002116  EF8F  F010         	goto	u2160
  6299  00211A                     u2161:
  6300  00211A  EFAE  F010         	goto	l2756
  6301  00211E                     u2160:
  6302  00211E                     
  6303                           ;AMBER_LAGER.c: 498:     {;AMBER_LAGER.c: 499:     lcdCommand(0x01);
  6304  00211E  0E01               	movlw	1
  6305  002120  EC5C  F01B         	call	_lcdCommand
  6306                           
  6307                           ;AMBER_LAGER.c: 500:     lcdCommand(0x80);
  6308  002124  0E80               	movlw	128
  6309  002126  EC5C  F01B         	call	_lcdCommand
  6310                           
  6311                           ;AMBER_LAGER.c: 501:     lcdData('D');
  6312  00212A  0E44               	movlw	68
  6313  00212C  EC38  F01D         	call	_lcdData
  6314                           
  6315                           ;AMBER_LAGER.c: 502:     lcdData('E');
  6316  002130  0E45               	movlw	69
  6317  002132  EC38  F01D         	call	_lcdData
  6318                           
  6319                           ;AMBER_LAGER.c: 503:     lcdData('G');
  6320  002136  0E47               	movlw	71
  6321  002138  EC38  F01D         	call	_lcdData
  6322                           
  6323                           ;AMBER_LAGER.c: 504:     lcdData('R');
  6324  00213C  0E52               	movlw	82
  6325  00213E  EC38  F01D         	call	_lcdData
  6326                           
  6327                           ;AMBER_LAGER.c: 505:     lcdData('A');
  6328  002142  0E41               	movlw	65
  6329  002144  EC38  F01D         	call	_lcdData
  6330                           
  6331                           ;AMBER_LAGER.c: 506:     lcdData('U');
  6332  002148  0E55               	movlw	85
  6333  00214A  EC38  F01D         	call	_lcdData
  6334                           
  6335                           ;AMBER_LAGER.c: 507:     lcdData(0x00);
  6336  00214E  0E00               	movlw	0
  6337  002150  EC38  F01D         	call	_lcdData
  6338                           
  6339                           ;AMBER_LAGER.c: 508:     lcdData(i + 0x30);
  6340  002154  5033               	movf	_i^0,w,c
  6341  002156  0F30               	addlw	48
  6342  002158  EC38  F01D         	call	_lcdData
  6343  00215C                     l2756:
  6344                           
  6345                           ;AMBER_LAGER.c: 511:      if((i==5)&&(vlr<=9900))
  6346  00215C  0E05               	movlw	5
  6347  00215E  1833               	xorwf	_i^0,w,c
  6348  002160  1034               	iorwf	(_i+1)^0,w,c
  6349  002162  A4D8               	btfss	status,2,c
  6350  002164  EFB6  F010         	goto	u2171
  6351  002168  EFB8  F010         	goto	u2170
  6352  00216C                     u2171:
  6353  00216C  EFE1  F010         	goto	l2764
  6354  002170                     u2170:
  6355  002170  0EAD               	movlw	173
  6356  002172  5C31               	subwf	_vlr^0,w,c
  6357  002174  0E26               	movlw	38
  6358  002176  5832               	subwfb	(_vlr+1)^0,w,c
  6359  002178  B0D8               	btfsc	status,0,c
  6360  00217A  EFC1  F010         	goto	u2181
  6361  00217E  EFC3  F010         	goto	u2180
  6362  002182                     u2181:
  6363  002182  EFE1  F010         	goto	l2764
  6364  002186                     u2180:
  6365  002186                     
  6366                           ;AMBER_LAGER.c: 512:     {;AMBER_LAGER.c: 513:     lcdCommand(0x01);
  6367  002186  0E01               	movlw	1
  6368  002188  EC5C  F01B         	call	_lcdCommand
  6369                           
  6370                           ;AMBER_LAGER.c: 514:     lcdCommand(0x80);
  6371  00218C  0E80               	movlw	128
  6372  00218E  EC5C  F01B         	call	_lcdCommand
  6373                           
  6374                           ;AMBER_LAGER.c: 515:     lcdData('F');
  6375  002192  0E46               	movlw	70
  6376  002194  EC38  F01D         	call	_lcdData
  6377                           
  6378                           ;AMBER_LAGER.c: 516:     lcdData('E');
  6379  002198  0E45               	movlw	69
  6380  00219A  EC38  F01D         	call	_lcdData
  6381                           
  6382                           ;AMBER_LAGER.c: 517:     lcdData('R');
  6383  00219E  0E52               	movlw	82
  6384  0021A0  EC38  F01D         	call	_lcdData
  6385                           
  6386                           ;AMBER_LAGER.c: 518:     lcdData('V');
  6387  0021A4  0E56               	movlw	86
  6388  0021A6  EC38  F01D         	call	_lcdData
  6389                           
  6390                           ;AMBER_LAGER.c: 519:     lcdData('U');
  6391  0021AA  0E55               	movlw	85
  6392  0021AC  EC38  F01D         	call	_lcdData
  6393                           
  6394                           ;AMBER_LAGER.c: 520:     lcdData('R');
  6395  0021B0  0E52               	movlw	82
  6396  0021B2  EC38  F01D         	call	_lcdData
  6397                           
  6398                           ;AMBER_LAGER.c: 521:     lcdData('A');
  6399  0021B6  0E41               	movlw	65
  6400  0021B8  EC38  F01D         	call	_lcdData
  6401  0021BC                     
  6402                           ;AMBER_LAGER.c: 522:     pwmSet1(0);
  6403  0021BC  0E00               	movlw	0
  6404  0021BE  EC47  F01C         	call	_pwmSet1
  6405  0021C2                     l2764:
  6406                           
  6407                           ;AMBER_LAGER.c: 526:      if((i==6)||(i==8))
  6408  0021C2  0E06               	movlw	6
  6409  0021C4  1833               	xorwf	_i^0,w,c
  6410  0021C6  1034               	iorwf	(_i+1)^0,w,c
  6411  0021C8  B4D8               	btfsc	status,2,c
  6412  0021CA  EFE9  F010         	goto	u2191
  6413  0021CE  EFEB  F010         	goto	u2190
  6414  0021D2                     u2191:
  6415  0021D2  EFF5  F010         	goto	l2768
  6416  0021D6                     u2190:
  6417  0021D6  0E08               	movlw	8
  6418  0021D8  1833               	xorwf	_i^0,w,c
  6419  0021DA  1034               	iorwf	(_i+1)^0,w,c
  6420  0021DC  A4D8               	btfss	status,2,c
  6421  0021DE  EFF3  F010         	goto	u2201
  6422  0021E2  EFF5  F010         	goto	u2200
  6423  0021E6                     u2201:
  6424  0021E6  EFFC  F011         	goto	l2806
  6425  0021EA                     u2200:
  6426  0021EA                     l2768:
  6427                           
  6428                           ;AMBER_LAGER.c: 527:     {;AMBER_LAGER.c: 528:     lcdCommand(0x01);
  6429  0021EA  0E01               	movlw	1
  6430  0021EC  EC5C  F01B         	call	_lcdCommand
  6431                           
  6432                           ;AMBER_LAGER.c: 529:     lcdCommand(0x80);
  6433  0021F0  0E80               	movlw	128
  6434  0021F2  EC5C  F01B         	call	_lcdCommand
  6435                           
  6436                           ;AMBER_LAGER.c: 530:     lcdData('F');
  6437  0021F6  0E46               	movlw	70
  6438  0021F8  EC38  F01D         	call	_lcdData
  6439                           
  6440                           ;AMBER_LAGER.c: 531:     lcdData('E');
  6441  0021FC  0E45               	movlw	69
  6442  0021FE  EC38  F01D         	call	_lcdData
  6443                           
  6444                           ;AMBER_LAGER.c: 532:     lcdData('R');
  6445  002202  0E52               	movlw	82
  6446  002204  EC38  F01D         	call	_lcdData
  6447                           
  6448                           ;AMBER_LAGER.c: 533:     lcdData('V');
  6449  002208  0E56               	movlw	86
  6450  00220A  EC38  F01D         	call	_lcdData
  6451                           
  6452                           ;AMBER_LAGER.c: 534:     lcdData('U');
  6453  00220E  0E55               	movlw	85
  6454  002210  EC38  F01D         	call	_lcdData
  6455                           
  6456                           ;AMBER_LAGER.c: 535:     lcdData('R');
  6457  002214  0E52               	movlw	82
  6458  002216  EC38  F01D         	call	_lcdData
  6459                           
  6460                           ;AMBER_LAGER.c: 536:     lcdData('A');
  6461  00221A  0E41               	movlw	65
  6462  00221C  EC38  F01D         	call	_lcdData
  6463  002220                     
  6464                           ;AMBER_LAGER.c: 538:     if(i==8)
  6465  002220  0E08               	movlw	8
  6466  002222  1833               	xorwf	_i^0,w,c
  6467  002224  1034               	iorwf	(_i+1)^0,w,c
  6468  002226  A4D8               	btfss	status,2,c
  6469  002228  EF18  F011         	goto	u2211
  6470  00222C  EF1A  F011         	goto	u2210
  6471  002230                     u2211:
  6472  002230  EFFC  F011         	goto	l2806
  6473  002234                     u2210:
  6474  002234                     
  6475                           ;AMBER_LAGER.c: 539:     {;AMBER_LAGER.c: 540:     lcdCommand(0x01);
  6476  002234  0E01               	movlw	1
  6477  002236  EC5C  F01B         	call	_lcdCommand
  6478                           
  6479                           ;AMBER_LAGER.c: 541:     lcdCommand(0xC0);
  6480  00223A  0EC0               	movlw	192
  6481  00223C  EC5C  F01B         	call	_lcdCommand
  6482                           
  6483                           ;AMBER_LAGER.c: 543:     lcdData('-');
  6484  002240  0E2D               	movlw	45
  6485  002242  EC38  F01D         	call	_lcdData
  6486                           
  6487                           ;AMBER_LAGER.c: 544:     lcdData('-');
  6488  002246  0E2D               	movlw	45
  6489  002248  EC38  F01D         	call	_lcdData
  6490                           
  6491                           ;AMBER_LAGER.c: 545:     lcdData('-');
  6492  00224C  0E2D               	movlw	45
  6493  00224E  EC38  F01D         	call	_lcdData
  6494                           
  6495                           ;AMBER_LAGER.c: 546:     lcdData('-');
  6496  002252  0E2D               	movlw	45
  6497  002254  EC38  F01D         	call	_lcdData
  6498                           
  6499                           ;AMBER_LAGER.c: 547:     lcdData('-');
  6500  002258  0E2D               	movlw	45
  6501  00225A  EC38  F01D         	call	_lcdData
  6502                           
  6503                           ;AMBER_LAGER.c: 548:     lcdData('-');
  6504  00225E  0E2D               	movlw	45
  6505  002260  EC38  F01D         	call	_lcdData
  6506                           
  6507                           ;AMBER_LAGER.c: 549:     lcdData('-');
  6508  002264  0E2D               	movlw	45
  6509  002266  EC38  F01D         	call	_lcdData
  6510                           
  6511                           ;AMBER_LAGER.c: 550:     lcdData('-');
  6512  00226A  0E2D               	movlw	45
  6513  00226C  EC38  F01D         	call	_lcdData
  6514                           
  6515                           ;AMBER_LAGER.c: 551:     lcdData('-');
  6516  002270  0E2D               	movlw	45
  6517  002272  EC38  F01D         	call	_lcdData
  6518                           
  6519                           ;AMBER_LAGER.c: 552:     lcdData('-');
  6520  002276  0E2D               	movlw	45
  6521  002278  EC38  F01D         	call	_lcdData
  6522                           
  6523                           ;AMBER_LAGER.c: 553:     lcdData('-');
  6524  00227C  0E2D               	movlw	45
  6525  00227E  EC38  F01D         	call	_lcdData
  6526                           
  6527                           ;AMBER_LAGER.c: 554:     lcdData('-');
  6528  002282  0E2D               	movlw	45
  6529  002284  EC38  F01D         	call	_lcdData
  6530                           
  6531                           ;AMBER_LAGER.c: 555:     lcdData('-');
  6532  002288  0E2D               	movlw	45
  6533  00228A  EC38  F01D         	call	_lcdData
  6534                           
  6535                           ;AMBER_LAGER.c: 556:     lcdData('-');
  6536  00228E  0E2D               	movlw	45
  6537  002290  EC38  F01D         	call	_lcdData
  6538                           
  6539                           ;AMBER_LAGER.c: 557:     lcdData('-');
  6540  002294  0E2D               	movlw	45
  6541  002296  EC38  F01D         	call	_lcdData
  6542                           
  6543                           ;AMBER_LAGER.c: 558:     lcdData('-');
  6544  00229A  0E2D               	movlw	45
  6545  00229C  EC38  F01D         	call	_lcdData
  6546                           
  6547                           ;AMBER_LAGER.c: 560:     lcdCommand(0xA8);
  6548  0022A0  0EA8               	movlw	168
  6549  0022A2  EC5C  F01B         	call	_lcdCommand
  6550                           
  6551                           ;AMBER_LAGER.c: 561:     lcdData('F');
  6552  0022A6  0E46               	movlw	70
  6553  0022A8  EC38  F01D         	call	_lcdData
  6554                           
  6555                           ;AMBER_LAGER.c: 562:     lcdData('I');
  6556  0022AC  0E49               	movlw	73
  6557  0022AE  EC38  F01D         	call	_lcdData
  6558                           
  6559                           ;AMBER_LAGER.c: 563:     lcdData('M');
  6560  0022B2  0E4D               	movlw	77
  6561  0022B4  EC38  F01D         	call	_lcdData
  6562                           
  6563                           ;AMBER_LAGER.c: 564:     lcdData(0x00);
  6564  0022B8  0E00               	movlw	0
  6565  0022BA  EC38  F01D         	call	_lcdData
  6566                           
  6567                           ;AMBER_LAGER.c: 565:     lcdData('D');
  6568  0022BE  0E44               	movlw	68
  6569  0022C0  EC38  F01D         	call	_lcdData
  6570                           
  6571                           ;AMBER_LAGER.c: 566:     lcdData('A');
  6572  0022C4  0E41               	movlw	65
  6573  0022C6  EC38  F01D         	call	_lcdData
  6574                           
  6575                           ;AMBER_LAGER.c: 567:     lcdData(0x00);
  6576  0022CA  0E00               	movlw	0
  6577  0022CC  EC38  F01D         	call	_lcdData
  6578                           
  6579                           ;AMBER_LAGER.c: 568:     lcdData('B');
  6580  0022D0  0E42               	movlw	66
  6581  0022D2  EC38  F01D         	call	_lcdData
  6582                           
  6583                           ;AMBER_LAGER.c: 569:     lcdData('R');
  6584  0022D6  0E52               	movlw	82
  6585  0022D8  EC38  F01D         	call	_lcdData
  6586                           
  6587                           ;AMBER_LAGER.c: 570:     lcdData('A');
  6588  0022DC  0E41               	movlw	65
  6589  0022DE  EC38  F01D         	call	_lcdData
  6590                           
  6591                           ;AMBER_LAGER.c: 571:     lcdData('S');
  6592  0022E2  0E53               	movlw	83
  6593  0022E4  EC38  F01D         	call	_lcdData
  6594                           
  6595                           ;AMBER_LAGER.c: 572:     lcdData('S');
  6596  0022E8  0E53               	movlw	83
  6597  0022EA  EC38  F01D         	call	_lcdData
  6598                           
  6599                           ;AMBER_LAGER.c: 573:     lcdData('A');
  6600  0022EE  0E41               	movlw	65
  6601  0022F0  EC38  F01D         	call	_lcdData
  6602                           
  6603                           ;AMBER_LAGER.c: 574:     lcdData('G');
  6604  0022F4  0E47               	movlw	71
  6605  0022F6  EC38  F01D         	call	_lcdData
  6606                           
  6607                           ;AMBER_LAGER.c: 575:     lcdData('E');
  6608  0022FA  0E45               	movlw	69
  6609  0022FC  EC38  F01D         	call	_lcdData
  6610                           
  6611                           ;AMBER_LAGER.c: 576:     lcdData('M');
  6612  002300  0E4D               	movlw	77
  6613  002302  EC38  F01D         	call	_lcdData
  6614                           
  6615                           ;AMBER_LAGER.c: 579:     lcdCommand(0xD0);
  6616  002306  0ED0               	movlw	208
  6617  002308  EC5C  F01B         	call	_lcdCommand
  6618                           
  6619                           ;AMBER_LAGER.c: 580:     lcdData('-');
  6620  00230C  0E2D               	movlw	45
  6621  00230E  EC38  F01D         	call	_lcdData
  6622                           
  6623                           ;AMBER_LAGER.c: 581:     lcdData('-');
  6624  002312  0E2D               	movlw	45
  6625  002314  EC38  F01D         	call	_lcdData
  6626                           
  6627                           ;AMBER_LAGER.c: 582:     lcdData('-');
  6628  002318  0E2D               	movlw	45
  6629  00231A  EC38  F01D         	call	_lcdData
  6630                           
  6631                           ;AMBER_LAGER.c: 583:     lcdData('-');
  6632  00231E  0E2D               	movlw	45
  6633  002320  EC38  F01D         	call	_lcdData
  6634                           
  6635                           ;AMBER_LAGER.c: 584:     lcdData('-');
  6636  002324  0E2D               	movlw	45
  6637  002326  EC38  F01D         	call	_lcdData
  6638                           
  6639                           ;AMBER_LAGER.c: 585:     lcdData('-');
  6640  00232A  0E2D               	movlw	45
  6641  00232C  EC38  F01D         	call	_lcdData
  6642                           
  6643                           ;AMBER_LAGER.c: 586:     lcdData('-');
  6644  002330  0E2D               	movlw	45
  6645  002332  EC38  F01D         	call	_lcdData
  6646                           
  6647                           ;AMBER_LAGER.c: 587:     lcdData('-');
  6648  002336  0E2D               	movlw	45
  6649  002338  EC38  F01D         	call	_lcdData
  6650                           
  6651                           ;AMBER_LAGER.c: 588:     lcdData('-');
  6652  00233C  0E2D               	movlw	45
  6653  00233E  EC38  F01D         	call	_lcdData
  6654                           
  6655                           ;AMBER_LAGER.c: 589:     lcdData('-');
  6656  002342  0E2D               	movlw	45
  6657  002344  EC38  F01D         	call	_lcdData
  6658                           
  6659                           ;AMBER_LAGER.c: 590:     lcdData('-');
  6660  002348  0E2D               	movlw	45
  6661  00234A  EC38  F01D         	call	_lcdData
  6662                           
  6663                           ;AMBER_LAGER.c: 591:     lcdData('-');
  6664  00234E  0E2D               	movlw	45
  6665  002350  EC38  F01D         	call	_lcdData
  6666                           
  6667                           ;AMBER_LAGER.c: 592:     lcdData('-');
  6668  002354  0E2D               	movlw	45
  6669  002356  EC38  F01D         	call	_lcdData
  6670                           
  6671                           ;AMBER_LAGER.c: 593:     lcdData('-');
  6672  00235A  0E2D               	movlw	45
  6673  00235C  EC38  F01D         	call	_lcdData
  6674                           
  6675                           ;AMBER_LAGER.c: 594:     lcdData('-');
  6676  002360  0E2D               	movlw	45
  6677  002362  EC38  F01D         	call	_lcdData
  6678                           
  6679                           ;AMBER_LAGER.c: 595:     lcdData('-');
  6680  002366  0E2D               	movlw	45
  6681  002368  EC38  F01D         	call	_lcdData
  6682  00236C                     
  6683                           ;AMBER_LAGER.c: 596:     vlr = 2500;
  6684  00236C  0E09               	movlw	9
  6685  00236E  6E32               	movwf	(_vlr+1)^0,c
  6686  002370  0EC4               	movlw	196
  6687  002372  6E31               	movwf	_vlr^0,c
  6688  002374                     
  6689                           ;AMBER_LAGER.c: 598:      pwmSet2(50);
  6690  002374  0E32               	movlw	50
  6691  002376  EC11  F01C         	call	_pwmSet2
  6692  00237A                     
  6693                           ;AMBER_LAGER.c: 599:      atraso_ms(50);
  6694  00237A  0E00               	movlw	0
  6695  00237C  6E1B               	movwf	(atraso_ms@valor+1)^0,c
  6696  00237E  0E32               	movlw	50
  6697  002380  6E1A               	movwf	atraso_ms@valor^0,c
  6698  002382  ECAF  F01C         	call	_atraso_ms	;wreg free
  6699  002386                     
  6700                           ;AMBER_LAGER.c: 600:      pwmSet2(0);
  6701  002386  0E00               	movlw	0
  6702  002388  EC11  F01C         	call	_pwmSet2
  6703  00238C                     
  6704                           ;AMBER_LAGER.c: 601:      atraso_ms(200);
  6705  00238C  0E00               	movlw	0
  6706  00238E  6E1B               	movwf	(atraso_ms@valor+1)^0,c
  6707  002390  0EC8               	movlw	200
  6708  002392  6E1A               	movwf	atraso_ms@valor^0,c
  6709  002394  ECAF  F01C         	call	_atraso_ms	;wreg free
  6710  002398                     
  6711                           ;AMBER_LAGER.c: 602:      pwmSet2(50);
  6712  002398  0E32               	movlw	50
  6713  00239A  EC11  F01C         	call	_pwmSet2
  6714  00239E                     
  6715                           ;AMBER_LAGER.c: 603:      atraso_ms(50);
  6716  00239E  0E00               	movlw	0
  6717  0023A0  6E1B               	movwf	(atraso_ms@valor+1)^0,c
  6718  0023A2  0E32               	movlw	50
  6719  0023A4  6E1A               	movwf	atraso_ms@valor^0,c
  6720  0023A6  ECAF  F01C         	call	_atraso_ms	;wreg free
  6721  0023AA                     
  6722                           ;AMBER_LAGER.c: 604:      pwmSet2(0);
  6723  0023AA  0E00               	movlw	0
  6724  0023AC  EC11  F01C         	call	_pwmSet2
  6725  0023B0                     
  6726                           ;AMBER_LAGER.c: 605:      atraso_ms(200);
  6727  0023B0  0E00               	movlw	0
  6728  0023B2  6E1B               	movwf	(atraso_ms@valor+1)^0,c
  6729  0023B4  0EC8               	movlw	200
  6730  0023B6  6E1A               	movwf	atraso_ms@valor^0,c
  6731  0023B8  ECAF  F01C         	call	_atraso_ms	;wreg free
  6732  0023BC                     
  6733                           ;AMBER_LAGER.c: 606:      pwmSet2(50);
  6734  0023BC  0E32               	movlw	50
  6735  0023BE  EC11  F01C         	call	_pwmSet2
  6736  0023C2                     
  6737                           ;AMBER_LAGER.c: 607:      atraso_ms(50);
  6738  0023C2  0E00               	movlw	0
  6739  0023C4  6E1B               	movwf	(atraso_ms@valor+1)^0,c
  6740  0023C6  0E32               	movlw	50
  6741  0023C8  6E1A               	movwf	atraso_ms@valor^0,c
  6742  0023CA  ECAF  F01C         	call	_atraso_ms	;wreg free
  6743  0023CE                     
  6744                           ;AMBER_LAGER.c: 608:      pwmSet2(0);
  6745  0023CE  0E00               	movlw	0
  6746  0023D0  EC11  F01C         	call	_pwmSet2
  6747  0023D4                     
  6748                           ;AMBER_LAGER.c: 609:      atraso_ms(200);
  6749  0023D4  0E00               	movlw	0
  6750  0023D6  6E1B               	movwf	(atraso_ms@valor+1)^0,c
  6751  0023D8  0EC8               	movlw	200
  6752  0023DA  6E1A               	movwf	atraso_ms@valor^0,c
  6753  0023DC  ECAF  F01C         	call	_atraso_ms	;wreg free
  6754  0023E0                     
  6755                           ;AMBER_LAGER.c: 610:      pwmSet2(50);
  6756  0023E0  0E32               	movlw	50
  6757  0023E2  EC11  F01C         	call	_pwmSet2
  6758  0023E6                     
  6759                           ;AMBER_LAGER.c: 611:      atraso_ms(50);
  6760  0023E6  0E00               	movlw	0
  6761  0023E8  6E1B               	movwf	(atraso_ms@valor+1)^0,c
  6762  0023EA  0E32               	movlw	50
  6763  0023EC  6E1A               	movwf	atraso_ms@valor^0,c
  6764  0023EE  ECAF  F01C         	call	_atraso_ms	;wreg free
  6765  0023F2                     
  6766                           ;AMBER_LAGER.c: 612:      pwmSet2(0);
  6767  0023F2  0E00               	movlw	0
  6768  0023F4  EC11  F01C         	call	_pwmSet2
  6769  0023F8                     l2806:
  6770                           
  6771                           ;AMBER_LAGER.c: 616:      if((i==7)&&(vlr<=9900))
  6772  0023F8  0E07               	movlw	7
  6773  0023FA  1833               	xorwf	_i^0,w,c
  6774  0023FC  1034               	iorwf	(_i+1)^0,w,c
  6775  0023FE  A4D8               	btfss	status,2,c
  6776  002400  EF04  F012         	goto	u2221
  6777  002404  EF06  F012         	goto	u2220
  6778  002408                     u2221:
  6779  002408  EF75  F012         	goto	l2816
  6780  00240C                     u2220:
  6781  00240C  0EAD               	movlw	173
  6782  00240E  5C31               	subwf	_vlr^0,w,c
  6783  002410  0E26               	movlw	38
  6784  002412  5832               	subwfb	(_vlr+1)^0,w,c
  6785  002414  B0D8               	btfsc	status,0,c
  6786  002416  EF0F  F012         	goto	u2231
  6787  00241A  EF11  F012         	goto	u2230
  6788  00241E                     u2231:
  6789  00241E  EF75  F012         	goto	l2816
  6790  002422                     u2230:
  6791  002422                     
  6792                           ;AMBER_LAGER.c: 617:     {;AMBER_LAGER.c: 618:     lcdCommand(0x01);
  6793  002422  0E01               	movlw	1
  6794  002424  EC5C  F01B         	call	_lcdCommand
  6795                           
  6796                           ;AMBER_LAGER.c: 619:     lcdCommand(0x85);
  6797  002428  0E85               	movlw	133
  6798  00242A  EC5C  F01B         	call	_lcdCommand
  6799                           
  6800                           ;AMBER_LAGER.c: 620:     lcdData('F');
  6801  00242E  0E46               	movlw	70
  6802  002430  EC38  F01D         	call	_lcdData
  6803                           
  6804                           ;AMBER_LAGER.c: 621:     lcdData('E');
  6805  002434  0E45               	movlw	69
  6806  002436  EC38  F01D         	call	_lcdData
  6807                           
  6808                           ;AMBER_LAGER.c: 622:     lcdData('R');
  6809  00243A  0E52               	movlw	82
  6810  00243C  EC38  F01D         	call	_lcdData
  6811                           
  6812                           ;AMBER_LAGER.c: 623:     lcdData('V');
  6813  002440  0E56               	movlw	86
  6814  002442  EC38  F01D         	call	_lcdData
  6815                           
  6816                           ;AMBER_LAGER.c: 624:     lcdData('U');
  6817  002446  0E55               	movlw	85
  6818  002448  EC38  F01D         	call	_lcdData
  6819                           
  6820                           ;AMBER_LAGER.c: 625:     lcdData('R');
  6821  00244C  0E52               	movlw	82
  6822  00244E  EC38  F01D         	call	_lcdData
  6823                           
  6824                           ;AMBER_LAGER.c: 626:     lcdData('A');
  6825  002452  0E41               	movlw	65
  6826  002454  EC38  F01D         	call	_lcdData
  6827                           
  6828                           ;AMBER_LAGER.c: 627:     lcdCommand(0xC0);
  6829  002458  0EC0               	movlw	192
  6830  00245A  EC5C  F01B         	call	_lcdCommand
  6831                           
  6832                           ;AMBER_LAGER.c: 628:     lcdData('I');
  6833  00245E  0E49               	movlw	73
  6834  002460  EC38  F01D         	call	_lcdData
  6835                           
  6836                           ;AMBER_LAGER.c: 629:     lcdData('N');
  6837  002464  0E4E               	movlw	78
  6838  002466  EC38  F01D         	call	_lcdData
  6839                           
  6840                           ;AMBER_LAGER.c: 630:     lcdData('S');
  6841  00246A  0E53               	movlw	83
  6842  00246C  EC38  F01D         	call	_lcdData
  6843                           
  6844                           ;AMBER_LAGER.c: 631:     lcdData('I');
  6845  002470  0E49               	movlw	73
  6846  002472  EC38  F01D         	call	_lcdData
  6847                           
  6848                           ;AMBER_LAGER.c: 632:     lcdData('R');
  6849  002476  0E52               	movlw	82
  6850  002478  EC38  F01D         	call	_lcdData
  6851                           
  6852                           ;AMBER_LAGER.c: 633:     lcdData('A');
  6853  00247C  0E41               	movlw	65
  6854  00247E  EC38  F01D         	call	_lcdData
  6855                           
  6856                           ;AMBER_LAGER.c: 634:     lcdData(0x00);
  6857  002482  0E00               	movlw	0
  6858  002484  EC38  F01D         	call	_lcdData
  6859                           
  6860                           ;AMBER_LAGER.c: 635:     lcdData('L');
  6861  002488  0E4C               	movlw	76
  6862  00248A  EC38  F01D         	call	_lcdData
  6863                           
  6864                           ;AMBER_LAGER.c: 636:     lcdData('U');
  6865  00248E  0E55               	movlw	85
  6866  002490  EC38  F01D         	call	_lcdData
  6867                           
  6868                           ;AMBER_LAGER.c: 637:     lcdData('P');
  6869  002494  0E50               	movlw	80
  6870  002496  EC38  F01D         	call	_lcdData
  6871                           
  6872                           ;AMBER_LAGER.c: 638:     lcdData('U');
  6873  00249A  0E55               	movlw	85
  6874  00249C  EC38  F01D         	call	_lcdData
  6875                           
  6876                           ;AMBER_LAGER.c: 639:     lcdData('L');
  6877  0024A0  0E4C               	movlw	76
  6878  0024A2  EC38  F01D         	call	_lcdData
  6879                           
  6880                           ;AMBER_LAGER.c: 640:     lcdData('0');
  6881  0024A6  0E30               	movlw	48
  6882  0024A8  EC38  F01D         	call	_lcdData
  6883                           
  6884                           ;AMBER_LAGER.c: 641:     lcdData(0x00);
  6885  0024AC  0E00               	movlw	0
  6886  0024AE  EC38  F01D         	call	_lcdData
  6887                           
  6888                           ;AMBER_LAGER.c: 642:     lcdData('1');
  6889  0024B2  0E31               	movlw	49
  6890  0024B4  EC38  F01D         	call	_lcdData
  6891                           
  6892                           ;AMBER_LAGER.c: 643:     lcdCommand(0xDB);
  6893  0024B8  0EDB               	movlw	219
  6894  0024BA  EC5C  F01B         	call	_lcdCommand
  6895                           
  6896                           ;AMBER_LAGER.c: 644:     lcdData('O');
  6897  0024BE  0E4F               	movlw	79
  6898  0024C0  EC38  F01D         	call	_lcdData
  6899                           
  6900                           ;AMBER_LAGER.c: 645:     lcdData('K');
  6901  0024C4  0E4B               	movlw	75
  6902  0024C6  EC38  F01D         	call	_lcdData
  6903                           
  6904                           ;AMBER_LAGER.c: 646:     lcdData('(');
  6905  0024CA  0E28               	movlw	40
  6906  0024CC  EC38  F01D         	call	_lcdData
  6907                           
  6908                           ;AMBER_LAGER.c: 647:     lcdData('#');
  6909  0024D0  0E23               	movlw	35
  6910  0024D2  EC38  F01D         	call	_lcdData
  6911                           
  6912                           ;AMBER_LAGER.c: 648:     lcdData(')');
  6913  0024D6  0E29               	movlw	41
  6914  0024D8  EC38  F01D         	call	_lcdData
  6915  0024DC                     
  6916                           ;AMBER_LAGER.c: 649:      pwmSet1(0);
  6917  0024DC  0E00               	movlw	0
  6918  0024DE  EC47  F01C         	call	_pwmSet1
  6919  0024E2                     
  6920                           ;AMBER_LAGER.c: 650:      i = 10;
  6921  0024E2  0E00               	movlw	0
  6922  0024E4  6E34               	movwf	(_i+1)^0,c
  6923  0024E6  0E0A               	movlw	10
  6924  0024E8  6E33               	movwf	_i^0,c
  6925  0024EA                     l2816:
  6926                           
  6927                           ;AMBER_LAGER.c: 655:      Tecl();
  6928  0024EA  EC99  F018         	call	_Tecl	;wreg free
  6929  0024EE                     
  6930                           ;AMBER_LAGER.c: 656:      kpDebounce();
  6931  0024EE  EC5E  F019         	call	_kpDebounce	;wreg free
  6932  0024F2                     
  6933                           ;AMBER_LAGER.c: 658:      slot = 2;
  6934  0024F2  0E02               	movlw	2
  6935  0024F4  6E2A               	movwf	amber_lager@slot^0,c
  6936                           
  6937                           ;AMBER_LAGER.c: 659:      break;
  6938  0024F6  EF54  F013         	goto	l2852
  6939  0024FA                     l2822:
  6940                           
  6941                           ;AMBER_LAGER.c: 662:     if((vlr >= (6700 +1))&&(i < 9))
  6942  0024FA  0E2D               	movlw	45
  6943  0024FC  5C31               	subwf	_vlr^0,w,c
  6944  0024FE  0E1A               	movlw	26
  6945  002500  5832               	subwfb	(_vlr+1)^0,w,c
  6946  002502  A0D8               	btfss	status,0,c
  6947  002504  EF86  F012         	goto	u2241
  6948  002508  EF88  F012         	goto	u2240
  6949  00250C                     u2241:
  6950  00250C  EF52  F013         	goto	l2846
  6951  002510                     u2240:
  6952  002510  5034               	movf	(_i+1)^0,w,c
  6953  002512  E107               	bnz	u2251
  6954  002514  0E09               	movlw	9
  6955  002516  5C33               	subwf	_i^0,w,c
  6956  002518  B0D8               	btfsc	status,0,c
  6957  00251A  EF91  F012         	goto	u2251
  6958  00251E  EF93  F012         	goto	u2250
  6959  002522                     u2251:
  6960  002522  EF52  F013         	goto	l2846
  6961  002526                     u2250:
  6962  002526                     
  6963                           ;AMBER_LAGER.c: 663:     {;AMBER_LAGER.c: 665:     lcdCommand(0xC0);
  6964  002526  0EC0               	movlw	192
  6965  002528  EC5C  F01B         	call	_lcdCommand
  6966                           
  6967                           ;AMBER_LAGER.c: 666:     lcdData((time/1000)%10 + '0');
  6968  00252C  0E03               	movlw	3
  6969  00252E  6E1D               	movwf	(___lwdiv@divisor+1)^0,c
  6970  002530  0EE8               	movlw	232
  6971  002532  6E1C               	movwf	___lwdiv@divisor^0,c
  6972  002534  C003  F01A         	movff	_time,___lwdiv@dividend
  6973  002538  C004  F01B         	movff	_time+1,___lwdiv@dividend+1
  6974  00253C  ECD7  F01B         	call	___lwdiv	;wreg free
  6975  002540  C01A  F021         	movff	?___lwdiv,___lwmod@dividend
  6976  002544  C01B  F022         	movff	?___lwdiv+1,___lwmod@dividend+1
  6977  002548  0E00               	movlw	0
  6978  00254A  6E24               	movwf	(___lwmod@divisor+1)^0,c
  6979  00254C  0E0A               	movlw	10
  6980  00254E  6E23               	movwf	___lwmod@divisor^0,c
  6981  002550  EC7D  F01C         	call	___lwmod	;wreg free
  6982  002554  5021               	movf	?___lwmod^0,w,c
  6983  002556  0F30               	addlw	48
  6984  002558  EC38  F01D         	call	_lcdData
  6985                           
  6986                           ;AMBER_LAGER.c: 667:     lcdData((time/100)%10 + '0');
  6987  00255C  0E00               	movlw	0
  6988  00255E  6E1D               	movwf	(___lwdiv@divisor+1)^0,c
  6989  002560  0E64               	movlw	100
  6990  002562  6E1C               	movwf	___lwdiv@divisor^0,c
  6991  002564  C003  F01A         	movff	_time,___lwdiv@dividend
  6992  002568  C004  F01B         	movff	_time+1,___lwdiv@dividend+1
  6993  00256C  ECD7  F01B         	call	___lwdiv	;wreg free
  6994  002570  C01A  F021         	movff	?___lwdiv,___lwmod@dividend
  6995  002574  C01B  F022         	movff	?___lwdiv+1,___lwmod@dividend+1
  6996  002578  0E00               	movlw	0
  6997  00257A  6E24               	movwf	(___lwmod@divisor+1)^0,c
  6998  00257C  0E0A               	movlw	10
  6999  00257E  6E23               	movwf	___lwmod@divisor^0,c
  7000  002580  EC7D  F01C         	call	___lwmod	;wreg free
  7001  002584  5021               	movf	?___lwmod^0,w,c
  7002  002586  0F30               	addlw	48
  7003  002588  EC38  F01D         	call	_lcdData
  7004                           
  7005                           ;AMBER_LAGER.c: 668:     lcdData(0x00);
  7006  00258C  0E00               	movlw	0
  7007  00258E  EC38  F01D         	call	_lcdData
  7008                           
  7009                           ;AMBER_LAGER.c: 669:     lcdData('m');
  7010  002592  0E6D               	movlw	109
  7011  002594  EC38  F01D         	call	_lcdData
  7012                           
  7013                           ;AMBER_LAGER.c: 670:     lcdData('i');
  7014  002598  0E69               	movlw	105
  7015  00259A  EC38  F01D         	call	_lcdData
  7016                           
  7017                           ;AMBER_LAGER.c: 671:     lcdData('n');
  7018  00259E  0E6E               	movlw	110
  7019  0025A0  EC38  F01D         	call	_lcdData
  7020  0025A4                     
  7021                           ;AMBER_LAGER.c: 673:     if(time != 0 )
  7022  0025A4  5003               	movf	_time^0,w,c
  7023  0025A6  1004               	iorwf	(_time+1)^0,w,c
  7024  0025A8  B4D8               	btfsc	status,2,c
  7025  0025AA  EFD9  F012         	goto	u2261
  7026  0025AE  EFDB  F012         	goto	u2260
  7027  0025B2                     u2261:
  7028  0025B2  EF22  F013         	goto	l2844
  7029  0025B6                     u2260:
  7030  0025B6                     
  7031                           ;AMBER_LAGER.c: 674:     {;AMBER_LAGER.c: 675:       time --;
  7032  0025B6  0603               	decf	_time^0,f,c
  7033  0025B8  A0D8               	btfss	status,0,c
  7034  0025BA  0604               	decf	(_time+1)^0,f,c
  7035                           
  7036                           ;AMBER_LAGER.c: 676:      }
  7037  0025BC  EF52  F013         	goto	l2846
  7038  0025C0                     l2832:
  7039                           
  7040                           ;AMBER_LAGER.c: 684:             time = 7500;
  7041  0025C0  0E1D               	movlw	29
  7042  0025C2  6E04               	movwf	(_time+1)^0,c
  7043  0025C4  0E4C               	movlw	76
  7044  0025C6  6E03               	movwf	_time^0,c
  7045                           
  7046                           ;AMBER_LAGER.c: 685:             break;
  7047  0025C8  EF52  F013         	goto	l2846
  7048  0025CC                     l2834:
  7049                           
  7050                           ;AMBER_LAGER.c: 687:         vlr = 7600 ;
  7051  0025CC  0E1D               	movlw	29
  7052  0025CE  6E32               	movwf	(_vlr+1)^0,c
  7053  0025D0  0EB0               	movlw	176
  7054  0025D2  6E31               	movwf	_vlr^0,c
  7055                           
  7056                           ;AMBER_LAGER.c: 688:         cont = 0;
  7057  0025D4  0E00               	movlw	0
  7058  0025D6  6E06               	movwf	(_cont+1)^0,c
  7059  0025D8  0E00               	movlw	0
  7060  0025DA  6E05               	movwf	_cont^0,c
  7061                           
  7062                           ;AMBER_LAGER.c: 689:         i=1;
  7063  0025DC  0E00               	movlw	0
  7064  0025DE  6E34               	movwf	(_i+1)^0,c
  7065  0025E0  0E01               	movlw	1
  7066  0025E2  6E33               	movwf	_i^0,c
  7067                           
  7068                           ;AMBER_LAGER.c: 690:         time = 1000;
  7069  0025E4  0E03               	movlw	3
  7070  0025E6  6E04               	movwf	(_time+1)^0,c
  7071  0025E8  0EE8               	movlw	232
  7072  0025EA  6E03               	movwf	_time^0,c
  7073                           
  7074                           ;AMBER_LAGER.c: 691:             break;
  7075  0025EC  EF52  F013         	goto	l2846
  7076  0025F0                     l2836:
  7077                           
  7078                           ;AMBER_LAGER.c: 693:         vlr = 9900 ;
  7079  0025F0  0E26               	movlw	38
  7080  0025F2  6E32               	movwf	(_vlr+1)^0,c
  7081  0025F4  0EAC               	movlw	172
  7082  0025F6  6E31               	movwf	_vlr^0,c
  7083                           
  7084                           ;AMBER_LAGER.c: 694:         cont = 0;
  7085  0025F8  0E00               	movlw	0
  7086  0025FA  6E06               	movwf	(_cont+1)^0,c
  7087  0025FC  0E00               	movlw	0
  7088  0025FE  6E05               	movwf	_cont^0,c
  7089                           
  7090                           ;AMBER_LAGER.c: 695:         i=5;
  7091  002600  0E00               	movlw	0
  7092  002602  6E34               	movwf	(_i+1)^0,c
  7093  002604  0E05               	movlw	5
  7094  002606  6E33               	movwf	_i^0,c
  7095                           
  7096                           ;AMBER_LAGER.c: 696:         time = 1000;
  7097  002608  0E03               	movlw	3
  7098  00260A  6E04               	movwf	(_time+1)^0,c
  7099  00260C  0EE8               	movlw	232
  7100  00260E  6E03               	movwf	_time^0,c
  7101                           
  7102                           ;AMBER_LAGER.c: 697:             break;
  7103  002610  EF52  F013         	goto	l2846
  7104  002614                     l2838:
  7105                           
  7106                           ;AMBER_LAGER.c: 700:         cont = 0;
  7107  002614  0E00               	movlw	0
  7108  002616  6E06               	movwf	(_cont+1)^0,c
  7109  002618  0E00               	movlw	0
  7110  00261A  6E05               	movwf	_cont^0,c
  7111                           
  7112                           ;AMBER_LAGER.c: 701:         i=7;
  7113  00261C  0E00               	movlw	0
  7114  00261E  6E34               	movwf	(_i+1)^0,c
  7115  002620  0E07               	movlw	7
  7116  002622  6E33               	movwf	_i^0,c
  7117                           
  7118                           ;AMBER_LAGER.c: 702:         time = 5000;
  7119  002624  0E13               	movlw	19
  7120  002626  6E04               	movwf	(_time+1)^0,c
  7121  002628  0E88               	movlw	136
  7122  00262A  6E03               	movwf	_time^0,c
  7123                           
  7124                           ;AMBER_LAGER.c: 703:             break;
  7125  00262C  EF52  F013         	goto	l2846
  7126  002630                     l2840:
  7127                           
  7128                           ;AMBER_LAGER.c: 705:         cont = 0;
  7129  002630  0E00               	movlw	0
  7130  002632  6E06               	movwf	(_cont+1)^0,c
  7131  002634  0E00               	movlw	0
  7132  002636  6E05               	movwf	_cont^0,c
  7133                           
  7134                           ;AMBER_LAGER.c: 706:         i=8;
  7135  002638  0E00               	movlw	0
  7136  00263A  6E34               	movwf	(_i+1)^0,c
  7137  00263C  0E08               	movlw	8
  7138  00263E  6E33               	movwf	_i^0,c
  7139                           
  7140                           ;AMBER_LAGER.c: 707:             break;
  7141  002640  EF52  F013         	goto	l2846
  7142  002644                     l2844:
  7143  002644  C031  F028         	movff	_vlr,??_amber_lager
  7144  002648  C032  F029         	movff	_vlr+1,??_amber_lager+1
  7145                           
  7146                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
  7147                           ; Switch size 1, requested type "simple"
  7148                           ; Number of cases is 3, Range of values is 26 to 38
  7149                           ; switch strategies available:
  7150                           ; Name         Instructions Cycles
  7151                           ; simple_byte           10     6 (average)
  7152                           ;	Chosen strategy is simple_byte
  7153  00264C  5029               	movf	(??_amber_lager+1)^0,w,c
  7154  00264E  0A1A               	xorlw	26	; case 26
  7155  002650  B4D8               	btfsc	status,2,c
  7156  002652  EF35  F013         	goto	l3240
  7157  002656  0A07               	xorlw	7	; case 29
  7158  002658  B4D8               	btfsc	status,2,c
  7159  00265A  EF40  F013         	goto	l3242
  7160  00265E  0A3B               	xorlw	59	; case 38
  7161  002660  B4D8               	btfsc	status,2,c
  7162  002662  EF47  F013         	goto	l3244
  7163  002666  EF52  F013         	goto	l2846
  7164  00266A                     l3240:
  7165                           
  7166                           ; Switch size 1, requested type "simple"
  7167                           ; Number of cases is 2, Range of values is 45 to 46
  7168                           ; switch strategies available:
  7169                           ; Name         Instructions Cycles
  7170                           ; simple_byte            7     4 (average)
  7171                           ;	Chosen strategy is simple_byte
  7172  00266A  5028               	movf	??_amber_lager^0,w,c
  7173  00266C  0A2D               	xorlw	45	; case 45
  7174  00266E  B4D8               	btfsc	status,2,c
  7175  002670  EFE0  F012         	goto	l2832
  7176  002674  0A03               	xorlw	3	; case 46
  7177  002676  B4D8               	btfsc	status,2,c
  7178  002678  EFE6  F012         	goto	l2834
  7179  00267C  EF52  F013         	goto	l2846
  7180  002680                     l3242:
  7181                           
  7182                           ; Switch size 1, requested type "simple"
  7183                           ; Number of cases is 1, Range of values is 176 to 176
  7184                           ; switch strategies available:
  7185                           ; Name         Instructions Cycles
  7186                           ; simple_byte            4     3 (average)
  7187                           ;	Chosen strategy is simple_byte
  7188  002680  5028               	movf	??_amber_lager^0,w,c
  7189  002682  0AB0               	xorlw	176	; case 176
  7190  002684  B4D8               	btfsc	status,2,c
  7191  002686  EFF8  F012         	goto	l2836
  7192  00268A  EF52  F013         	goto	l2846
  7193  00268E                     l3244:
  7194                           
  7195                           ; Switch size 1, requested type "simple"
  7196                           ; Number of cases is 2, Range of values is 172 to 173
  7197                           ; switch strategies available:
  7198                           ; Name         Instructions Cycles
  7199                           ; simple_byte            7     4 (average)
  7200                           ;	Chosen strategy is simple_byte
  7201  00268E  5028               	movf	??_amber_lager^0,w,c
  7202  002690  0AAC               	xorlw	172	; case 172
  7203  002692  B4D8               	btfsc	status,2,c
  7204  002694  EF0A  F013         	goto	l2838
  7205  002698  0A01               	xorlw	1	; case 173
  7206  00269A  B4D8               	btfsc	status,2,c
  7207  00269C  EF18  F013         	goto	l2840
  7208  0026A0  EF52  F013         	goto	l2846
  7209  0026A4                     l2846:
  7210                           
  7211                           ;AMBER_LAGER.c: 713:   slot = 0 ;
  7212  0026A4  0E00               	movlw	0
  7213  0026A6  6E2A               	movwf	amber_lager@slot^0,c
  7214  0026A8                     l2852:
  7215  0026A8  502A               	movf	amber_lager@slot^0,w,c
  7216  0026AA  6E28               	movwf	??_amber_lager^0,c
  7217  0026AC  6A29               	clrf	(??_amber_lager+1)^0,c
  7218                           
  7219                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7220                           ; Switch size 1, requested type "simple"
  7221                           ; Number of cases is 1, Range of values is 0 to 0
  7222                           ; switch strategies available:
  7223                           ; Name         Instructions Cycles
  7224                           ; simple_byte            4     3 (average)
  7225                           ;	Chosen strategy is simple_byte
  7226  0026AE  5029               	movf	(??_amber_lager+1)^0,w,c
  7227  0026B0  0A00               	xorlw	0	; case 0
  7228  0026B2  B4D8               	btfsc	status,2,c
  7229  0026B4  EF5E  F013         	goto	l3246
  7230  0026B8  EF52  F013         	goto	l2846
  7231  0026BC                     l3246:
  7232                           
  7233                           ; Switch size 1, requested type "simple"
  7234                           ; Number of cases is 3, Range of values is 0 to 2
  7235                           ; switch strategies available:
  7236                           ; Name         Instructions Cycles
  7237                           ; simple_byte           10     6 (average)
  7238                           ;	Chosen strategy is simple_byte
  7239  0026BC  5028               	movf	??_amber_lager^0,w,c
  7240  0026BE  0A00               	xorlw	0	; case 0
  7241  0026C0  B4D8               	btfsc	status,2,c
  7242  0026C2  EF83  F00F         	goto	l2710
  7243  0026C6  0A01               	xorlw	1	; case 1
  7244  0026C8  B4D8               	btfsc	status,2,c
  7245  0026CA  EFD3  F00F         	goto	l2726
  7246  0026CE  0A03               	xorlw	3	; case 2
  7247  0026D0  B4D8               	btfsc	status,2,c
  7248  0026D2  EF7D  F012         	goto	l2822
  7249  0026D6  EF52  F013         	goto	l2846
  7250  0026DA  0012               	return		;funcret
  7251  0026DC                     __end_of_amber_lager:
  7252                           	callstack 0
  7253                           
  7254 ;; *************** function _ssdUpdate *****************
  7255 ;; Defined at:
  7256 ;;		line 54 in file "ssd.c"
  7257 ;; Parameters:    Size  Location     Type
  7258 ;;		None
  7259 ;; Auto vars:     Size  Location     Type
  7260 ;;		None
  7261 ;; Return value:  Size  Location     Type
  7262 ;;                  1    wreg      void 
  7263 ;; Registers used:
  7264 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7265 ;; Tracked objects:
  7266 ;;		On entry : 0/0
  7267 ;;		On exit  : 0/0
  7268 ;;		Unchanged: 0/0
  7269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7270 ;;      Params:         0       0       0       0       0       0       0
  7271 ;;      Locals:         0       0       0       0       0       0       0
  7272 ;;      Temps:          2       0       0       0       0       0       0
  7273 ;;      Totals:         2       0       0       0       0       0       0
  7274 ;;Total ram usage:        2 bytes
  7275 ;; Hardware stack levels used:    1
  7276 ;; Hardware stack levels required when called:    1
  7277 ;; This function calls:
  7278 ;;		_digitalWrite
  7279 ;; This function is called by:
  7280 ;;		_k_weissbier
  7281 ;;		_amber_lager
  7282 ;; This function uses a non-reentrant model
  7283 ;;
  7284                           
  7285                           	psect	text5
  7286  003436                     __ptext5:
  7287                           	callstack 0
  7288  003436                     _ssdUpdate:
  7289                           	callstack 27
  7290  003436                     
  7291                           ;ssd.c: 58:     TRISD= 0x00;
  7292  003436  0E00               	movlw	0
  7293  003438  6E95               	movwf	149,c	;volatile
  7294  00343A                     
  7295                           ;ssd.c: 60:     digitalWrite(PIN_A2,0);
  7296  00343A  0E00               	movlw	0
  7297  00343C  6E1B               	movwf	(digitalWrite@pin+1)^0,c
  7298  00343E  0E02               	movlw	2
  7299  003440  6E1A               	movwf	digitalWrite@pin^0,c
  7300  003442  0E00               	movlw	0
  7301  003444  6E1D               	movwf	(digitalWrite@value+1)^0,c
  7302  003446  0E00               	movlw	0
  7303  003448  6E1C               	movwf	digitalWrite@value^0,c
  7304  00344A  EC5C  F016         	call	_digitalWrite	;wreg free
  7305  00344E                     
  7306                           ;ssd.c: 61:     digitalWrite(PIN_A3,0);
  7307  00344E  0E00               	movlw	0
  7308  003450  6E1B               	movwf	(digitalWrite@pin+1)^0,c
  7309  003452  0E03               	movlw	3
  7310  003454  6E1A               	movwf	digitalWrite@pin^0,c
  7311  003456  0E00               	movlw	0
  7312  003458  6E1D               	movwf	(digitalWrite@value+1)^0,c
  7313  00345A  0E00               	movlw	0
  7314  00345C  6E1C               	movwf	digitalWrite@value^0,c
  7315  00345E  EC5C  F016         	call	_digitalWrite	;wreg free
  7316  003462                     
  7317                           ;ssd.c: 62:     digitalWrite(PIN_A4,0);
  7318  003462  0E00               	movlw	0
  7319  003464  6E1B               	movwf	(digitalWrite@pin+1)^0,c
  7320  003466  0E04               	movlw	4
  7321  003468  6E1A               	movwf	digitalWrite@pin^0,c
  7322  00346A  0E00               	movlw	0
  7323  00346C  6E1D               	movwf	(digitalWrite@value+1)^0,c
  7324  00346E  0E00               	movlw	0
  7325  003470  6E1C               	movwf	digitalWrite@value^0,c
  7326  003472  EC5C  F016         	call	_digitalWrite	;wreg free
  7327  003476                     
  7328                           ;ssd.c: 63:     digitalWrite(PIN_A5,0);
  7329  003476  0E00               	movlw	0
  7330  003478  6E1B               	movwf	(digitalWrite@pin+1)^0,c
  7331  00347A  0E05               	movlw	5
  7332  00347C  6E1A               	movwf	digitalWrite@pin^0,c
  7333  00347E  0E00               	movlw	0
  7334  003480  6E1D               	movwf	(digitalWrite@value+1)^0,c
  7335  003482  0E00               	movlw	0
  7336  003484  6E1C               	movwf	digitalWrite@value^0,c
  7337  003486  EC5C  F016         	call	_digitalWrite	;wreg free
  7338                           
  7339                           ;ssd.c: 66:     PORTD = 0x00;
  7340  00348A  0E00               	movlw	0
  7341  00348C  6E83               	movwf	131,c	;volatile
  7342                           
  7343                           ;ssd.c: 69:     switch (display)
  7344  00348E  EFA5  F01A         	goto	l2608
  7345  003492                     l2580:
  7346                           
  7347                           ;ssd.c: 72:             PORTD = valor[v0];
  7348  003492  0E01               	movlw	low _valor@ssd$F432
  7349  003494  2416               	addwf	_v0^0,w,c
  7350  003496  6EF6               	movwf	tblptrl,c
  7351  003498  6AF7               	clrf	tblptrh,c
  7352  00349A  0E06               	movlw	high _valor@ssd$F432
  7353  00349C  22F7               	addwfc	tblptrh,f,c
  7354  00349E                     	if	0	;There are less than 3 active tblptr bytes
  7355  00349E                     	endif
  7356  00349E  0008               	tblrd		*
  7357  0034A0  CFF5 FF83          	movff	tablat,3971	;volatile
  7358  0034A4                     
  7359                           ;ssd.c: 73:             digitalWrite(PIN_A2,1);
  7360  0034A4  0E00               	movlw	0
  7361  0034A6  6E1B               	movwf	(digitalWrite@pin+1)^0,c
  7362  0034A8  0E02               	movlw	2
  7363  0034AA  6E1A               	movwf	digitalWrite@pin^0,c
  7364  0034AC  0E00               	movlw	0
  7365  0034AE  6E1D               	movwf	(digitalWrite@value+1)^0,c
  7366  0034B0  0E01               	movlw	1
  7367  0034B2  6E1C               	movwf	digitalWrite@value^0,c
  7368  0034B4  EC5C  F016         	call	_digitalWrite	;wreg free
  7369  0034B8                     
  7370                           ;ssd.c: 74:             display = 1;
  7371  0034B8  0E01               	movlw	1
  7372  0034BA  6E17               	movwf	_display^0,c
  7373                           
  7374                           ;ssd.c: 75:             break;
  7375  0034BC  EFC2  F01A         	goto	l316
  7376  0034C0                     l2586:
  7377                           
  7378                           ;ssd.c: 78:             PORTD = valor[v1];
  7379  0034C0  0E01               	movlw	low _valor@ssd$F432
  7380  0034C2  2415               	addwf	_v1^0,w,c
  7381  0034C4  6EF6               	movwf	tblptrl,c
  7382  0034C6  6AF7               	clrf	tblptrh,c
  7383  0034C8  0E06               	movlw	high _valor@ssd$F432
  7384  0034CA  22F7               	addwfc	tblptrh,f,c
  7385  0034CC                     	if	0	;There are less than 3 active tblptr bytes
  7386  0034CC                     	endif
  7387  0034CC  0008               	tblrd		*
  7388  0034CE  CFF5 FF83          	movff	tablat,3971	;volatile
  7389  0034D2                     
  7390                           ;ssd.c: 79:             digitalWrite(PIN_A3,1);
  7391  0034D2  0E00               	movlw	0
  7392  0034D4  6E1B               	movwf	(digitalWrite@pin+1)^0,c
  7393  0034D6  0E03               	movlw	3
  7394  0034D8  6E1A               	movwf	digitalWrite@pin^0,c
  7395  0034DA  0E00               	movlw	0
  7396  0034DC  6E1D               	movwf	(digitalWrite@value+1)^0,c
  7397  0034DE  0E01               	movlw	1
  7398  0034E0  6E1C               	movwf	digitalWrite@value^0,c
  7399  0034E2  EC5C  F016         	call	_digitalWrite	;wreg free
  7400  0034E6                     
  7401                           ;ssd.c: 80:             display = 2;
  7402  0034E6  0E02               	movlw	2
  7403  0034E8  6E17               	movwf	_display^0,c
  7404                           
  7405                           ;ssd.c: 81:             break;
  7406  0034EA  EFC2  F01A         	goto	l316
  7407  0034EE                     l2592:
  7408                           
  7409                           ;ssd.c: 84:             PORTD = valor[v2];
  7410  0034EE  0E01               	movlw	low _valor@ssd$F432
  7411  0034F0  2414               	addwf	_v2^0,w,c
  7412  0034F2  6EF6               	movwf	tblptrl,c
  7413  0034F4  6AF7               	clrf	tblptrh,c
  7414  0034F6  0E06               	movlw	high _valor@ssd$F432
  7415  0034F8  22F7               	addwfc	tblptrh,f,c
  7416  0034FA                     	if	0	;There are less than 3 active tblptr bytes
  7417  0034FA                     	endif
  7418  0034FA  0008               	tblrd		*
  7419  0034FC  CFF5 FF83          	movff	tablat,3971	;volatile
  7420  003500                     
  7421                           ;ssd.c: 85:             digitalWrite(PIN_A4,1);
  7422  003500  0E00               	movlw	0
  7423  003502  6E1B               	movwf	(digitalWrite@pin+1)^0,c
  7424  003504  0E04               	movlw	4
  7425  003506  6E1A               	movwf	digitalWrite@pin^0,c
  7426  003508  0E00               	movlw	0
  7427  00350A  6E1D               	movwf	(digitalWrite@value+1)^0,c
  7428  00350C  0E01               	movlw	1
  7429  00350E  6E1C               	movwf	digitalWrite@value^0,c
  7430  003510  EC5C  F016         	call	_digitalWrite	;wreg free
  7431  003514                     
  7432                           ;ssd.c: 86:             display = 3;
  7433  003514  0E03               	movlw	3
  7434  003516  6E17               	movwf	_display^0,c
  7435                           
  7436                           ;ssd.c: 87:             break;
  7437  003518  EFC2  F01A         	goto	l316
  7438  00351C                     l2598:
  7439                           
  7440                           ;ssd.c: 90:             PORTD = valor[v3];
  7441  00351C  0E01               	movlw	low _valor@ssd$F432
  7442  00351E  2413               	addwf	_v3^0,w,c
  7443  003520  6EF6               	movwf	tblptrl,c
  7444  003522  6AF7               	clrf	tblptrh,c
  7445  003524  0E06               	movlw	high _valor@ssd$F432
  7446  003526  22F7               	addwfc	tblptrh,f,c
  7447  003528                     	if	0	;There are less than 3 active tblptr bytes
  7448  003528                     	endif
  7449  003528  0008               	tblrd		*
  7450  00352A  CFF5 FF83          	movff	tablat,3971	;volatile
  7451  00352E                     
  7452                           ;ssd.c: 91:             digitalWrite(PIN_A5,1);
  7453  00352E  0E00               	movlw	0
  7454  003530  6E1B               	movwf	(digitalWrite@pin+1)^0,c
  7455  003532  0E05               	movlw	5
  7456  003534  6E1A               	movwf	digitalWrite@pin^0,c
  7457  003536  0E00               	movlw	0
  7458  003538  6E1D               	movwf	(digitalWrite@value+1)^0,c
  7459  00353A  0E01               	movlw	1
  7460  00353C  6E1C               	movwf	digitalWrite@value^0,c
  7461  00353E  EC5C  F016         	call	_digitalWrite	;wreg free
  7462  003542                     l2602:
  7463                           
  7464                           ;ssd.c: 92:             display = 0;
  7465  003542  0E00               	movlw	0
  7466  003544  6E17               	movwf	_display^0,c
  7467                           
  7468                           ;ssd.c: 93:             break;
  7469  003546  EFC2  F01A         	goto	l316
  7470  00354A                     l2608:
  7471  00354A  5017               	movf	_display^0,w,c
  7472  00354C  6E20               	movwf	??_ssdUpdate^0,c
  7473  00354E  6A21               	clrf	(??_ssdUpdate+1)^0,c
  7474                           
  7475                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7476                           ; Switch size 1, requested type "simple"
  7477                           ; Number of cases is 1, Range of values is 0 to 0
  7478                           ; switch strategies available:
  7479                           ; Name         Instructions Cycles
  7480                           ; simple_byte            4     3 (average)
  7481                           ;	Chosen strategy is simple_byte
  7482  003550  5021               	movf	(??_ssdUpdate+1)^0,w,c
  7483  003552  0A00               	xorlw	0	; case 0
  7484  003554  B4D8               	btfsc	status,2,c
  7485  003556  EFAF  F01A         	goto	l3248
  7486  00355A  EFA1  F01A         	goto	l2602
  7487  00355E                     l3248:
  7488                           
  7489                           ; Switch size 1, requested type "simple"
  7490                           ; Number of cases is 4, Range of values is 0 to 3
  7491                           ; switch strategies available:
  7492                           ; Name         Instructions Cycles
  7493                           ; simple_byte           13     7 (average)
  7494                           ;	Chosen strategy is simple_byte
  7495  00355E  5020               	movf	??_ssdUpdate^0,w,c
  7496  003560  0A00               	xorlw	0	; case 0
  7497  003562  B4D8               	btfsc	status,2,c
  7498  003564  EF49  F01A         	goto	l2580
  7499  003568  0A01               	xorlw	1	; case 1
  7500  00356A  B4D8               	btfsc	status,2,c
  7501  00356C  EF60  F01A         	goto	l2586
  7502  003570  0A03               	xorlw	3	; case 2
  7503  003572  B4D8               	btfsc	status,2,c
  7504  003574  EF77  F01A         	goto	l2592
  7505  003578  0A01               	xorlw	1	; case 3
  7506  00357A  B4D8               	btfsc	status,2,c
  7507  00357C  EF8E  F01A         	goto	l2598
  7508  003580  EFA1  F01A         	goto	l2602
  7509  003584                     l316:
  7510  003584  0012               	return		;funcret
  7511  003586                     __end_of_ssdUpdate:
  7512                           	callstack 0
  7513                           
  7514 ;; *************** function _ssdInit *****************
  7515 ;; Defined at:
  7516 ;;		line 101 in file "ssd.c"
  7517 ;; Parameters:    Size  Location     Type
  7518 ;;		None
  7519 ;; Auto vars:     Size  Location     Type
  7520 ;;		None
  7521 ;; Return value:  Size  Location     Type
  7522 ;;                  1    wreg      void 
  7523 ;; Registers used:
  7524 ;;		wreg, status,2, status,0, cstack
  7525 ;; Tracked objects:
  7526 ;;		On entry : 0/0
  7527 ;;		On exit  : 0/0
  7528 ;;		Unchanged: 0/0
  7529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7530 ;;      Params:         0       0       0       0       0       0       0
  7531 ;;      Locals:         0       0       0       0       0       0       0
  7532 ;;      Temps:          0       0       0       0       0       0       0
  7533 ;;      Totals:         0       0       0       0       0       0       0
  7534 ;;Total ram usage:        0 bytes
  7535 ;; Hardware stack levels used:    1
  7536 ;; Hardware stack levels required when called:    1
  7537 ;; This function calls:
  7538 ;;		_pinMode
  7539 ;; This function is called by:
  7540 ;;		_k_weissbier
  7541 ;;		_amber_lager
  7542 ;; This function uses a non-reentrant model
  7543 ;;
  7544                           
  7545                           	psect	text6
  7546  003A1A                     __ptext6:
  7547                           	callstack 0
  7548  003A1A                     _ssdInit:
  7549                           	callstack 27
  7550  003A1A                     
  7551                           ;ssd.c: 103:     pinMode(PIN_A2, 0);
  7552  003A1A  0E00               	movlw	0
  7553  003A1C  6E1B               	movwf	(pinMode@pin+1)^0,c
  7554  003A1E  0E02               	movlw	2
  7555  003A20  6E1A               	movwf	pinMode@pin^0,c
  7556  003A22  0E00               	movlw	0
  7557  003A24  6E1D               	movwf	(pinMode@type+1)^0,c
  7558  003A26  0E00               	movlw	0
  7559  003A28  6E1C               	movwf	pinMode@type^0,c
  7560  003A2A  EC35  F015         	call	_pinMode	;wreg free
  7561                           
  7562                           ;ssd.c: 104:     pinMode(PIN_A3, 0);
  7563  003A2E  0E00               	movlw	0
  7564  003A30  6E1B               	movwf	(pinMode@pin+1)^0,c
  7565  003A32  0E03               	movlw	3
  7566  003A34  6E1A               	movwf	pinMode@pin^0,c
  7567  003A36  0E00               	movlw	0
  7568  003A38  6E1D               	movwf	(pinMode@type+1)^0,c
  7569  003A3A  0E00               	movlw	0
  7570  003A3C  6E1C               	movwf	pinMode@type^0,c
  7571  003A3E  EC35  F015         	call	_pinMode	;wreg free
  7572                           
  7573                           ;ssd.c: 105:     pinMode(PIN_A4, 0);
  7574  003A42  0E00               	movlw	0
  7575  003A44  6E1B               	movwf	(pinMode@pin+1)^0,c
  7576  003A46  0E04               	movlw	4
  7577  003A48  6E1A               	movwf	pinMode@pin^0,c
  7578  003A4A  0E00               	movlw	0
  7579  003A4C  6E1D               	movwf	(pinMode@type+1)^0,c
  7580  003A4E  0E00               	movlw	0
  7581  003A50  6E1C               	movwf	pinMode@type^0,c
  7582  003A52  EC35  F015         	call	_pinMode	;wreg free
  7583                           
  7584                           ;ssd.c: 106:     pinMode(PIN_A5, 0);
  7585  003A56  0E00               	movlw	0
  7586  003A58  6E1B               	movwf	(pinMode@pin+1)^0,c
  7587  003A5A  0E05               	movlw	5
  7588  003A5C  6E1A               	movwf	pinMode@pin^0,c
  7589  003A5E  0E00               	movlw	0
  7590  003A60  6E1D               	movwf	(pinMode@type+1)^0,c
  7591  003A62  0E00               	movlw	0
  7592  003A64  6E1C               	movwf	pinMode@type^0,c
  7593  003A66  EC35  F015         	call	_pinMode	;wreg free
  7594  003A6A                     
  7595                           ;ssd.c: 109:     TRISD = 0x00;
  7596  003A6A  0E00               	movlw	0
  7597  003A6C  6E95               	movwf	149,c	;volatile
  7598  003A6E  0012               	return		;funcret
  7599  003A70                     __end_of_ssdInit:
  7600                           	callstack 0
  7601                           
  7602 ;; *************** function _ssdDigit *****************
  7603 ;; Defined at:
  7604 ;;		line 38 in file "ssd.c"
  7605 ;; Parameters:    Size  Location     Type
  7606 ;;  val             1    wreg     unsigned char 
  7607 ;;  pos             1   12[COMRAM] unsigned char 
  7608 ;; Auto vars:     Size  Location     Type
  7609 ;;  val             1   13[COMRAM] unsigned char 
  7610 ;; Return value:  Size  Location     Type
  7611 ;;                  1    wreg      void 
  7612 ;; Registers used:
  7613 ;;		wreg, status,2, status,0
  7614 ;; Tracked objects:
  7615 ;;		On entry : 0/0
  7616 ;;		On exit  : 0/0
  7617 ;;		Unchanged: 0/0
  7618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7619 ;;      Params:         1       0       0       0       0       0       0
  7620 ;;      Locals:         1       0       0       0       0       0       0
  7621 ;;      Temps:          0       0       0       0       0       0       0
  7622 ;;      Totals:         2       0       0       0       0       0       0
  7623 ;;Total ram usage:        2 bytes
  7624 ;; Hardware stack levels used:    1
  7625 ;; This function calls:
  7626 ;;		Nothing
  7627 ;; This function is called by:
  7628 ;;		_k_weissbier
  7629 ;;		_amber_lager
  7630 ;; This function uses a non-reentrant model
  7631 ;;
  7632                           
  7633                           	psect	text7
  7634  0039C2                     __ptext7:
  7635                           	callstack 0
  7636  0039C2                     _ssdDigit:
  7637                           	callstack 28
  7638                           
  7639                           ;incstack = 0
  7640                           ;ssdDigit@val stored from wreg
  7641  0039C2  6E27               	movwf	ssdDigit@val^0,c
  7642  0039C4                     
  7643                           ;ssd.c: 39:     if (pos == 0) {
  7644  0039C4  5026               	movf	ssdDigit@pos^0,w,c
  7645  0039C6  A4D8               	btfss	status,2,c
  7646  0039C8  EFE8  F01C         	goto	u1911
  7647  0039CC  EFEA  F01C         	goto	u1910
  7648  0039D0                     u1911:
  7649  0039D0  EFEC  F01C         	goto	l2558
  7650  0039D4                     u1910:
  7651  0039D4                     
  7652                           ;ssd.c: 40:         v0 = val;
  7653  0039D4  C027  F016         	movff	ssdDigit@val,_v0
  7654  0039D8                     l2558:
  7655                           
  7656                           ;ssd.c: 42:     if (pos == 1) {
  7657  0039D8  0426               	decf	ssdDigit@pos^0,w,c
  7658  0039DA  A4D8               	btfss	status,2,c
  7659  0039DC  EFF2  F01C         	goto	u1921
  7660  0039E0  EFF4  F01C         	goto	u1920
  7661  0039E4                     u1921:
  7662  0039E4  EFF6  F01C         	goto	l2562
  7663  0039E8                     u1920:
  7664  0039E8                     
  7665                           ;ssd.c: 43:         v1 = val;
  7666  0039E8  C027  F015         	movff	ssdDigit@val,_v1
  7667  0039EC                     l2562:
  7668                           
  7669                           ;ssd.c: 45:     if (pos == 2) {
  7670  0039EC  0E02               	movlw	2
  7671  0039EE  1826               	xorwf	ssdDigit@pos^0,w,c
  7672  0039F0  A4D8               	btfss	status,2,c
  7673  0039F2  EFFD  F01C         	goto	u1931
  7674  0039F6  EFFF  F01C         	goto	u1930
  7675  0039FA                     u1931:
  7676  0039FA  EF01  F01D         	goto	l2566
  7677  0039FE                     u1930:
  7678  0039FE                     
  7679                           ;ssd.c: 46:         v2 = val;
  7680  0039FE  C027  F014         	movff	ssdDigit@val,_v2
  7681  003A02                     l2566:
  7682                           
  7683                           ;ssd.c: 48:     if (pos == 3) {
  7684  003A02  0E03               	movlw	3
  7685  003A04  1826               	xorwf	ssdDigit@pos^0,w,c
  7686  003A06  A4D8               	btfss	status,2,c
  7687  003A08  EF08  F01D         	goto	u1941
  7688  003A0C  EF0A  F01D         	goto	u1940
  7689  003A10                     u1941:
  7690  003A10  EF0C  F01D         	goto	l306
  7691  003A14                     u1940:
  7692  003A14                     
  7693                           ;ssd.c: 49:         v3 = val;
  7694  003A14  C027  F013         	movff	ssdDigit@val,_v3
  7695  003A18                     l306:
  7696  003A18  0012               	return		;funcret
  7697  003A1A                     __end_of_ssdDigit:
  7698                           	callstack 0
  7699                           
  7700 ;; *************** function _pwmSet2 *****************
  7701 ;; Defined at:
  7702 ;;		line 40 in file "pwm.c"
  7703 ;; Parameters:    Size  Location     Type
  7704 ;;  porcento        1    wreg     unsigned char 
  7705 ;; Auto vars:     Size  Location     Type
  7706 ;;  porcento        1    9[COMRAM] unsigned char 
  7707 ;;  val             2   10[COMRAM] unsigned int 
  7708 ;; Return value:  Size  Location     Type
  7709 ;;                  1    wreg      void 
  7710 ;; Registers used:
  7711 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7712 ;; Tracked objects:
  7713 ;;		On entry : 0/0
  7714 ;;		On exit  : 0/0
  7715 ;;		Unchanged: 0/0
  7716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7717 ;;      Params:         0       0       0       0       0       0       0
  7718 ;;      Locals:         3       0       0       0       0       0       0
  7719 ;;      Temps:          2       0       0       0       0       0       0
  7720 ;;      Totals:         5       0       0       0       0       0       0
  7721 ;;Total ram usage:        5 bytes
  7722 ;; Hardware stack levels used:    1
  7723 ;; Hardware stack levels required when called:    1
  7724 ;; This function calls:
  7725 ;;		___lwdiv
  7726 ;;		___wmul
  7727 ;; This function is called by:
  7728 ;;		_k_weissbier
  7729 ;;		_amber_lager
  7730 ;; This function uses a non-reentrant model
  7731 ;;
  7732                           
  7733                           	psect	text8
  7734  003822                     __ptext8:
  7735                           	callstack 0
  7736  003822                     _pwmSet2:
  7737                           	callstack 27
  7738                           
  7739                           ;incstack = 0
  7740                           ;pwmSet2@porcento stored from wreg
  7741  003822  6E23               	movwf	pwmSet2@porcento^0,c
  7742  003824                     
  7743                           ;pwm.c: 40: void pwmSet2(unsigned char porcento);pwm.c: 41: {;pwm.c: 42:  unsigned int v
      +                          al = ((unsigned int)porcento) *((*(volatile __near unsigned char*)0xFCB)+1);
  7744  003824  0E01               	movlw	1
  7745  003826  24CB               	addwf	203,w,c	;volatile
  7746  003828  6E1A               	movwf	___wmul@multiplier^0,c
  7747  00382A  6A1B               	clrf	(___wmul@multiplier+1)^0,c
  7748  00382C  0E00               	movlw	0
  7749  00382E  221B               	addwfc	(___wmul@multiplier+1)^0,f,c
  7750  003830  C023  F01C         	movff	pwmSet2@porcento,___wmul@multiplicand
  7751  003834  6A1D               	clrf	(___wmul@multiplicand+1)^0,c
  7752  003836  EC7D  F01D         	call	___wmul	;wreg free
  7753  00383A  C01A  F024         	movff	?___wmul,pwmSet2@val
  7754  00383E  C01B  F025         	movff	?___wmul+1,pwmSet2@val+1
  7755  003842                     
  7756                           ;pwm.c: 43:  val /= 25;
  7757  003842  C024  F01A         	movff	pwmSet2@val,___lwdiv@dividend
  7758  003846  C025  F01B         	movff	pwmSet2@val+1,___lwdiv@dividend+1
  7759  00384A  0E00               	movlw	0
  7760  00384C  6E1D               	movwf	(___lwdiv@divisor+1)^0,c
  7761  00384E  0E19               	movlw	25
  7762  003850  6E1C               	movwf	___lwdiv@divisor^0,c
  7763  003852  ECD7  F01B         	call	___lwdiv	;wreg free
  7764  003856  C01A  F024         	movff	?___lwdiv,pwmSet2@val
  7765  00385A  C01B  F025         	movff	?___lwdiv+1,pwmSet2@val+1
  7766  00385E                     
  7767                           ;pwm.c: 45:  val &= 0x03ff;
  7768  00385E  0EFF               	movlw	255
  7769  003860  1624               	andwf	pwmSet2@val^0,f,c
  7770  003862  0E03               	movlw	3
  7771  003864  1625               	andwf	(pwmSet2@val+1)^0,f,c
  7772  003866                     
  7773                           ;pwm.c: 47:  (*(volatile __near unsigned char*)0xFBB) = val >> 2;
  7774  003866  C024  F021         	movff	pwmSet2@val,??_pwmSet2
  7775  00386A  C025  F022         	movff	pwmSet2@val+1,??_pwmSet2+1
  7776  00386E  90D8               	bcf	status,0,c
  7777  003870  3222               	rrcf	(??_pwmSet2+1)^0,f,c
  7778  003872  3221               	rrcf	??_pwmSet2^0,f,c
  7779  003874  90D8               	bcf	status,0,c
  7780  003876  3222               	rrcf	(??_pwmSet2+1)^0,f,c
  7781  003878  3221               	rrcf	??_pwmSet2^0,f,c
  7782  00387A  5021               	movf	??_pwmSet2^0,w,c
  7783  00387C  6EBB               	movwf	187,c	;volatile
  7784  00387E                     
  7785                           ;pwm.c: 49:  (*(volatile __near unsigned char*)0xFBA) |= (val & 0x0003) << 4;
  7786  00387E  C024  F021         	movff	pwmSet2@val,??_pwmSet2
  7787  003882  0E03               	movlw	3
  7788  003884  1621               	andwf	??_pwmSet2^0,f,c
  7789  003886  3821               	swapf	??_pwmSet2^0,w,c
  7790  003888  0BF0               	andlw	240
  7791  00388A  12BA               	iorwf	186,f,c	;volatile
  7792  00388C  0012               	return		;funcret
  7793  00388E                     __end_of_pwmSet2:
  7794                           	callstack 0
  7795                           
  7796 ;; *************** function _pwmInit *****************
  7797 ;; Defined at:
  7798 ;;		line 59 in file "pwm.c"
  7799 ;; Parameters:    Size  Location     Type
  7800 ;;		None
  7801 ;; Auto vars:     Size  Location     Type
  7802 ;;		None
  7803 ;; Return value:  Size  Location     Type
  7804 ;;                  1    wreg      void 
  7805 ;; Registers used:
  7806 ;;		wreg, status,2, status,0
  7807 ;; Tracked objects:
  7808 ;;		On entry : 0/0
  7809 ;;		On exit  : 0/0
  7810 ;;		Unchanged: 0/0
  7811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7812 ;;      Params:         0       0       0       0       0       0       0
  7813 ;;      Locals:         0       0       0       0       0       0       0
  7814 ;;      Temps:          0       0       0       0       0       0       0
  7815 ;;      Totals:         0       0       0       0       0       0       0
  7816 ;;Total ram usage:        0 bytes
  7817 ;; Hardware stack levels used:    1
  7818 ;; This function calls:
  7819 ;;		Nothing
  7820 ;; This function is called by:
  7821 ;;		_k_weissbier
  7822 ;;		_amber_lager
  7823 ;; This function uses a non-reentrant model
  7824 ;;
  7825                           
  7826                           	psect	text9
  7827  003B54                     __ptext9:
  7828                           	callstack 0
  7829  003B54                     _pwmInit:
  7830                           	callstack 28
  7831  003B54                     
  7832                           ;pwm.c: 61:  (((*(volatile __near unsigned char*)0xF94)) &= ~(1<<1));
  7833  003B54  9294               	bcf	148,1,c	;volatile
  7834                           
  7835                           ;pwm.c: 62:  (((*(volatile __near unsigned char*)0xF94)) &= ~(1<<2));
  7836  003B56  9494               	bcf	148,2,c	;volatile
  7837  003B58                     
  7838                           ;pwm.c: 64:  (*(volatile __near unsigned char*)0xFCA) |= 0b00000011;
  7839  003B58  0E03               	movlw	3
  7840  003B5A  12CA               	iorwf	202,f,c	;volatile
  7841  003B5C                     
  7842                           ;pwm.c: 65:  (((*(volatile __near unsigned char*)0xFCA)) |= (1<<2));
  7843  003B5C  84CA               	bsf	202,2,c	;volatile
  7844                           
  7845                           ;pwm.c: 68:  (*(volatile __near unsigned char*)0xFBD) |= 0b00001100;
  7846  003B5E  0E0C               	movlw	12
  7847  003B60  12BD               	iorwf	189,f,c	;volatile
  7848                           
  7849                           ;pwm.c: 69:  (*(volatile __near unsigned char*)0xFBA) |= 0b00001100;
  7850  003B62  0E0C               	movlw	12
  7851  003B64  12BA               	iorwf	186,f,c	;volatile
  7852  003B66  0012               	return		;funcret
  7853  003B68                     __end_of_pwmInit:
  7854                           	callstack 0
  7855                           
  7856 ;; *************** function _lcdInit *****************
  7857 ;; Defined at:
  7858 ;;		line 95 in file "lcd.c"
  7859 ;; Parameters:    Size  Location     Type
  7860 ;;		None
  7861 ;; Auto vars:     Size  Location     Type
  7862 ;;		None
  7863 ;; Return value:  Size  Location     Type
  7864 ;;                  1    wreg      void 
  7865 ;; Registers used:
  7866 ;;		wreg, status,2, status,0, cstack
  7867 ;; Tracked objects:
  7868 ;;		On entry : 0/0
  7869 ;;		On exit  : 0/0
  7870 ;;		Unchanged: 0/0
  7871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7872 ;;      Params:         0       0       0       0       0       0       0
  7873 ;;      Locals:         0       0       0       0       0       0       0
  7874 ;;      Temps:          0       0       0       0       0       0       0
  7875 ;;      Totals:         0       0       0       0       0       0       0
  7876 ;;Total ram usage:        0 bytes
  7877 ;; Hardware stack levels used:    1
  7878 ;; Hardware stack levels required when called:    3
  7879 ;; This function calls:
  7880 ;;		_Delay2ms
  7881 ;;		_lcdCommand
  7882 ;;		_pinMode
  7883 ;; This function is called by:
  7884 ;;		_main
  7885 ;;		_k_weissbier
  7886 ;;		_amber_lager
  7887 ;; This function uses a non-reentrant model
  7888 ;;
  7889                           
  7890                           	psect	text10
  7891  003736                     __ptext10:
  7892                           	callstack 0
  7893  003736                     _lcdInit:
  7894                           	callstack 27
  7895  003736                     
  7896                           ;lcd.c: 97:     pinMode(PIN_E2, 0);
  7897  003736  0E00               	movlw	0
  7898  003738  6E1B               	movwf	(pinMode@pin+1)^0,c
  7899  00373A  0E22               	movlw	34
  7900  00373C  6E1A               	movwf	pinMode@pin^0,c
  7901  00373E  0E00               	movlw	0
  7902  003740  6E1D               	movwf	(pinMode@type+1)^0,c
  7903  003742  0E00               	movlw	0
  7904  003744  6E1C               	movwf	pinMode@type^0,c
  7905  003746  EC35  F015         	call	_pinMode	;wreg free
  7906                           
  7907                           ;lcd.c: 98:     pinMode(PIN_E1, 0);
  7908  00374A  0E00               	movlw	0
  7909  00374C  6E1B               	movwf	(pinMode@pin+1)^0,c
  7910  00374E  0E21               	movlw	33
  7911  003750  6E1A               	movwf	pinMode@pin^0,c
  7912  003752  0E00               	movlw	0
  7913  003754  6E1D               	movwf	(pinMode@type+1)^0,c
  7914  003756  0E00               	movlw	0
  7915  003758  6E1C               	movwf	pinMode@type^0,c
  7916  00375A  EC35  F015         	call	_pinMode	;wreg free
  7917  00375E                     
  7918                           ;lcd.c: 99:  TRISD = 0x00;
  7919  00375E  0E00               	movlw	0
  7920  003760  6E95               	movwf	149,c	;volatile
  7921  003762                     
  7922                           ;lcd.c: 102:  Delay2ms(); Delay2ms(); Delay2ms(); Delay2ms(); Delay2ms();
  7923  003762  EC90  F01D         	call	_Delay2ms	;wreg free
  7924  003766  EC90  F01D         	call	_Delay2ms	;wreg free
  7925  00376A  EC90  F01D         	call	_Delay2ms	;wreg free
  7926  00376E  EC90  F01D         	call	_Delay2ms	;wreg free
  7927  003772  EC90  F01D         	call	_Delay2ms	;wreg free
  7928  003776                     
  7929                           ;lcd.c: 104:     lcdCommand(0x38);
  7930  003776  0E38               	movlw	56
  7931  003778  EC5C  F01B         	call	_lcdCommand
  7932  00377C                     
  7933                           ;lcd.c: 105:     Delay2ms(); Delay2ms();
  7934  00377C  EC90  F01D         	call	_Delay2ms	;wreg free
  7935  003780  EC90  F01D         	call	_Delay2ms	;wreg free
  7936  003784                     
  7937                           ;lcd.c: 106:     lcdCommand(0x38);
  7938  003784  0E38               	movlw	56
  7939  003786  EC5C  F01B         	call	_lcdCommand
  7940  00378A                     
  7941                           ;lcd.c: 107:     Delay2ms();
  7942  00378A  EC90  F01D         	call	_Delay2ms	;wreg free
  7943  00378E                     
  7944                           ;lcd.c: 108:     lcdCommand(0x38);
  7945  00378E  0E38               	movlw	56
  7946  003790  EC5C  F01B         	call	_lcdCommand
  7947  003794                     
  7948                           ;lcd.c: 110:     lcdCommand(0x38);
  7949  003794  0E38               	movlw	56
  7950  003796  EC5C  F01B         	call	_lcdCommand
  7951  00379A                     
  7952                           ;lcd.c: 111:     lcdCommand(0x06);
  7953  00379A  0E06               	movlw	6
  7954  00379C  EC5C  F01B         	call	_lcdCommand
  7955  0037A0                     
  7956                           ;lcd.c: 114:     lcdCommand(0x0C);
  7957  0037A0  0E0C               	movlw	12
  7958  0037A2  EC5C  F01B         	call	_lcdCommand
  7959  0037A6                     
  7960                           ;lcd.c: 115:     lcdCommand(0x01);
  7961  0037A6  0E01               	movlw	1
  7962  0037A8  EC5C  F01B         	call	_lcdCommand
  7963  0037AC  0012               	return		;funcret
  7964  0037AE                     __end_of_lcdInit:
  7965                           	callstack 0
  7966                           
  7967 ;; *************** function _pinMode *****************
  7968 ;; Defined at:
  7969 ;;		line 54 in file "io.c"
  7970 ;; Parameters:    Size  Location     Type
  7971 ;;  pin             2    0[COMRAM] int 
  7972 ;;  type            2    2[COMRAM] int 
  7973 ;; Auto vars:     Size  Location     Type
  7974 ;;		None
  7975 ;; Return value:  Size  Location     Type
  7976 ;;                  1    wreg      void 
  7977 ;; Registers used:
  7978 ;;		wreg, status,2, status,0
  7979 ;; Tracked objects:
  7980 ;;		On entry : 0/0
  7981 ;;		On exit  : 0/0
  7982 ;;		Unchanged: 0/0
  7983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7984 ;;      Params:         4       0       0       0       0       0       0
  7985 ;;      Locals:         0       0       0       0       0       0       0
  7986 ;;      Temps:          2       0       0       0       0       0       0
  7987 ;;      Totals:         6       0       0       0       0       0       0
  7988 ;;Total ram usage:        6 bytes
  7989 ;; Hardware stack levels used:    1
  7990 ;; This function calls:
  7991 ;;		Nothing
  7992 ;; This function is called by:
  7993 ;;		_lcdInit
  7994 ;;		_ssdInit
  7995 ;;		_adcInit
  7996 ;; This function uses a non-reentrant model
  7997 ;;
  7998                           
  7999                           	psect	text11
  8000  002A6A                     __ptext11:
  8001                           	callstack 0
  8002  002A6A                     _pinMode:
  8003                           	callstack 29
  8004  002A6A                     
  8005                           ;io.c: 56:     if(pin <8){
  8006  002A6A  BE1B               	btfsc	(pinMode@pin+1)^0,7,c
  8007  002A6C  EF43  F015         	goto	u1710
  8008  002A70  501B               	movf	(pinMode@pin+1)^0,w,c
  8009  002A72  E107               	bnz	u1711
  8010  002A74  0E08               	movlw	8
  8011  002A76  5C1A               	subwf	pinMode@pin^0,w,c
  8012  002A78  B0D8               	btfsc	status,0,c
  8013  002A7A  EF41  F015         	goto	u1711
  8014  002A7E  EF43  F015         	goto	u1710
  8015  002A82                     u1711:
  8016  002A82  EF6D  F015         	goto	l2468
  8017  002A86                     u1710:
  8018  002A86                     
  8019                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  8020  002A86  501C               	movf	pinMode@type^0,w,c
  8021  002A88  101D               	iorwf	(pinMode@type+1)^0,w,c
  8022  002A8A  B4D8               	btfsc	status,2,c
  8023  002A8C  EF4A  F015         	goto	u1721
  8024  002A90  EF4C  F015         	goto	u1720
  8025  002A94                     u1721:
  8026  002A94  EF5C  F015         	goto	l2466
  8027  002A98                     u1720:
  8028  002A98  C01A  F01E         	movff	pinMode@pin,??_pinMode
  8029  002A9C  0E01               	movlw	1
  8030  002A9E  6E1F               	movwf	(??_pinMode+1)^0,c
  8031  002AA0  2A1E               	incf	??_pinMode^0,f,c
  8032  002AA2  EF55  F015         	goto	u1734
  8033  002AA6                     u1735:
  8034  002AA6  90D8               	bcf	status,0,c
  8035  002AA8  361F               	rlcf	(??_pinMode+1)^0,f,c
  8036  002AAA                     u1734:
  8037  002AAA  2E1E               	decfsz	??_pinMode^0,f,c
  8038  002AAC  EF53  F015         	goto	u1735
  8039  002AB0  501F               	movf	(??_pinMode+1)^0,w,c
  8040  002AB2  1292               	iorwf	146,f,c	;volatile
  8041  002AB4  EF5B  F016         	goto	l200
  8042  002AB8                     l2466:
  8043  002AB8  C01A  F01E         	movff	pinMode@pin,??_pinMode
  8044  002ABC  0E01               	movlw	1
  8045  002ABE  6E1F               	movwf	(??_pinMode+1)^0,c
  8046  002AC0  2A1E               	incf	??_pinMode^0,f,c
  8047  002AC2  EF65  F015         	goto	u1744
  8048  002AC6                     u1745:
  8049  002AC6  90D8               	bcf	status,0,c
  8050  002AC8  361F               	rlcf	(??_pinMode+1)^0,f,c
  8051  002ACA                     u1744:
  8052  002ACA  2E1E               	decfsz	??_pinMode^0,f,c
  8053  002ACC  EF63  F015         	goto	u1745
  8054  002AD0  501F               	movf	(??_pinMode+1)^0,w,c
  8055  002AD2  0AFF               	xorlw	255
  8056  002AD4  1692               	andwf	146,f,c	;volatile
  8057  002AD6  EF5B  F016         	goto	l200
  8058  002ADA                     l2468:
  8059  002ADA  BE1B               	btfsc	(pinMode@pin+1)^0,7,c
  8060  002ADC  EF7B  F015         	goto	u1750
  8061  002AE0  501B               	movf	(pinMode@pin+1)^0,w,c
  8062  002AE2  E107               	bnz	u1751
  8063  002AE4  0E10               	movlw	16
  8064  002AE6  5C1A               	subwf	pinMode@pin^0,w,c
  8065  002AE8  B0D8               	btfsc	status,0,c
  8066  002AEA  EF79  F015         	goto	u1751
  8067  002AEE  EF7B  F015         	goto	u1750
  8068  002AF2                     u1751:
  8069  002AF2  EFA9  F015         	goto	l2476
  8070  002AF6                     u1750:
  8071  002AF6                     
  8072                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  8073  002AF6  501C               	movf	pinMode@type^0,w,c
  8074  002AF8  101D               	iorwf	(pinMode@type+1)^0,w,c
  8075  002AFA  B4D8               	btfsc	status,2,c
  8076  002AFC  EF82  F015         	goto	u1761
  8077  002B00  EF84  F015         	goto	u1760
  8078  002B04                     u1761:
  8079  002B04  EF96  F015         	goto	l2474
  8080  002B08                     u1760:
  8081  002B08  C01A  F01E         	movff	pinMode@pin,??_pinMode
  8082  002B0C  0EF8               	movlw	-8
  8083  002B0E  261E               	addwf	??_pinMode^0,f,c
  8084  002B10  0E01               	movlw	1
  8085  002B12  6E1F               	movwf	(??_pinMode+1)^0,c
  8086  002B14  2A1E               	incf	??_pinMode^0,f,c
  8087  002B16  EF8F  F015         	goto	u1774
  8088  002B1A                     u1775:
  8089  002B1A  90D8               	bcf	status,0,c
  8090  002B1C  361F               	rlcf	(??_pinMode+1)^0,f,c
  8091  002B1E                     u1774:
  8092  002B1E  2E1E               	decfsz	??_pinMode^0,f,c
  8093  002B20  EF8D  F015         	goto	u1775
  8094  002B24  501F               	movf	(??_pinMode+1)^0,w,c
  8095  002B26  1293               	iorwf	147,f,c	;volatile
  8096  002B28  EF5B  F016         	goto	l200
  8097  002B2C                     l2474:
  8098  002B2C  C01A  F01E         	movff	pinMode@pin,??_pinMode
  8099  002B30  0EF8               	movlw	-8
  8100  002B32  261E               	addwf	??_pinMode^0,f,c
  8101  002B34  0E01               	movlw	1
  8102  002B36  6E1F               	movwf	(??_pinMode+1)^0,c
  8103  002B38  2A1E               	incf	??_pinMode^0,f,c
  8104  002B3A  EFA1  F015         	goto	u1784
  8105  002B3E                     u1785:
  8106  002B3E  90D8               	bcf	status,0,c
  8107  002B40  361F               	rlcf	(??_pinMode+1)^0,f,c
  8108  002B42                     u1784:
  8109  002B42  2E1E               	decfsz	??_pinMode^0,f,c
  8110  002B44  EF9F  F015         	goto	u1785
  8111  002B48  501F               	movf	(??_pinMode+1)^0,w,c
  8112  002B4A  0AFF               	xorlw	255
  8113  002B4C  1693               	andwf	147,f,c	;volatile
  8114  002B4E  EF5B  F016         	goto	l200
  8115  002B52                     l2476:
  8116  002B52  BE1B               	btfsc	(pinMode@pin+1)^0,7,c
  8117  002B54  EFB7  F015         	goto	u1790
  8118  002B58  501B               	movf	(pinMode@pin+1)^0,w,c
  8119  002B5A  E107               	bnz	u1791
  8120  002B5C  0E18               	movlw	24
  8121  002B5E  5C1A               	subwf	pinMode@pin^0,w,c
  8122  002B60  B0D8               	btfsc	status,0,c
  8123  002B62  EFB5  F015         	goto	u1791
  8124  002B66  EFB7  F015         	goto	u1790
  8125  002B6A                     u1791:
  8126  002B6A  EFE5  F015         	goto	l2484
  8127  002B6E                     u1790:
  8128  002B6E                     
  8129                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  8130  002B6E  501C               	movf	pinMode@type^0,w,c
  8131  002B70  101D               	iorwf	(pinMode@type+1)^0,w,c
  8132  002B72  B4D8               	btfsc	status,2,c
  8133  002B74  EFBE  F015         	goto	u1801
  8134  002B78  EFC0  F015         	goto	u1800
  8135  002B7C                     u1801:
  8136  002B7C  EFD2  F015         	goto	l2482
  8137  002B80                     u1800:
  8138  002B80  C01A  F01E         	movff	pinMode@pin,??_pinMode
  8139  002B84  0EF0               	movlw	-16
  8140  002B86  261E               	addwf	??_pinMode^0,f,c
  8141  002B88  0E01               	movlw	1
  8142  002B8A  6E1F               	movwf	(??_pinMode+1)^0,c
  8143  002B8C  2A1E               	incf	??_pinMode^0,f,c
  8144  002B8E  EFCB  F015         	goto	u1814
  8145  002B92                     u1815:
  8146  002B92  90D8               	bcf	status,0,c
  8147  002B94  361F               	rlcf	(??_pinMode+1)^0,f,c
  8148  002B96                     u1814:
  8149  002B96  2E1E               	decfsz	??_pinMode^0,f,c
  8150  002B98  EFC9  F015         	goto	u1815
  8151  002B9C  501F               	movf	(??_pinMode+1)^0,w,c
  8152  002B9E  1294               	iorwf	148,f,c	;volatile
  8153  002BA0  EF5B  F016         	goto	l200
  8154  002BA4                     l2482:
  8155  002BA4  C01A  F01E         	movff	pinMode@pin,??_pinMode
  8156  002BA8  0EF0               	movlw	-16
  8157  002BAA  261E               	addwf	??_pinMode^0,f,c
  8158  002BAC  0E01               	movlw	1
  8159  002BAE  6E1F               	movwf	(??_pinMode+1)^0,c
  8160  002BB0  2A1E               	incf	??_pinMode^0,f,c
  8161  002BB2  EFDD  F015         	goto	u1824
  8162  002BB6                     u1825:
  8163  002BB6  90D8               	bcf	status,0,c
  8164  002BB8  361F               	rlcf	(??_pinMode+1)^0,f,c
  8165  002BBA                     u1824:
  8166  002BBA  2E1E               	decfsz	??_pinMode^0,f,c
  8167  002BBC  EFDB  F015         	goto	u1825
  8168  002BC0  501F               	movf	(??_pinMode+1)^0,w,c
  8169  002BC2  0AFF               	xorlw	255
  8170  002BC4  1694               	andwf	148,f,c	;volatile
  8171  002BC6  EF5B  F016         	goto	l200
  8172  002BCA                     l2484:
  8173  002BCA  BE1B               	btfsc	(pinMode@pin+1)^0,7,c
  8174  002BCC  EFF3  F015         	goto	u1830
  8175  002BD0  501B               	movf	(pinMode@pin+1)^0,w,c
  8176  002BD2  E107               	bnz	u1831
  8177  002BD4  0E20               	movlw	32
  8178  002BD6  5C1A               	subwf	pinMode@pin^0,w,c
  8179  002BD8  B0D8               	btfsc	status,0,c
  8180  002BDA  EFF1  F015         	goto	u1831
  8181  002BDE  EFF3  F015         	goto	u1830
  8182  002BE2                     u1831:
  8183  002BE2  EF21  F016         	goto	l2492
  8184  002BE6                     u1830:
  8185  002BE6                     
  8186                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  8187  002BE6  501C               	movf	pinMode@type^0,w,c
  8188  002BE8  101D               	iorwf	(pinMode@type+1)^0,w,c
  8189  002BEA  B4D8               	btfsc	status,2,c
  8190  002BEC  EFFA  F015         	goto	u1841
  8191  002BF0  EFFC  F015         	goto	u1840
  8192  002BF4                     u1841:
  8193  002BF4  EF0E  F016         	goto	l2490
  8194  002BF8                     u1840:
  8195  002BF8  C01A  F01E         	movff	pinMode@pin,??_pinMode
  8196  002BFC  0EE8               	movlw	-24
  8197  002BFE  261E               	addwf	??_pinMode^0,f,c
  8198  002C00  0E01               	movlw	1
  8199  002C02  6E1F               	movwf	(??_pinMode+1)^0,c
  8200  002C04  2A1E               	incf	??_pinMode^0,f,c
  8201  002C06  EF07  F016         	goto	u1854
  8202  002C0A                     u1855:
  8203  002C0A  90D8               	bcf	status,0,c
  8204  002C0C  361F               	rlcf	(??_pinMode+1)^0,f,c
  8205  002C0E                     u1854:
  8206  002C0E  2E1E               	decfsz	??_pinMode^0,f,c
  8207  002C10  EF05  F016         	goto	u1855
  8208  002C14  501F               	movf	(??_pinMode+1)^0,w,c
  8209  002C16  1295               	iorwf	149,f,c	;volatile
  8210  002C18  EF5B  F016         	goto	l200
  8211  002C1C                     l2490:
  8212  002C1C  C01A  F01E         	movff	pinMode@pin,??_pinMode
  8213  002C20  0EE8               	movlw	-24
  8214  002C22  261E               	addwf	??_pinMode^0,f,c
  8215  002C24  0E01               	movlw	1
  8216  002C26  6E1F               	movwf	(??_pinMode+1)^0,c
  8217  002C28  2A1E               	incf	??_pinMode^0,f,c
  8218  002C2A  EF19  F016         	goto	u1864
  8219  002C2E                     u1865:
  8220  002C2E  90D8               	bcf	status,0,c
  8221  002C30  361F               	rlcf	(??_pinMode+1)^0,f,c
  8222  002C32                     u1864:
  8223  002C32  2E1E               	decfsz	??_pinMode^0,f,c
  8224  002C34  EF17  F016         	goto	u1865
  8225  002C38  501F               	movf	(??_pinMode+1)^0,w,c
  8226  002C3A  0AFF               	xorlw	255
  8227  002C3C  1695               	andwf	149,f,c	;volatile
  8228  002C3E  EF5B  F016         	goto	l200
  8229  002C42                     l2492:
  8230  002C42  BE1B               	btfsc	(pinMode@pin+1)^0,7,c
  8231  002C44  EF2F  F016         	goto	u1870
  8232  002C48  501B               	movf	(pinMode@pin+1)^0,w,c
  8233  002C4A  E107               	bnz	u1871
  8234  002C4C  0E28               	movlw	40
  8235  002C4E  5C1A               	subwf	pinMode@pin^0,w,c
  8236  002C50  B0D8               	btfsc	status,0,c
  8237  002C52  EF2D  F016         	goto	u1871
  8238  002C56  EF2F  F016         	goto	u1870
  8239  002C5A                     u1871:
  8240  002C5A  EF5B  F016         	goto	l200
  8241  002C5E                     u1870:
  8242  002C5E                     
  8243                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  8244  002C5E  501C               	movf	pinMode@type^0,w,c
  8245  002C60  101D               	iorwf	(pinMode@type+1)^0,w,c
  8246  002C62  B4D8               	btfsc	status,2,c
  8247  002C64  EF36  F016         	goto	u1881
  8248  002C68  EF38  F016         	goto	u1880
  8249  002C6C                     u1881:
  8250  002C6C  EF4A  F016         	goto	l2498
  8251  002C70                     u1880:
  8252  002C70  C01A  F01E         	movff	pinMode@pin,??_pinMode
  8253  002C74  0EE0               	movlw	-32
  8254  002C76  261E               	addwf	??_pinMode^0,f,c
  8255  002C78  0E01               	movlw	1
  8256  002C7A  6E1F               	movwf	(??_pinMode+1)^0,c
  8257  002C7C  2A1E               	incf	??_pinMode^0,f,c
  8258  002C7E  EF43  F016         	goto	u1894
  8259  002C82                     u1895:
  8260  002C82  90D8               	bcf	status,0,c
  8261  002C84  361F               	rlcf	(??_pinMode+1)^0,f,c
  8262  002C86                     u1894:
  8263  002C86  2E1E               	decfsz	??_pinMode^0,f,c
  8264  002C88  EF41  F016         	goto	u1895
  8265  002C8C  501F               	movf	(??_pinMode+1)^0,w,c
  8266  002C8E  1296               	iorwf	150,f,c	;volatile
  8267  002C90  EF5B  F016         	goto	l200
  8268  002C94                     l2498:
  8269  002C94  C01A  F01E         	movff	pinMode@pin,??_pinMode
  8270  002C98  0EE0               	movlw	-32
  8271  002C9A  261E               	addwf	??_pinMode^0,f,c
  8272  002C9C  0E01               	movlw	1
  8273  002C9E  6E1F               	movwf	(??_pinMode+1)^0,c
  8274  002CA0  2A1E               	incf	??_pinMode^0,f,c
  8275  002CA2  EF55  F016         	goto	u1904
  8276  002CA6                     u1905:
  8277  002CA6  90D8               	bcf	status,0,c
  8278  002CA8  361F               	rlcf	(??_pinMode+1)^0,f,c
  8279  002CAA                     u1904:
  8280  002CAA  2E1E               	decfsz	??_pinMode^0,f,c
  8281  002CAC  EF53  F016         	goto	u1905
  8282  002CB0  501F               	movf	(??_pinMode+1)^0,w,c
  8283  002CB2  0AFF               	xorlw	255
  8284  002CB4  1696               	andwf	150,f,c	;volatile
  8285  002CB6                     l200:
  8286  002CB6  0012               	return		;funcret
  8287  002CB8                     __end_of_pinMode:
  8288                           	callstack 0
  8289                           
  8290 ;; *************** function _kpInit *****************
  8291 ;; Defined at:
  8292 ;;		line 88 in file "keypad.c"
  8293 ;; Parameters:    Size  Location     Type
  8294 ;;		None
  8295 ;; Auto vars:     Size  Location     Type
  8296 ;;		None
  8297 ;; Return value:  Size  Location     Type
  8298 ;;                  1    wreg      void 
  8299 ;; Registers used:
  8300 ;;		wreg, status,2, status,0
  8301 ;; Tracked objects:
  8302 ;;		On entry : 0/0
  8303 ;;		On exit  : 0/0
  8304 ;;		Unchanged: 0/0
  8305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8306 ;;      Params:         0       0       0       0       0       0       0
  8307 ;;      Locals:         0       0       0       0       0       0       0
  8308 ;;      Temps:          0       0       0       0       0       0       0
  8309 ;;      Totals:         0       0       0       0       0       0       0
  8310 ;;Total ram usage:        0 bytes
  8311 ;; Hardware stack levels used:    1
  8312 ;; This function calls:
  8313 ;;		Nothing
  8314 ;; This function is called by:
  8315 ;;		_main
  8316 ;;		_k_weissbier
  8317 ;;		_amber_lager
  8318 ;; This function uses a non-reentrant model
  8319 ;;
  8320                           
  8321                           	psect	text12
  8322  003B68                     __ptext12:
  8323                           	callstack 0
  8324  003B68                     _kpInit:
  8325                           	callstack 30
  8326  003B68                     
  8327                           ;keypad.c: 90:     TRISB &= 0x07;
  8328  003B68  0E07               	movlw	7
  8329  003B6A  1693               	andwf	147,f,c	;volatile
  8330                           
  8331                           ;keypad.c: 92:     TRISD |= 0x0f;
  8332  003B6C  0E0F               	movlw	15
  8333  003B6E  1295               	iorwf	149,f,c	;volatile
  8334  003B70  0012               	return		;funcret
  8335  003B72                     __end_of_kpInit:
  8336                           	callstack 0
  8337                           
  8338 ;; *************** function _kpDebounce *****************
  8339 ;; Defined at:
  8340 ;;		line 40 in file "keypad.c"
  8341 ;; Parameters:    Size  Location     Type
  8342 ;;		None
  8343 ;; Auto vars:     Size  Location     Type
  8344 ;;  k               2    6[COMRAM] int 
  8345 ;;  i               1    9[COMRAM] unsigned char 
  8346 ;;  j               1    8[COMRAM] unsigned char 
  8347 ;;  old_D           1    5[COMRAM] unsigned char 
  8348 ;; Return value:  Size  Location     Type
  8349 ;;                  1    wreg      void 
  8350 ;; Registers used:
  8351 ;;		wreg, status,2, status,0, prodl, prodh
  8352 ;; Tracked objects:
  8353 ;;		On entry : 0/0
  8354 ;;		On exit  : 0/0
  8355 ;;		Unchanged: 0/0
  8356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8357 ;;      Params:         0       0       0       0       0       0       0
  8358 ;;      Locals:         5       0       0       0       0       0       0
  8359 ;;      Temps:          5       0       0       0       0       0       0
  8360 ;;      Totals:        10       0       0       0       0       0       0
  8361 ;;Total ram usage:       10 bytes
  8362 ;; Hardware stack levels used:    1
  8363 ;; This function calls:
  8364 ;;		Nothing
  8365 ;; This function is called by:
  8366 ;;		_main
  8367 ;;		_k_weissbier
  8368 ;;		_amber_lager
  8369 ;; This function uses a non-reentrant model
  8370 ;;
  8371                           
  8372                           	psect	text13
  8373  0032BC                     __ptext13:
  8374                           	callstack 0
  8375  0032BC                     _kpDebounce:
  8376                           	callstack 30
  8377  0032BC                     
  8378                           ;keypad.c: 41:     unsigned char i, j;;keypad.c: 42:     static unsigned char tempo;;key
      +                          pad.c: 43:     static unsigned int valorNovo = 0x0000;;keypad.c: 44:     static unsigned
      +                           int valorAntigo = 0x0000;;keypad.c: 47:     unsigned char old_D;;keypad.c: 48:     old_
      +                          D = PORTD;
  8379  0032BC  CF83 F01F          	movff	3971,kpDebounce@old_D	;volatile
  8380  0032C0                     
  8381                           ;keypad.c: 52:     TRISD |= 0x0f;
  8382  0032C0  0E0F               	movlw	15
  8383  0032C2  1295               	iorwf	149,f,c	;volatile
  8384  0032C4                     
  8385                           ;keypad.c: 54:     for (i = 0; i < 3; i++) {
  8386  0032C4  0E00               	movlw	0
  8387  0032C6  6E23               	movwf	kpDebounce@i^0,c
  8388  0032C8                     l1426:
  8389                           
  8390                           ;keypad.c: 56:         TRISB &= 0xF8;
  8391  0032C8  0EF8               	movlw	248
  8392  0032CA  1693               	andwf	147,f,c	;volatile
  8393                           
  8394                           ;keypad.c: 58:         ((TRISB) |= (1<<(i)));
  8395  0032CC  C023  F01A         	movff	kpDebounce@i,??_kpDebounce
  8396  0032D0  0E01               	movlw	1
  8397  0032D2  6E1B               	movwf	(??_kpDebounce+1)^0,c
  8398  0032D4  2A1A               	incf	??_kpDebounce^0,f,c
  8399  0032D6  EF6F  F019         	goto	u514
  8400  0032DA                     u515:
  8401  0032DA  90D8               	bcf	status,0,c
  8402  0032DC  361B               	rlcf	(??_kpDebounce+1)^0,f,c
  8403  0032DE                     u514:
  8404  0032DE  2E1A               	decfsz	??_kpDebounce^0,f,c
  8405  0032E0  EF6D  F019         	goto	u515
  8406  0032E4  501B               	movf	(??_kpDebounce+1)^0,w,c
  8407  0032E6  1293               	iorwf	147,f,c	;volatile
  8408                           
  8409                           ;keypad.c: 60:         PORTB |= 0x07;
  8410  0032E8  0E07               	movlw	7
  8411  0032EA  1281               	iorwf	129,f,c	;volatile
  8412                           
  8413                           ;keypad.c: 61:         ((PORTB) &= ~(1<<(i)));
  8414  0032EC  C023  F01A         	movff	kpDebounce@i,??_kpDebounce
  8415  0032F0  0E01               	movlw	1
  8416  0032F2  6E1B               	movwf	(??_kpDebounce+1)^0,c
  8417  0032F4  2A1A               	incf	??_kpDebounce^0,f,c
  8418  0032F6  EF7F  F019         	goto	u524
  8419  0032FA                     u525:
  8420  0032FA  90D8               	bcf	status,0,c
  8421  0032FC  361B               	rlcf	(??_kpDebounce+1)^0,f,c
  8422  0032FE                     u524:
  8423  0032FE  2E1A               	decfsz	??_kpDebounce^0,f,c
  8424  003300  EF7D  F019         	goto	u525
  8425  003304  501B               	movf	(??_kpDebounce+1)^0,w,c
  8426  003306  0AFF               	xorlw	255
  8427  003308  1681               	andwf	129,f,c	;volatile
  8428  00330A                     
  8429                           ;keypad.c: 64:         for (int k = 0; k < 10; k++);
  8430  00330A  0E00               	movlw	0
  8431  00330C  6E21               	movwf	(kpDebounce@k+1)^0,c
  8432  00330E  0E00               	movlw	0
  8433  003310  6E20               	movwf	kpDebounce@k^0,c
  8434  003312                     l1434:
  8435  003312  4A20               	infsnz	kpDebounce@k^0,f,c
  8436  003314  2A21               	incf	(kpDebounce@k+1)^0,f,c
  8437  003316  BE21               	btfsc	(kpDebounce@k+1)^0,7,c
  8438  003318  EF97  F019         	goto	u531
  8439  00331C  5021               	movf	(kpDebounce@k+1)^0,w,c
  8440  00331E  E109               	bnz	u530
  8441  003320  0E0A               	movlw	10
  8442  003322  5C20               	subwf	kpDebounce@k^0,w,c
  8443  003324  A0D8               	btfss	status,0,c
  8444  003326  EF97  F019         	goto	u531
  8445  00332A  EF99  F019         	goto	u530
  8446  00332E                     u531:
  8447  00332E  EF89  F019         	goto	l1434
  8448  003332                     u530:
  8449  003332                     
  8450                           ;keypad.c: 67:         for (j = 0; j < 4; j++) {
  8451  003332  0E00               	movlw	0
  8452  003334  6E22               	movwf	kpDebounce@j^0,c
  8453  003336                     l1444:
  8454                           
  8455                           ;keypad.c: 68:             if (!((PORTD) & (1<<(j)))) {
  8456  003336  C022  F01A         	movff	kpDebounce@j,??_kpDebounce
  8457  00333A  0E01               	movlw	1
  8458  00333C  6E1B               	movwf	(??_kpDebounce+1)^0,c
  8459  00333E  2A1A               	incf	??_kpDebounce^0,f,c
  8460  003340  EFA4  F019         	goto	u544
  8461  003344                     u545:
  8462  003344  90D8               	bcf	status,0,c
  8463  003346  361B               	rlcf	(??_kpDebounce+1)^0,f,c
  8464  003348                     u544:
  8465  003348  2E1A               	decfsz	??_kpDebounce^0,f,c
  8466  00334A  EFA2  F019         	goto	u545
  8467  00334E  501B               	movf	(??_kpDebounce+1)^0,w,c
  8468  003350  1483               	andwf	131,w,c	;volatile
  8469  003352  0900               	iorlw	0
  8470  003354  A4D8               	btfss	status,2,c
  8471  003356  EFAF  F019         	goto	u551
  8472  00335A  EFB1  F019         	goto	u550
  8473  00335E                     u551:
  8474  00335E  EFC9  F019         	goto	l1448
  8475  003362                     u550:
  8476  003362                     
  8477                           ;keypad.c: 69:                 ((valorNovo) |= (1<<((i * 4) + j)));
  8478  003362  5023               	movf	kpDebounce@i^0,w,c
  8479  003364  0D04               	mullw	4
  8480  003366  50F3               	movf	243,w,c
  8481  003368  2422               	addwf	kpDebounce@j^0,w,c
  8482  00336A  6E1A               	movwf	??_kpDebounce^0,c
  8483  00336C  0E01               	movlw	1
  8484  00336E  6E1B               	movwf	(??_kpDebounce+1)^0,c
  8485  003370  0E00               	movlw	0
  8486  003372  6E1C               	movwf	(??_kpDebounce+2)^0,c
  8487  003374  2A1A               	incf	??_kpDebounce^0,f,c
  8488  003376  EFC0  F019         	goto	u564
  8489  00337A                     u565:
  8490  00337A  90D8               	bcf	status,0,c
  8491  00337C  361B               	rlcf	(??_kpDebounce+1)^0,f,c
  8492  00337E  361C               	rlcf	(??_kpDebounce+2)^0,f,c
  8493  003380                     u564:
  8494  003380  2E1A               	decfsz	??_kpDebounce^0,f,c
  8495  003382  EFBD  F019         	goto	u565
  8496  003386  501B               	movf	(??_kpDebounce+1)^0,w,c
  8497  003388  120B               	iorwf	kpDebounce@valorNovo^0,f,c
  8498  00338A  501C               	movf	(??_kpDebounce+2)^0,w,c
  8499  00338C  120C               	iorwf	(kpDebounce@valorNovo+1)^0,f,c
  8500                           
  8501                           ;keypad.c: 70:             } else {
  8502  00338E  EFE3  F019         	goto	l1450
  8503  003392                     l1448:
  8504                           
  8505                           ;keypad.c: 71:                 ((valorNovo) &= ~(1<<((i * 4) + j)));
  8506  003392  5023               	movf	kpDebounce@i^0,w,c
  8507  003394  0D04               	mullw	4
  8508  003396  50F3               	movf	243,w,c
  8509  003398  2422               	addwf	kpDebounce@j^0,w,c
  8510  00339A  6E1A               	movwf	??_kpDebounce^0,c
  8511  00339C  0E01               	movlw	1
  8512  00339E  6E1B               	movwf	(??_kpDebounce+1)^0,c
  8513  0033A0  0E00               	movlw	0
  8514  0033A2  6E1C               	movwf	(??_kpDebounce+2)^0,c
  8515  0033A4  2A1A               	incf	??_kpDebounce^0,f,c
  8516  0033A6  EFD8  F019         	goto	u574
  8517  0033AA                     u575:
  8518  0033AA  90D8               	bcf	status,0,c
  8519  0033AC  361B               	rlcf	(??_kpDebounce+1)^0,f,c
  8520  0033AE  361C               	rlcf	(??_kpDebounce+2)^0,f,c
  8521  0033B0                     u574:
  8522  0033B0  2E1A               	decfsz	??_kpDebounce^0,f,c
  8523  0033B2  EFD5  F019         	goto	u575
  8524  0033B6  1C1B               	comf	(??_kpDebounce+1)^0,w,c
  8525  0033B8  6E1D               	movwf	(??_kpDebounce+3)^0,c
  8526  0033BA  1C1C               	comf	(??_kpDebounce+2)^0,w,c
  8527  0033BC  6E1E               	movwf	(??_kpDebounce+4)^0,c
  8528  0033BE  501D               	movf	(??_kpDebounce+3)^0,w,c
  8529  0033C0  160B               	andwf	kpDebounce@valorNovo^0,f,c
  8530  0033C2  501E               	movf	(??_kpDebounce+4)^0,w,c
  8531  0033C4  160C               	andwf	(kpDebounce@valorNovo+1)^0,f,c
  8532  0033C6                     l1450:
  8533                           
  8534                           ;keypad.c: 73:         }
  8535  0033C6  2A22               	incf	kpDebounce@j^0,f,c
  8536  0033C8  0E03               	movlw	3
  8537  0033CA  6422               	cpfsgt	kpDebounce@j^0,c
  8538  0033CC  EFEA  F019         	goto	u581
  8539  0033D0  EFEC  F019         	goto	u580
  8540  0033D4                     u581:
  8541  0033D4  EF9B  F019         	goto	l1444
  8542  0033D8                     u580:
  8543  0033D8                     
  8544                           ;keypad.c: 74:     }
  8545  0033D8  2A23               	incf	kpDebounce@i^0,f,c
  8546  0033DA  0E02               	movlw	2
  8547  0033DC  6423               	cpfsgt	kpDebounce@i^0,c
  8548  0033DE  EFF3  F019         	goto	u591
  8549  0033E2  EFF5  F019         	goto	u590
  8550  0033E6                     u591:
  8551  0033E6  EF64  F019         	goto	l1426
  8552  0033EA                     u590:
  8553  0033EA                     
  8554                           ;keypad.c: 75:     if (valorAntigo == valorNovo) {
  8555  0033EA  500B               	movf	kpDebounce@valorNovo^0,w,c
  8556  0033EC  1809               	xorwf	kpDebounce@valorAntigo^0,w,c
  8557  0033EE  E107               	bnz	u601
  8558  0033F0  500C               	movf	(kpDebounce@valorNovo+1)^0,w,c
  8559  0033F2  180A               	xorwf	(kpDebounce@valorAntigo+1)^0,w,c
  8560  0033F4  A4D8               	btfss	status,2,c
  8561  0033F6  EFFF  F019         	goto	u601
  8562  0033FA  EF01  F01A         	goto	u600
  8563  0033FE                     u601:
  8564  0033FE  EF04  F01A         	goto	l1462
  8565  003402                     u600:
  8566  003402                     
  8567                           ;keypad.c: 76:         tempo--;
  8568  003402  0618               	decf	kpDebounce@tempo^0,f,c
  8569                           
  8570                           ;keypad.c: 77:     } else {
  8571  003404  EF0A  F01A         	goto	l231
  8572  003408                     l1462:
  8573                           
  8574                           ;keypad.c: 78:         tempo = 10;
  8575  003408  0E0A               	movlw	10
  8576  00340A  6E18               	movwf	kpDebounce@tempo^0,c
  8577  00340C                     
  8578                           ;keypad.c: 79:         valorAntigo = valorNovo;
  8579  00340C  C00B  F009         	movff	kpDebounce@valorNovo,kpDebounce@valorAntigo
  8580  003410  C00C  F00A         	movff	kpDebounce@valorNovo+1,kpDebounce@valorAntigo+1
  8581  003414                     l231:
  8582                           
  8583                           ;keypad.c: 81:     if (tempo == 0) {
  8584  003414  5018               	movf	kpDebounce@tempo^0,w,c
  8585  003416  A4D8               	btfss	status,2,c
  8586  003418  EF10  F01A         	goto	u611
  8587  00341C  EF12  F01A         	goto	u610
  8588  003420                     u611:
  8589  003420  EF16  F01A         	goto	l232
  8590  003424                     u610:
  8591  003424                     
  8592                           ;keypad.c: 82:         valor = valorAntigo;
  8593  003424  C009  F00D         	movff	kpDebounce@valorAntigo,_valor@keypad$F307
  8594  003428  C00A  F00E         	movff	kpDebounce@valorAntigo+1,_valor@keypad$F307+1
  8595  00342C                     l232:
  8596                           
  8597                           ;keypad.c: 84:     PORTD = old_D;
  8598  00342C  C01F  FF83         	movff	kpDebounce@old_D,3971	;volatile
  8599  003430                     
  8600                           ;keypad.c: 85:     TRISD = 0x00;
  8601  003430  0E00               	movlw	0
  8602  003432  6E95               	movwf	149,c	;volatile
  8603  003434  0012               	return		;funcret
  8604  003436                     __end_of_kpDebounce:
  8605                           	callstack 0
  8606                           
  8607 ;; *************** function ___lwmod *****************
  8608 ;; Defined at:
  8609 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\lwmod.c"
  8610 ;; Parameters:    Size  Location     Type
  8611 ;;  dividend        2    7[COMRAM] unsigned int 
  8612 ;;  divisor         2    9[COMRAM] unsigned int 
  8613 ;; Auto vars:     Size  Location     Type
  8614 ;;  counter         1   11[COMRAM] unsigned char 
  8615 ;; Return value:  Size  Location     Type
  8616 ;;                  2    7[COMRAM] unsigned int 
  8617 ;; Registers used:
  8618 ;;		wreg, status,2, status,0
  8619 ;; Tracked objects:
  8620 ;;		On entry : 0/0
  8621 ;;		On exit  : 0/0
  8622 ;;		Unchanged: 0/0
  8623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8624 ;;      Params:         4       0       0       0       0       0       0
  8625 ;;      Locals:         1       0       0       0       0       0       0
  8626 ;;      Temps:          0       0       0       0       0       0       0
  8627 ;;      Totals:         5       0       0       0       0       0       0
  8628 ;;Total ram usage:        5 bytes
  8629 ;; Hardware stack levels used:    1
  8630 ;; This function calls:
  8631 ;;		Nothing
  8632 ;; This function is called by:
  8633 ;;		_k_weissbier
  8634 ;;		_amber_lager
  8635 ;; This function uses a non-reentrant model
  8636 ;;
  8637                           
  8638                           	psect	text14
  8639  0038FA                     __ptext14:
  8640                           	callstack 0
  8641  0038FA                     ___lwmod:
  8642                           	callstack 28
  8643  0038FA  5023               	movf	___lwmod@divisor^0,w,c
  8644  0038FC  1024               	iorwf	(___lwmod@divisor+1)^0,w,c
  8645  0038FE  B4D8               	btfsc	status,2,c
  8646  003900  EF84  F01C         	goto	u2071
  8647  003904  EF86  F01C         	goto	u2070
  8648  003908                     u2071:
  8649  003908  EFAA  F01C         	goto	l1002
  8650  00390C                     u2070:
  8651  00390C  0E01               	movlw	1
  8652  00390E  6E25               	movwf	___lwmod@counter^0,c
  8653  003910  EF8E  F01C         	goto	l2698
  8654  003914                     l2696:
  8655  003914  90D8               	bcf	status,0,c
  8656  003916  3623               	rlcf	___lwmod@divisor^0,f,c
  8657  003918  3624               	rlcf	(___lwmod@divisor+1)^0,f,c
  8658  00391A  2A25               	incf	___lwmod@counter^0,f,c
  8659  00391C                     l2698:
  8660  00391C  AE24               	btfss	(___lwmod@divisor+1)^0,7,c
  8661  00391E  EF93  F01C         	goto	u2081
  8662  003922  EF95  F01C         	goto	u2080
  8663  003926                     u2081:
  8664  003926  EF8A  F01C         	goto	l2696
  8665  00392A                     u2080:
  8666  00392A                     l2700:
  8667  00392A  5023               	movf	___lwmod@divisor^0,w,c
  8668  00392C  5C21               	subwf	___lwmod@dividend^0,w,c
  8669  00392E  5024               	movf	(___lwmod@divisor+1)^0,w,c
  8670  003930  5822               	subwfb	(___lwmod@dividend+1)^0,w,c
  8671  003932  A0D8               	btfss	status,0,c
  8672  003934  EF9E  F01C         	goto	u2091
  8673  003938  EFA0  F01C         	goto	u2090
  8674  00393C                     u2091:
  8675  00393C  EFA4  F01C         	goto	l2704
  8676  003940                     u2090:
  8677  003940  5023               	movf	___lwmod@divisor^0,w,c
  8678  003942  5E21               	subwf	___lwmod@dividend^0,f,c
  8679  003944  5024               	movf	(___lwmod@divisor+1)^0,w,c
  8680  003946  5A22               	subwfb	(___lwmod@dividend+1)^0,f,c
  8681  003948                     l2704:
  8682  003948  90D8               	bcf	status,0,c
  8683  00394A  3224               	rrcf	(___lwmod@divisor+1)^0,f,c
  8684  00394C  3223               	rrcf	___lwmod@divisor^0,f,c
  8685  00394E  2E25               	decfsz	___lwmod@counter^0,f,c
  8686  003950  EF95  F01C         	goto	l2700
  8687  003954                     l1002:
  8688  003954  C021  F021         	movff	___lwmod@dividend,?___lwmod
  8689  003958  C022  F022         	movff	___lwmod@dividend+1,?___lwmod+1
  8690  00395C  0012               	return		;funcret
  8691  00395E                     __end_of___lwmod:
  8692                           	callstack 0
  8693                           
  8694 ;; *************** function _Tecl *****************
  8695 ;; Defined at:
  8696 ;;		line 730 in file "AMBER_LAGER.c"
  8697 ;; Parameters:    Size  Location     Type
  8698 ;;		None
  8699 ;; Auto vars:     Size  Location     Type
  8700 ;;  t               2   12[COMRAM] int 
  8701 ;; Return value:  Size  Location     Type
  8702 ;;                  1    wreg      void 
  8703 ;; Registers used:
  8704 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8705 ;; Tracked objects:
  8706 ;;		On entry : 0/0
  8707 ;;		On exit  : 0/0
  8708 ;;		Unchanged: 0/0
  8709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8710 ;;      Params:         0       0       0       0       0       0       0
  8711 ;;      Locals:         2       0       0       0       0       0       0
  8712 ;;      Temps:          0       0       0       0       0       0       0
  8713 ;;      Totals:         2       0       0       0       0       0       0
  8714 ;;Total ram usage:        2 bytes
  8715 ;; Hardware stack levels used:    1
  8716 ;; Hardware stack levels required when called:    3
  8717 ;; This function calls:
  8718 ;;		_atraso_ms
  8719 ;;		_kpRead
  8720 ;;		_lcdCommand
  8721 ;;		_lcdData
  8722 ;;		_pwmSet1
  8723 ;; This function is called by:
  8724 ;;		_amber_lager
  8725 ;; This function uses a non-reentrant model
  8726 ;;
  8727                           
  8728                           	psect	text15
  8729  003132                     __ptext15:
  8730                           	callstack 0
  8731  003132                     _Tecl:
  8732                           	callstack 25
  8733  003132                     
  8734                           ;AMBER_LAGER.c: 731:   int t ;;AMBER_LAGER.c: 733: lcdCommand(0x80);
  8735  003132  0E80               	movlw	128
  8736  003134  EC5C  F01B         	call	_lcdCommand
  8737                           
  8738                           ;AMBER_LAGER.c: 735: if(kpRead()!= t)
  8739  003138  ECB9  F01D         	call	_kpRead	;wreg free
  8740  00313C  5026               	movf	Tecl@t^0,w,c
  8741  00313E  181A               	xorwf	?_kpRead^0,w,c
  8742  003140  E109               	bnz	u2020
  8743  003142  5027               	movf	(Tecl@t+1)^0,w,c
  8744  003144  181B               	xorwf	(?_kpRead+1)^0,w,c
  8745  003146  B4D8               	btfsc	status,2,c
  8746  003148  EFA8  F018         	goto	u2021
  8747  00314C  EFAA  F018         	goto	u2020
  8748  003150                     u2021:
  8749  003150  EFAC  F018         	goto	l495
  8750  003154                     u2020:
  8751  003154  ECB9  F01D         	call	_kpRead	;wreg free
  8752  003158                     l495:
  8753                           
  8754                           ;AMBER_LAGER.c: 740: if((((kpRead()) & (1<<8)))&&(vlr < (6700 +1)))
  8755  003158  ECB9  F01D         	call	_kpRead	;wreg free
  8756  00315C  A01B               	btfss	(?_kpRead+1)^0,0,c
  8757  00315E  EFB3  F018         	goto	u2031
  8758  003162  EFB5  F018         	goto	u2030
  8759  003166                     u2031:
  8760  003166  EF08  F019         	goto	l2678
  8761  00316A                     u2030:
  8762  00316A  0E2D               	movlw	45
  8763  00316C  5C31               	subwf	_vlr^0,w,c
  8764  00316E  0E1A               	movlw	26
  8765  003170  5832               	subwfb	(_vlr+1)^0,w,c
  8766  003172  B0D8               	btfsc	status,0,c
  8767  003174  EFBE  F018         	goto	u2041
  8768  003178  EFC0  F018         	goto	u2040
  8769  00317C                     u2041:
  8770  00317C  EF08  F019         	goto	l2678
  8771  003180                     u2040:
  8772  003180                     
  8773                           ;AMBER_LAGER.c: 741: {;AMBER_LAGER.c: 742:    lcdCommand(0x01);
  8774  003180  0E01               	movlw	1
  8775  003182  EC5C  F01B         	call	_lcdCommand
  8776                           
  8777                           ;AMBER_LAGER.c: 743:    lcdData('M');
  8778  003186  0E4D               	movlw	77
  8779  003188  EC38  F01D         	call	_lcdData
  8780                           
  8781                           ;AMBER_LAGER.c: 744:    lcdData('A');
  8782  00318C  0E41               	movlw	65
  8783  00318E  EC38  F01D         	call	_lcdData
  8784                           
  8785                           ;AMBER_LAGER.c: 745:    lcdData('L');
  8786  003192  0E4C               	movlw	76
  8787  003194  EC38  F01D         	call	_lcdData
  8788                           
  8789                           ;AMBER_LAGER.c: 746:    lcdData('T');
  8790  003198  0E54               	movlw	84
  8791  00319A  EC38  F01D         	call	_lcdData
  8792                           
  8793                           ;AMBER_LAGER.c: 747:    lcdData('E');
  8794  00319E  0E45               	movlw	69
  8795  0031A0  EC38  F01D         	call	_lcdData
  8796                           
  8797                           ;AMBER_LAGER.c: 748:    lcdData('S');
  8798  0031A4  0E53               	movlw	83
  8799  0031A6  EC38  F01D         	call	_lcdData
  8800                           
  8801                           ;AMBER_LAGER.c: 749:    lcdData(0x00);
  8802  0031AA  0E00               	movlw	0
  8803  0031AC  EC38  F01D         	call	_lcdData
  8804                           
  8805                           ;AMBER_LAGER.c: 750:    lcdData('I');
  8806  0031B0  0E49               	movlw	73
  8807  0031B2  EC38  F01D         	call	_lcdData
  8808                           
  8809                           ;AMBER_LAGER.c: 751:    lcdData('N');
  8810  0031B6  0E4E               	movlw	78
  8811  0031B8  EC38  F01D         	call	_lcdData
  8812                           
  8813                           ;AMBER_LAGER.c: 752:    lcdData('S');
  8814  0031BC  0E53               	movlw	83
  8815  0031BE  EC38  F01D         	call	_lcdData
  8816                           
  8817                           ;AMBER_LAGER.c: 753:    lcdData('E');
  8818  0031C2  0E45               	movlw	69
  8819  0031C4  EC38  F01D         	call	_lcdData
  8820                           
  8821                           ;AMBER_LAGER.c: 754:    lcdData('R');
  8822  0031C8  0E52               	movlw	82
  8823  0031CA  EC38  F01D         	call	_lcdData
  8824                           
  8825                           ;AMBER_LAGER.c: 755:    lcdData('I');
  8826  0031CE  0E49               	movlw	73
  8827  0031D0  EC38  F01D         	call	_lcdData
  8828                           
  8829                           ;AMBER_LAGER.c: 756:    lcdData('D');
  8830  0031D4  0E44               	movlw	68
  8831  0031D6  EC38  F01D         	call	_lcdData
  8832                           
  8833                           ;AMBER_LAGER.c: 757:    lcdData('O');
  8834  0031DA  0E4F               	movlw	79
  8835  0031DC  EC38  F01D         	call	_lcdData
  8836                           
  8837                           ;AMBER_LAGER.c: 758:    lcdData('S');
  8838  0031E0  0E53               	movlw	83
  8839  0031E2  EC38  F01D         	call	_lcdData
  8840  0031E6                     
  8841                           ;AMBER_LAGER.c: 759:    pwmSet1(50);
  8842  0031E6  0E32               	movlw	50
  8843  0031E8  EC47  F01C         	call	_pwmSet1
  8844  0031EC                     
  8845                           ;AMBER_LAGER.c: 760:    vlr = (6700 +1);
  8846  0031EC  0E1A               	movlw	26
  8847  0031EE  6E32               	movwf	(_vlr+1)^0,c
  8848  0031F0  0E2D               	movlw	45
  8849  0031F2  6E31               	movwf	_vlr^0,c
  8850  0031F4                     
  8851                           ;AMBER_LAGER.c: 761:    tmp = (6700 +1);
  8852  0031F4  0E1A               	movlw	26
  8853  0031F6  6E02               	movwf	(_tmp+1)^0,c
  8854  0031F8  0E2D               	movlw	45
  8855  0031FA  6E01               	movwf	_tmp^0,c
  8856  0031FC                     
  8857                           ;AMBER_LAGER.c: 762:    cont = 0;
  8858  0031FC  0E00               	movlw	0
  8859  0031FE  6E06               	movwf	(_cont+1)^0,c
  8860  003200  0E00               	movlw	0
  8861  003202  6E05               	movwf	_cont^0,c
  8862  003204                     
  8863                           ;AMBER_LAGER.c: 763:    atraso_ms(550);
  8864  003204  0E02               	movlw	2
  8865  003206  6E1B               	movwf	(atraso_ms@valor+1)^0,c
  8866  003208  0E26               	movlw	38
  8867  00320A  6E1A               	movwf	atraso_ms@valor^0,c
  8868  00320C  ECAF  F01C         	call	_atraso_ms	;wreg free
  8869  003210                     l2678:
  8870                           
  8871                           ;AMBER_LAGER.c: 766: if((i == 10 )&&(((kpRead()) & (1<<8))))
  8872  003210  0E0A               	movlw	10
  8873  003212  1833               	xorwf	_i^0,w,c
  8874  003214  1034               	iorwf	(_i+1)^0,w,c
  8875  003216  A4D8               	btfss	status,2,c
  8876  003218  EF10  F019         	goto	u2051
  8877  00321C  EF12  F019         	goto	u2050
  8878  003220                     u2051:
  8879  003220  EF5D  F019         	goto	l498
  8880  003224                     u2050:
  8881  003224  ECB9  F01D         	call	_kpRead	;wreg free
  8882  003228  A01B               	btfss	(?_kpRead+1)^0,0,c
  8883  00322A  EF19  F019         	goto	u2061
  8884  00322E  EF1B  F019         	goto	u2060
  8885  003232                     u2061:
  8886  003232  EF5D  F019         	goto	l498
  8887  003236                     u2060:
  8888  003236                     
  8889                           ;AMBER_LAGER.c: 767: {;AMBER_LAGER.c: 768:    lcdCommand(0x01);
  8890  003236  0E01               	movlw	1
  8891  003238  EC5C  F01B         	call	_lcdCommand
  8892                           
  8893                           ;AMBER_LAGER.c: 769:    lcdData('L');
  8894  00323C  0E4C               	movlw	76
  8895  00323E  EC38  F01D         	call	_lcdData
  8896                           
  8897                           ;AMBER_LAGER.c: 770:    lcdData('U');
  8898  003242  0E55               	movlw	85
  8899  003244  EC38  F01D         	call	_lcdData
  8900                           
  8901                           ;AMBER_LAGER.c: 771:    lcdData('P');
  8902  003248  0E50               	movlw	80
  8903  00324A  EC38  F01D         	call	_lcdData
  8904                           
  8905                           ;AMBER_LAGER.c: 772:    lcdData('U');
  8906  00324E  0E55               	movlw	85
  8907  003250  EC38  F01D         	call	_lcdData
  8908                           
  8909                           ;AMBER_LAGER.c: 773:    lcdData('L');
  8910  003254  0E4C               	movlw	76
  8911  003256  EC38  F01D         	call	_lcdData
  8912                           
  8913                           ;AMBER_LAGER.c: 774:    lcdData('O');
  8914  00325A  0E4F               	movlw	79
  8915  00325C  EC38  F01D         	call	_lcdData
  8916                           
  8917                           ;AMBER_LAGER.c: 775:    lcdData(0x00);
  8918  003260  0E00               	movlw	0
  8919  003262  EC38  F01D         	call	_lcdData
  8920                           
  8921                           ;AMBER_LAGER.c: 776:    lcdData('I');
  8922  003266  0E49               	movlw	73
  8923  003268  EC38  F01D         	call	_lcdData
  8924                           
  8925                           ;AMBER_LAGER.c: 777:    lcdData('N');
  8926  00326C  0E4E               	movlw	78
  8927  00326E  EC38  F01D         	call	_lcdData
  8928                           
  8929                           ;AMBER_LAGER.c: 778:    lcdData('S');
  8930  003272  0E53               	movlw	83
  8931  003274  EC38  F01D         	call	_lcdData
  8932                           
  8933                           ;AMBER_LAGER.c: 779:    lcdData('E');
  8934  003278  0E45               	movlw	69
  8935  00327A  EC38  F01D         	call	_lcdData
  8936                           
  8937                           ;AMBER_LAGER.c: 780:    lcdData('R');
  8938  00327E  0E52               	movlw	82
  8939  003280  EC38  F01D         	call	_lcdData
  8940                           
  8941                           ;AMBER_LAGER.c: 781:    lcdData('I');
  8942  003284  0E49               	movlw	73
  8943  003286  EC38  F01D         	call	_lcdData
  8944                           
  8945                           ;AMBER_LAGER.c: 782:    lcdData('D');
  8946  00328A  0E44               	movlw	68
  8947  00328C  EC38  F01D         	call	_lcdData
  8948                           
  8949                           ;AMBER_LAGER.c: 783:    lcdData('O');
  8950  003290  0E4F               	movlw	79
  8951  003292  EC38  F01D         	call	_lcdData
  8952  003296                     
  8953                           ;AMBER_LAGER.c: 784:    cont = 0;
  8954  003296  0E00               	movlw	0
  8955  003298  6E06               	movwf	(_cont+1)^0,c
  8956  00329A  0E00               	movlw	0
  8957  00329C  6E05               	movwf	_cont^0,c
  8958  00329E                     
  8959                           ;AMBER_LAGER.c: 785:    i = 6;
  8960  00329E  0E00               	movlw	0
  8961  0032A0  6E34               	movwf	(_i+1)^0,c
  8962  0032A2  0E06               	movlw	6
  8963  0032A4  6E33               	movwf	_i^0,c
  8964  0032A6                     
  8965                           ;AMBER_LAGER.c: 786:    vlr = 9900 + 1;
  8966  0032A6  0E26               	movlw	38
  8967  0032A8  6E32               	movwf	(_vlr+1)^0,c
  8968  0032AA  0EAD               	movlw	173
  8969  0032AC  6E31               	movwf	_vlr^0,c
  8970  0032AE                     
  8971                           ;AMBER_LAGER.c: 787:    atraso_ms(550);
  8972  0032AE  0E02               	movlw	2
  8973  0032B0  6E1B               	movwf	(atraso_ms@valor+1)^0,c
  8974  0032B2  0E26               	movlw	38
  8975  0032B4  6E1A               	movwf	atraso_ms@valor^0,c
  8976  0032B6  ECAF  F01C         	call	_atraso_ms	;wreg free
  8977  0032BA                     l498:
  8978  0032BA  0012               	return		;funcret
  8979  0032BC                     __end_of_Tecl:
  8980                           	callstack 0
  8981                           
  8982 ;; *************** function _pwmSet1 *****************
  8983 ;; Defined at:
  8984 ;;		line 23 in file "pwm.c"
  8985 ;; Parameters:    Size  Location     Type
  8986 ;;  porcento        1    wreg     unsigned char 
  8987 ;; Auto vars:     Size  Location     Type
  8988 ;;  porcento        1    9[COMRAM] unsigned char 
  8989 ;;  val             2   10[COMRAM] unsigned int 
  8990 ;; Return value:  Size  Location     Type
  8991 ;;                  1    wreg      void 
  8992 ;; Registers used:
  8993 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8994 ;; Tracked objects:
  8995 ;;		On entry : 0/0
  8996 ;;		On exit  : 0/0
  8997 ;;		Unchanged: 0/0
  8998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8999 ;;      Params:         0       0       0       0       0       0       0
  9000 ;;      Locals:         3       0       0       0       0       0       0
  9001 ;;      Temps:          2       0       0       0       0       0       0
  9002 ;;      Totals:         5       0       0       0       0       0       0
  9003 ;;Total ram usage:        5 bytes
  9004 ;; Hardware stack levels used:    1
  9005 ;; Hardware stack levels required when called:    1
  9006 ;; This function calls:
  9007 ;;		___lwdiv
  9008 ;;		___wmul
  9009 ;; This function is called by:
  9010 ;;		_k_weissbier
  9011 ;;		_Teclado
  9012 ;;		_amber_lager
  9013 ;;		_Tecl
  9014 ;; This function uses a non-reentrant model
  9015 ;;
  9016                           
  9017                           	psect	text16
  9018  00388E                     __ptext16:
  9019                           	callstack 0
  9020  00388E                     _pwmSet1:
  9021                           	callstack 27
  9022                           
  9023                           ;incstack = 0
  9024                           ;pwmSet1@porcento stored from wreg
  9025  00388E  6E23               	movwf	pwmSet1@porcento^0,c
  9026  003890                     
  9027                           ;pwm.c: 23: void pwmSet1(unsigned char porcento);pwm.c: 24: {;pwm.c: 30:  unsigned int v
      +                          al = ((unsigned int)porcento) *((*(volatile __near unsigned char*)0xFCB)+1);
  9028  003890  0E01               	movlw	1
  9029  003892  24CB               	addwf	203,w,c	;volatile
  9030  003894  6E1A               	movwf	___wmul@multiplier^0,c
  9031  003896  6A1B               	clrf	(___wmul@multiplier+1)^0,c
  9032  003898  0E00               	movlw	0
  9033  00389A  221B               	addwfc	(___wmul@multiplier+1)^0,f,c
  9034  00389C  C023  F01C         	movff	pwmSet1@porcento,___wmul@multiplicand
  9035  0038A0  6A1D               	clrf	(___wmul@multiplicand+1)^0,c
  9036  0038A2  EC7D  F01D         	call	___wmul	;wreg free
  9037  0038A6  C01A  F024         	movff	?___wmul,pwmSet1@val
  9038  0038AA  C01B  F025         	movff	?___wmul+1,pwmSet1@val+1
  9039  0038AE                     
  9040                           ;pwm.c: 31:  val = val / 25;
  9041  0038AE  C024  F01A         	movff	pwmSet1@val,___lwdiv@dividend
  9042  0038B2  C025  F01B         	movff	pwmSet1@val+1,___lwdiv@dividend+1
  9043  0038B6  0E00               	movlw	0
  9044  0038B8  6E1D               	movwf	(___lwdiv@divisor+1)^0,c
  9045  0038BA  0E19               	movlw	25
  9046  0038BC  6E1C               	movwf	___lwdiv@divisor^0,c
  9047  0038BE  ECD7  F01B         	call	___lwdiv	;wreg free
  9048  0038C2  C01A  F024         	movff	?___lwdiv,pwmSet1@val
  9049  0038C6  C01B  F025         	movff	?___lwdiv+1,pwmSet1@val+1
  9050  0038CA                     
  9051                           ;pwm.c: 33:  val &= 0x03ff;
  9052  0038CA  0EFF               	movlw	255
  9053  0038CC  1624               	andwf	pwmSet1@val^0,f,c
  9054  0038CE  0E03               	movlw	3
  9055  0038D0  1625               	andwf	(pwmSet1@val+1)^0,f,c
  9056  0038D2                     
  9057                           ;pwm.c: 35:  (*(volatile __near unsigned char*)0xFBE) = val >> 2;
  9058  0038D2  C024  F021         	movff	pwmSet1@val,??_pwmSet1
  9059  0038D6  C025  F022         	movff	pwmSet1@val+1,??_pwmSet1+1
  9060  0038DA  90D8               	bcf	status,0,c
  9061  0038DC  3222               	rrcf	(??_pwmSet1+1)^0,f,c
  9062  0038DE  3221               	rrcf	??_pwmSet1^0,f,c
  9063  0038E0  90D8               	bcf	status,0,c
  9064  0038E2  3222               	rrcf	(??_pwmSet1+1)^0,f,c
  9065  0038E4  3221               	rrcf	??_pwmSet1^0,f,c
  9066  0038E6  5021               	movf	??_pwmSet1^0,w,c
  9067  0038E8  6EBE               	movwf	190,c	;volatile
  9068  0038EA                     
  9069                           ;pwm.c: 37:  (*(volatile __near unsigned char*)0xFBD) |= (val & 0x0003) << 4;
  9070  0038EA  C024  F021         	movff	pwmSet1@val,??_pwmSet1
  9071  0038EE  0E03               	movlw	3
  9072  0038F0  1621               	andwf	??_pwmSet1^0,f,c
  9073  0038F2  3821               	swapf	??_pwmSet1^0,w,c
  9074  0038F4  0BF0               	andlw	240
  9075  0038F6  12BD               	iorwf	189,f,c	;volatile
  9076  0038F8  0012               	return		;funcret
  9077  0038FA                     __end_of_pwmSet1:
  9078                           	callstack 0
  9079                           
  9080 ;; *************** function ___wmul *****************
  9081 ;; Defined at:
  9082 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul16.c"
  9083 ;; Parameters:    Size  Location     Type
  9084 ;;  multiplier      2    0[COMRAM] unsigned int 
  9085 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9086 ;; Auto vars:     Size  Location     Type
  9087 ;;  product         2    4[COMRAM] unsigned int 
  9088 ;; Return value:  Size  Location     Type
  9089 ;;                  2    0[COMRAM] unsigned int 
  9090 ;; Registers used:
  9091 ;;		wreg, status,2, status,0, prodl, prodh
  9092 ;; Tracked objects:
  9093 ;;		On entry : 0/0
  9094 ;;		On exit  : 0/0
  9095 ;;		Unchanged: 0/0
  9096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9097 ;;      Params:         4       0       0       0       0       0       0
  9098 ;;      Locals:         2       0       0       0       0       0       0
  9099 ;;      Temps:          0       0       0       0       0       0       0
  9100 ;;      Totals:         6       0       0       0       0       0       0
  9101 ;;Total ram usage:        6 bytes
  9102 ;; Hardware stack levels used:    1
  9103 ;; This function calls:
  9104 ;;		Nothing
  9105 ;; This function is called by:
  9106 ;;		_pwmSet1
  9107 ;;		_pwmSet2
  9108 ;; This function uses a non-reentrant model
  9109 ;;
  9110                           
  9111                           	psect	text17
  9112  003AFA                     __ptext17:
  9113                           	callstack 0
  9114  003AFA                     ___wmul:
  9115                           	callstack 27
  9116  003AFA  501A               	movf	___wmul@multiplier^0,w,c
  9117  003AFC  021C               	mulwf	___wmul@multiplicand^0,c
  9118  003AFE  CFF3 F01E          	movff	prodl,___wmul@product
  9119  003B02  CFF4 F01F          	movff	prodh,___wmul@product+1
  9120  003B06  501A               	movf	___wmul@multiplier^0,w,c
  9121  003B08  021D               	mulwf	(___wmul@multiplicand+1)^0,c
  9122  003B0A  50F3               	movf	243,w,c
  9123  003B0C  261F               	addwf	(___wmul@product+1)^0,f,c
  9124  003B0E  501B               	movf	(___wmul@multiplier+1)^0,w,c
  9125  003B10  021C               	mulwf	___wmul@multiplicand^0,c
  9126  003B12  50F3               	movf	243,w,c
  9127  003B14  261F               	addwf	(___wmul@product+1)^0,f,c
  9128  003B16  C01E  F01A         	movff	___wmul@product,?___wmul
  9129  003B1A  C01F  F01B         	movff	___wmul@product+1,?___wmul+1
  9130  003B1E  0012               	return		;funcret
  9131  003B20                     __end_of___wmul:
  9132                           	callstack 0
  9133                           
  9134 ;; *************** function ___lwdiv *****************
  9135 ;; Defined at:
  9136 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\lwdiv.c"
  9137 ;; Parameters:    Size  Location     Type
  9138 ;;  dividend        2    0[COMRAM] unsigned int 
  9139 ;;  divisor         2    2[COMRAM] unsigned int 
  9140 ;; Auto vars:     Size  Location     Type
  9141 ;;  quotient        2    4[COMRAM] unsigned int 
  9142 ;;  counter         1    6[COMRAM] unsigned char 
  9143 ;; Return value:  Size  Location     Type
  9144 ;;                  2    0[COMRAM] unsigned int 
  9145 ;; Registers used:
  9146 ;;		wreg, status,2, status,0
  9147 ;; Tracked objects:
  9148 ;;		On entry : 0/0
  9149 ;;		On exit  : 0/0
  9150 ;;		Unchanged: 0/0
  9151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9152 ;;      Params:         4       0       0       0       0       0       0
  9153 ;;      Locals:         3       0       0       0       0       0       0
  9154 ;;      Temps:          0       0       0       0       0       0       0
  9155 ;;      Totals:         7       0       0       0       0       0       0
  9156 ;;Total ram usage:        7 bytes
  9157 ;; Hardware stack levels used:    1
  9158 ;; This function calls:
  9159 ;;		Nothing
  9160 ;; This function is called by:
  9161 ;;		_pwmSet1
  9162 ;;		_pwmSet2
  9163 ;;		_k_weissbier
  9164 ;;		_amber_lager
  9165 ;; This function uses a non-reentrant model
  9166 ;;
  9167                           
  9168                           	psect	text18
  9169  0037AE                     __ptext18:
  9170                           	callstack 0
  9171  0037AE                     ___lwdiv:
  9172                           	callstack 27
  9173  0037AE  0E00               	movlw	0
  9174  0037B0  6E1F               	movwf	(___lwdiv@quotient+1)^0,c
  9175  0037B2  0E00               	movlw	0
  9176  0037B4  6E1E               	movwf	___lwdiv@quotient^0,c
  9177  0037B6  501C               	movf	___lwdiv@divisor^0,w,c
  9178  0037B8  101D               	iorwf	(___lwdiv@divisor+1)^0,w,c
  9179  0037BA  B4D8               	btfsc	status,2,c
  9180  0037BC  EFE2  F01B         	goto	u1631
  9181  0037C0  EFE4  F01B         	goto	u1630
  9182  0037C4                     u1631:
  9183  0037C4  EF0C  F01C         	goto	l992
  9184  0037C8                     u1630:
  9185  0037C8  0E01               	movlw	1
  9186  0037CA  6E20               	movwf	___lwdiv@counter^0,c
  9187  0037CC  EFEC  F01B         	goto	l2380
  9188  0037D0                     l2378:
  9189  0037D0  90D8               	bcf	status,0,c
  9190  0037D2  361C               	rlcf	___lwdiv@divisor^0,f,c
  9191  0037D4  361D               	rlcf	(___lwdiv@divisor+1)^0,f,c
  9192  0037D6  2A20               	incf	___lwdiv@counter^0,f,c
  9193  0037D8                     l2380:
  9194  0037D8  AE1D               	btfss	(___lwdiv@divisor+1)^0,7,c
  9195  0037DA  EFF1  F01B         	goto	u1641
  9196  0037DE  EFF3  F01B         	goto	u1640
  9197  0037E2                     u1641:
  9198  0037E2  EFE8  F01B         	goto	l2378
  9199  0037E6                     u1640:
  9200  0037E6                     l2382:
  9201  0037E6  90D8               	bcf	status,0,c
  9202  0037E8  361E               	rlcf	___lwdiv@quotient^0,f,c
  9203  0037EA  361F               	rlcf	(___lwdiv@quotient+1)^0,f,c
  9204  0037EC  501C               	movf	___lwdiv@divisor^0,w,c
  9205  0037EE  5C1A               	subwf	___lwdiv@dividend^0,w,c
  9206  0037F0  501D               	movf	(___lwdiv@divisor+1)^0,w,c
  9207  0037F2  581B               	subwfb	(___lwdiv@dividend+1)^0,w,c
  9208  0037F4  A0D8               	btfss	status,0,c
  9209  0037F6  EFFF  F01B         	goto	u1651
  9210  0037FA  EF01  F01C         	goto	u1650
  9211  0037FE                     u1651:
  9212  0037FE  EF06  F01C         	goto	l2390
  9213  003802                     u1650:
  9214  003802  501C               	movf	___lwdiv@divisor^0,w,c
  9215  003804  5E1A               	subwf	___lwdiv@dividend^0,f,c
  9216  003806  501D               	movf	(___lwdiv@divisor+1)^0,w,c
  9217  003808  5A1B               	subwfb	(___lwdiv@dividend+1)^0,f,c
  9218  00380A  801E               	bsf	___lwdiv@quotient^0,0,c
  9219  00380C                     l2390:
  9220  00380C  90D8               	bcf	status,0,c
  9221  00380E  321D               	rrcf	(___lwdiv@divisor+1)^0,f,c
  9222  003810  321C               	rrcf	___lwdiv@divisor^0,f,c
  9223  003812  2E20               	decfsz	___lwdiv@counter^0,f,c
  9224  003814  EFF3  F01B         	goto	l2382
  9225  003818                     l992:
  9226  003818  C01E  F01A         	movff	___lwdiv@quotient,?___lwdiv
  9227  00381C  C01F  F01B         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9228  003820  0012               	return		;funcret
  9229  003822                     __end_of___lwdiv:
  9230                           	callstack 0
  9231                           
  9232 ;; *************** function _lcdData *****************
  9233 ;; Defined at:
  9234 ;;		line 74 in file "lcd.c"
  9235 ;; Parameters:    Size  Location     Type
  9236 ;;  valor           1    wreg     unsigned char 
  9237 ;; Auto vars:     Size  Location     Type
  9238 ;;  valor           1    6[COMRAM] unsigned char 
  9239 ;;  old_D           1    7[COMRAM] unsigned char 
  9240 ;; Return value:  Size  Location     Type
  9241 ;;                  1    wreg      void 
  9242 ;; Registers used:
  9243 ;;		wreg, status,2, status,0, cstack
  9244 ;; Tracked objects:
  9245 ;;		On entry : 0/0
  9246 ;;		On exit  : 0/0
  9247 ;;		Unchanged: 0/0
  9248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9249 ;;      Params:         0       0       0       0       0       0       0
  9250 ;;      Locals:         2       0       0       0       0       0       0
  9251 ;;      Temps:          0       0       0       0       0       0       0
  9252 ;;      Totals:         2       0       0       0       0       0       0
  9253 ;;Total ram usage:        2 bytes
  9254 ;; Hardware stack levels used:    1
  9255 ;; Hardware stack levels required when called:    1
  9256 ;; This function calls:
  9257 ;;		_Delay40us
  9258 ;;		_digitalWrite
  9259 ;; This function is called by:
  9260 ;;		_main
  9261 ;;		_k_weissbier
  9262 ;;		_Teclado
  9263 ;;		_amber_lager
  9264 ;;		_Tecl
  9265 ;; This function uses a non-reentrant model
  9266 ;;
  9267                           
  9268                           	psect	text19
  9269  003A70                     __ptext19:
  9270                           	callstack 0
  9271  003A70                     _lcdData:
  9272                           	callstack 29
  9273                           
  9274                           ;incstack = 0
  9275                           ;lcdData@valor stored from wreg
  9276  003A70  6E20               	movwf	lcdData@valor^0,c
  9277  003A72                     
  9278                           ;lcd.c: 74: void lcdData(unsigned char valor);lcd.c: 75: {;lcd.c: 77:     unsigned char 
      +                          old_D;;lcd.c: 78:     old_D = PORTD;
  9279  003A72  CF83 F021          	movff	3971,lcdData@old_D	;volatile
  9280  003A76                     
  9281                           ;lcd.c: 80:     TRISD = 0x00;
  9282  003A76  0E00               	movlw	0
  9283  003A78  6E95               	movwf	149,c	;volatile
  9284  003A7A                     
  9285                           ;lcd.c: 81:  digitalWrite(PIN_E2, 1);
  9286  003A7A  0E00               	movlw	0
  9287  003A7C  6E1B               	movwf	(digitalWrite@pin+1)^0,c
  9288  003A7E  0E22               	movlw	34
  9289  003A80  6E1A               	movwf	digitalWrite@pin^0,c
  9290  003A82  0E00               	movlw	0
  9291  003A84  6E1D               	movwf	(digitalWrite@value+1)^0,c
  9292  003A86  0E01               	movlw	1
  9293  003A88  6E1C               	movwf	digitalWrite@value^0,c
  9294  003A8A  EC5C  F016         	call	_digitalWrite	;wreg free
  9295  003A8E                     
  9296                           ;lcd.c: 83:  PORTD = valor;
  9297  003A8E  C020  FF83         	movff	lcdData@valor,3971	;volatile
  9298  003A92                     
  9299                           ;lcd.c: 85:     digitalWrite(PIN_E1, 1);
  9300  003A92  0E00               	movlw	0
  9301  003A94  6E1B               	movwf	(digitalWrite@pin+1)^0,c
  9302  003A96  0E21               	movlw	33
  9303  003A98  6E1A               	movwf	digitalWrite@pin^0,c
  9304  003A9A  0E00               	movlw	0
  9305  003A9C  6E1D               	movwf	(digitalWrite@value+1)^0,c
  9306  003A9E  0E01               	movlw	1
  9307  003AA0  6E1C               	movwf	digitalWrite@value^0,c
  9308  003AA2  EC5C  F016         	call	_digitalWrite	;wreg free
  9309  003AA6                     
  9310                           ;lcd.c: 86:  digitalWrite(PIN_E1, 0);
  9311  003AA6  0E00               	movlw	0
  9312  003AA8  6E1B               	movwf	(digitalWrite@pin+1)^0,c
  9313  003AAA  0E21               	movlw	33
  9314  003AAC  6E1A               	movwf	digitalWrite@pin^0,c
  9315  003AAE  0E00               	movlw	0
  9316  003AB0  6E1D               	movwf	(digitalWrite@value+1)^0,c
  9317  003AB2  0E00               	movlw	0
  9318  003AB4  6E1C               	movwf	digitalWrite@value^0,c
  9319  003AB6  EC5C  F016         	call	_digitalWrite	;wreg free
  9320  003ABA                     
  9321                           ;lcd.c: 88:     PORTD= old_D;
  9322  003ABA  C021  FF83         	movff	lcdData@old_D,3971	;volatile
  9323  003ABE                     
  9324                           ;lcd.c: 90:  Delay40us();
  9325  003ABE  EC9E  F01D         	call	_Delay40us	;wreg free
  9326  003AC2  0012               	return		;funcret
  9327  003AC4                     __end_of_lcdData:
  9328                           	callstack 0
  9329                           
  9330 ;; *************** function _lcdCommand *****************
  9331 ;; Defined at:
  9332 ;;		line 48 in file "lcd.c"
  9333 ;; Parameters:    Size  Location     Type
  9334 ;;  cmd             1    wreg     unsigned char 
  9335 ;; Auto vars:     Size  Location     Type
  9336 ;;  cmd             1    7[COMRAM] unsigned char 
  9337 ;;  old_D           1    6[COMRAM] unsigned char 
  9338 ;; Return value:  Size  Location     Type
  9339 ;;                  1    wreg      void 
  9340 ;; Registers used:
  9341 ;;		wreg, status,2, status,0, cstack
  9342 ;; Tracked objects:
  9343 ;;		On entry : 0/0
  9344 ;;		On exit  : 0/0
  9345 ;;		Unchanged: 0/0
  9346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9347 ;;      Params:         0       0       0       0       0       0       0
  9348 ;;      Locals:         2       0       0       0       0       0       0
  9349 ;;      Temps:          0       0       0       0       0       0       0
  9350 ;;      Totals:         2       0       0       0       0       0       0
  9351 ;;Total ram usage:        2 bytes
  9352 ;; Hardware stack levels used:    1
  9353 ;; Hardware stack levels required when called:    2
  9354 ;; This function calls:
  9355 ;;		_Delay2ms
  9356 ;;		_Delay40us
  9357 ;;		_digitalWrite
  9358 ;; This function is called by:
  9359 ;;		_main
  9360 ;;		_lcdInit
  9361 ;;		_k_weissbier
  9362 ;;		_Teclado
  9363 ;;		_amber_lager
  9364 ;;		_Tecl
  9365 ;; This function uses a non-reentrant model
  9366 ;;
  9367                           
  9368                           	psect	text20
  9369  0036B8                     __ptext20:
  9370                           	callstack 0
  9371  0036B8                     _lcdCommand:
  9372                           	callstack 27
  9373                           
  9374                           ;incstack = 0
  9375                           ;lcdCommand@cmd stored from wreg
  9376  0036B8  6E21               	movwf	lcdCommand@cmd^0,c
  9377  0036BA                     
  9378                           ;lcd.c: 48: void lcdCommand(unsigned char cmd);lcd.c: 49: {;lcd.c: 50:     unsigned char
      +                           old_D;;lcd.c: 51:     old_D = PORTD;
  9379  0036BA  CF83 F020          	movff	3971,lcdCommand@old_D	;volatile
  9380  0036BE                     
  9381                           ;lcd.c: 54:     TRISD = 0x00;
  9382  0036BE  0E00               	movlw	0
  9383  0036C0  6E95               	movwf	149,c	;volatile
  9384  0036C2                     
  9385                           ;lcd.c: 56:  digitalWrite(PIN_E2, 0);
  9386  0036C2  0E00               	movlw	0
  9387  0036C4  6E1B               	movwf	(digitalWrite@pin+1)^0,c
  9388  0036C6  0E22               	movlw	34
  9389  0036C8  6E1A               	movwf	digitalWrite@pin^0,c
  9390  0036CA  0E00               	movlw	0
  9391  0036CC  6E1D               	movwf	(digitalWrite@value+1)^0,c
  9392  0036CE  0E00               	movlw	0
  9393  0036D0  6E1C               	movwf	digitalWrite@value^0,c
  9394  0036D2  EC5C  F016         	call	_digitalWrite	;wreg free
  9395  0036D6                     
  9396                           ;lcd.c: 57:  PORTD = cmd;
  9397  0036D6  C021  FF83         	movff	lcdCommand@cmd,3971	;volatile
  9398  0036DA                     
  9399                           ;lcd.c: 59:     digitalWrite(PIN_E1, 1);
  9400  0036DA  0E00               	movlw	0
  9401  0036DC  6E1B               	movwf	(digitalWrite@pin+1)^0,c
  9402  0036DE  0E21               	movlw	33
  9403  0036E0  6E1A               	movwf	digitalWrite@pin^0,c
  9404  0036E2  0E00               	movlw	0
  9405  0036E4  6E1D               	movwf	(digitalWrite@value+1)^0,c
  9406  0036E6  0E01               	movlw	1
  9407  0036E8  6E1C               	movwf	digitalWrite@value^0,c
  9408  0036EA  EC5C  F016         	call	_digitalWrite	;wreg free
  9409  0036EE                     
  9410                           ;lcd.c: 60:  digitalWrite(PIN_E1, 0);
  9411  0036EE  0E00               	movlw	0
  9412  0036F0  6E1B               	movwf	(digitalWrite@pin+1)^0,c
  9413  0036F2  0E21               	movlw	33
  9414  0036F4  6E1A               	movwf	digitalWrite@pin^0,c
  9415  0036F6  0E00               	movlw	0
  9416  0036F8  6E1D               	movwf	(digitalWrite@value+1)^0,c
  9417  0036FA  0E00               	movlw	0
  9418  0036FC  6E1C               	movwf	digitalWrite@value^0,c
  9419  0036FE  EC5C  F016         	call	_digitalWrite	;wreg free
  9420  003702                     
  9421                           ;lcd.c: 63:     PORTD= old_D;
  9422  003702  C020  FF83         	movff	lcdCommand@old_D,3971	;volatile
  9423  003706                     
  9424                           ;lcd.c: 65:     if((cmd == 0x02)||(cmd == 0x01)){
  9425  003706  0E02               	movlw	2
  9426  003708  1821               	xorwf	lcdCommand@cmd^0,w,c
  9427  00370A  B4D8               	btfsc	status,2,c
  9428  00370C  EF8A  F01B         	goto	u1661
  9429  003710  EF8C  F01B         	goto	u1660
  9430  003714                     u1661:
  9431  003714  EF94  F01B         	goto	l2412
  9432  003718                     u1660:
  9433  003718  0421               	decf	lcdCommand@cmd^0,w,c
  9434  00371A  A4D8               	btfss	status,2,c
  9435  00371C  EF92  F01B         	goto	u1671
  9436  003720  EF94  F01B         	goto	u1670
  9437  003724                     u1671:
  9438  003724  EF98  F01B         	goto	l2414
  9439  003728                     u1670:
  9440  003728                     l2412:
  9441                           
  9442                           ;lcd.c: 66:        Delay2ms();
  9443  003728  EC90  F01D         	call	_Delay2ms	;wreg free
  9444                           
  9445                           ;lcd.c: 67:     }else{
  9446  00372C  EF9A  F01B         	goto	l261
  9447  003730                     l2414:
  9448                           
  9449                           ;lcd.c: 68:     Delay40us();
  9450  003730  EC9E  F01D         	call	_Delay40us	;wreg free
  9451  003734                     l261:
  9452  003734  0012               	return		;funcret
  9453  003736                     __end_of_lcdCommand:
  9454                           	callstack 0
  9455                           
  9456 ;; *************** function _digitalWrite *****************
  9457 ;; Defined at:
  9458 ;;		line 14 in file "io.c"
  9459 ;; Parameters:    Size  Location     Type
  9460 ;;  pin             2    0[COMRAM] int 
  9461 ;;  value           2    2[COMRAM] int 
  9462 ;; Auto vars:     Size  Location     Type
  9463 ;;		None
  9464 ;; Return value:  Size  Location     Type
  9465 ;;                  1    wreg      void 
  9466 ;; Registers used:
  9467 ;;		wreg, status,2, status,0
  9468 ;; Tracked objects:
  9469 ;;		On entry : 0/0
  9470 ;;		On exit  : 0/0
  9471 ;;		Unchanged: 0/0
  9472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9473 ;;      Params:         4       0       0       0       0       0       0
  9474 ;;      Locals:         0       0       0       0       0       0       0
  9475 ;;      Temps:          2       0       0       0       0       0       0
  9476 ;;      Totals:         6       0       0       0       0       0       0
  9477 ;;Total ram usage:        6 bytes
  9478 ;; Hardware stack levels used:    1
  9479 ;; This function calls:
  9480 ;;		Nothing
  9481 ;; This function is called by:
  9482 ;;		_lcdCommand
  9483 ;;		_lcdData
  9484 ;;		_ssdUpdate
  9485 ;; This function uses a non-reentrant model
  9486 ;;
  9487                           
  9488                           	psect	text21
  9489  002CB8                     __ptext21:
  9490                           	callstack 0
  9491  002CB8                     _digitalWrite:
  9492                           	callstack 28
  9493  002CB8                     
  9494                           ;io.c: 16:     if(pin <8){
  9495  002CB8  BE1B               	btfsc	(digitalWrite@pin+1)^0,7,c
  9496  002CBA  EF6A  F016         	goto	u1430
  9497  002CBE  501B               	movf	(digitalWrite@pin+1)^0,w,c
  9498  002CC0  E107               	bnz	u1431
  9499  002CC2  0E08               	movlw	8
  9500  002CC4  5C1A               	subwf	digitalWrite@pin^0,w,c
  9501  002CC6  B0D8               	btfsc	status,0,c
  9502  002CC8  EF68  F016         	goto	u1431
  9503  002CCC  EF6A  F016         	goto	u1430
  9504  002CD0                     u1431:
  9505  002CD0  EF94  F016         	goto	l2334
  9506  002CD4                     u1430:
  9507  002CD4                     
  9508                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  9509  002CD4  501C               	movf	digitalWrite@value^0,w,c
  9510  002CD6  101D               	iorwf	(digitalWrite@value+1)^0,w,c
  9511  002CD8  B4D8               	btfsc	status,2,c
  9512  002CDA  EF71  F016         	goto	u1441
  9513  002CDE  EF73  F016         	goto	u1440
  9514  002CE2                     u1441:
  9515  002CE2  EF83  F016         	goto	l2332
  9516  002CE6                     u1440:
  9517  002CE6  C01A  F01E         	movff	digitalWrite@pin,??_digitalWrite
  9518  002CEA  0E01               	movlw	1
  9519  002CEC  6E1F               	movwf	(??_digitalWrite+1)^0,c
  9520  002CEE  2A1E               	incf	??_digitalWrite^0,f,c
  9521  002CF0  EF7C  F016         	goto	u1454
  9522  002CF4                     u1455:
  9523  002CF4  90D8               	bcf	status,0,c
  9524  002CF6  361F               	rlcf	(??_digitalWrite+1)^0,f,c
  9525  002CF8                     u1454:
  9526  002CF8  2E1E               	decfsz	??_digitalWrite^0,f,c
  9527  002CFA  EF7A  F016         	goto	u1455
  9528  002CFE  501F               	movf	(??_digitalWrite+1)^0,w,c
  9529  002D00  1280               	iorwf	128,f,c	;volatile
  9530  002D02  EF82  F017         	goto	l166
  9531  002D06                     l2332:
  9532  002D06  C01A  F01E         	movff	digitalWrite@pin,??_digitalWrite
  9533  002D0A  0E01               	movlw	1
  9534  002D0C  6E1F               	movwf	(??_digitalWrite+1)^0,c
  9535  002D0E  2A1E               	incf	??_digitalWrite^0,f,c
  9536  002D10  EF8C  F016         	goto	u1464
  9537  002D14                     u1465:
  9538  002D14  90D8               	bcf	status,0,c
  9539  002D16  361F               	rlcf	(??_digitalWrite+1)^0,f,c
  9540  002D18                     u1464:
  9541  002D18  2E1E               	decfsz	??_digitalWrite^0,f,c
  9542  002D1A  EF8A  F016         	goto	u1465
  9543  002D1E  501F               	movf	(??_digitalWrite+1)^0,w,c
  9544  002D20  0AFF               	xorlw	255
  9545  002D22  1680               	andwf	128,f,c	;volatile
  9546  002D24  EF82  F017         	goto	l166
  9547  002D28                     l2334:
  9548  002D28  BE1B               	btfsc	(digitalWrite@pin+1)^0,7,c
  9549  002D2A  EFA2  F016         	goto	u1470
  9550  002D2E  501B               	movf	(digitalWrite@pin+1)^0,w,c
  9551  002D30  E107               	bnz	u1471
  9552  002D32  0E10               	movlw	16
  9553  002D34  5C1A               	subwf	digitalWrite@pin^0,w,c
  9554  002D36  B0D8               	btfsc	status,0,c
  9555  002D38  EFA0  F016         	goto	u1471
  9556  002D3C  EFA2  F016         	goto	u1470
  9557  002D40                     u1471:
  9558  002D40  EFD0  F016         	goto	l2342
  9559  002D44                     u1470:
  9560  002D44                     
  9561                           ;io.c: 20:         pin -=8;
  9562  002D44  0EF8               	movlw	248
  9563  002D46  261A               	addwf	digitalWrite@pin^0,f,c
  9564  002D48  0EFF               	movlw	255
  9565  002D4A  221B               	addwfc	(digitalWrite@pin+1)^0,f,c
  9566                           
  9567                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  9568  002D4C  501C               	movf	digitalWrite@value^0,w,c
  9569  002D4E  101D               	iorwf	(digitalWrite@value+1)^0,w,c
  9570  002D50  B4D8               	btfsc	status,2,c
  9571  002D52  EFAD  F016         	goto	u1481
  9572  002D56  EFAF  F016         	goto	u1480
  9573  002D5A                     u1481:
  9574  002D5A  EFBF  F016         	goto	l2340
  9575  002D5E                     u1480:
  9576  002D5E  C01A  F01E         	movff	digitalWrite@pin,??_digitalWrite
  9577  002D62  0E01               	movlw	1
  9578  002D64  6E1F               	movwf	(??_digitalWrite+1)^0,c
  9579  002D66  2A1E               	incf	??_digitalWrite^0,f,c
  9580  002D68  EFB8  F016         	goto	u1494
  9581  002D6C                     u1495:
  9582  002D6C  90D8               	bcf	status,0,c
  9583  002D6E  361F               	rlcf	(??_digitalWrite+1)^0,f,c
  9584  002D70                     u1494:
  9585  002D70  2E1E               	decfsz	??_digitalWrite^0,f,c
  9586  002D72  EFB6  F016         	goto	u1495
  9587  002D76  501F               	movf	(??_digitalWrite+1)^0,w,c
  9588  002D78  1281               	iorwf	129,f,c	;volatile
  9589  002D7A  EF82  F017         	goto	l166
  9590  002D7E                     l2340:
  9591  002D7E  C01A  F01E         	movff	digitalWrite@pin,??_digitalWrite
  9592  002D82  0E01               	movlw	1
  9593  002D84  6E1F               	movwf	(??_digitalWrite+1)^0,c
  9594  002D86  2A1E               	incf	??_digitalWrite^0,f,c
  9595  002D88  EFC8  F016         	goto	u1504
  9596  002D8C                     u1505:
  9597  002D8C  90D8               	bcf	status,0,c
  9598  002D8E  361F               	rlcf	(??_digitalWrite+1)^0,f,c
  9599  002D90                     u1504:
  9600  002D90  2E1E               	decfsz	??_digitalWrite^0,f,c
  9601  002D92  EFC6  F016         	goto	u1505
  9602  002D96  501F               	movf	(??_digitalWrite+1)^0,w,c
  9603  002D98  0AFF               	xorlw	255
  9604  002D9A  1681               	andwf	129,f,c	;volatile
  9605  002D9C  EF82  F017         	goto	l166
  9606  002DA0                     l2342:
  9607  002DA0  BE1B               	btfsc	(digitalWrite@pin+1)^0,7,c
  9608  002DA2  EFDE  F016         	goto	u1510
  9609  002DA6  501B               	movf	(digitalWrite@pin+1)^0,w,c
  9610  002DA8  E107               	bnz	u1511
  9611  002DAA  0E18               	movlw	24
  9612  002DAC  5C1A               	subwf	digitalWrite@pin^0,w,c
  9613  002DAE  B0D8               	btfsc	status,0,c
  9614  002DB0  EFDC  F016         	goto	u1511
  9615  002DB4  EFDE  F016         	goto	u1510
  9616  002DB8                     u1511:
  9617  002DB8  EF0C  F017         	goto	l2350
  9618  002DBC                     u1510:
  9619  002DBC                     
  9620                           ;io.c: 24:         pin -=16;
  9621  002DBC  0EF0               	movlw	240
  9622  002DBE  261A               	addwf	digitalWrite@pin^0,f,c
  9623  002DC0  0EFF               	movlw	255
  9624  002DC2  221B               	addwfc	(digitalWrite@pin+1)^0,f,c
  9625                           
  9626                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  9627  002DC4  501C               	movf	digitalWrite@value^0,w,c
  9628  002DC6  101D               	iorwf	(digitalWrite@value+1)^0,w,c
  9629  002DC8  B4D8               	btfsc	status,2,c
  9630  002DCA  EFE9  F016         	goto	u1521
  9631  002DCE  EFEB  F016         	goto	u1520
  9632  002DD2                     u1521:
  9633  002DD2  EFFB  F016         	goto	l2348
  9634  002DD6                     u1520:
  9635  002DD6  C01A  F01E         	movff	digitalWrite@pin,??_digitalWrite
  9636  002DDA  0E01               	movlw	1
  9637  002DDC  6E1F               	movwf	(??_digitalWrite+1)^0,c
  9638  002DDE  2A1E               	incf	??_digitalWrite^0,f,c
  9639  002DE0  EFF4  F016         	goto	u1534
  9640  002DE4                     u1535:
  9641  002DE4  90D8               	bcf	status,0,c
  9642  002DE6  361F               	rlcf	(??_digitalWrite+1)^0,f,c
  9643  002DE8                     u1534:
  9644  002DE8  2E1E               	decfsz	??_digitalWrite^0,f,c
  9645  002DEA  EFF2  F016         	goto	u1535
  9646  002DEE  501F               	movf	(??_digitalWrite+1)^0,w,c
  9647  002DF0  1282               	iorwf	130,f,c	;volatile
  9648  002DF2  EF82  F017         	goto	l166
  9649  002DF6                     l2348:
  9650  002DF6  C01A  F01E         	movff	digitalWrite@pin,??_digitalWrite
  9651  002DFA  0E01               	movlw	1
  9652  002DFC  6E1F               	movwf	(??_digitalWrite+1)^0,c
  9653  002DFE  2A1E               	incf	??_digitalWrite^0,f,c
  9654  002E00  EF04  F017         	goto	u1544
  9655  002E04                     u1545:
  9656  002E04  90D8               	bcf	status,0,c
  9657  002E06  361F               	rlcf	(??_digitalWrite+1)^0,f,c
  9658  002E08                     u1544:
  9659  002E08  2E1E               	decfsz	??_digitalWrite^0,f,c
  9660  002E0A  EF02  F017         	goto	u1545
  9661  002E0E  501F               	movf	(??_digitalWrite+1)^0,w,c
  9662  002E10  0AFF               	xorlw	255
  9663  002E12  1682               	andwf	130,f,c	;volatile
  9664  002E14  EF82  F017         	goto	l166
  9665  002E18                     l2350:
  9666  002E18  BE1B               	btfsc	(digitalWrite@pin+1)^0,7,c
  9667  002E1A  EF1A  F017         	goto	u1550
  9668  002E1E  501B               	movf	(digitalWrite@pin+1)^0,w,c
  9669  002E20  E107               	bnz	u1551
  9670  002E22  0E20               	movlw	32
  9671  002E24  5C1A               	subwf	digitalWrite@pin^0,w,c
  9672  002E26  B0D8               	btfsc	status,0,c
  9673  002E28  EF18  F017         	goto	u1551
  9674  002E2C  EF1A  F017         	goto	u1550
  9675  002E30                     u1551:
  9676  002E30  EF48  F017         	goto	l2358
  9677  002E34                     u1550:
  9678  002E34                     
  9679                           ;io.c: 28:         pin -=24;
  9680  002E34  0EE8               	movlw	232
  9681  002E36  261A               	addwf	digitalWrite@pin^0,f,c
  9682  002E38  0EFF               	movlw	255
  9683  002E3A  221B               	addwfc	(digitalWrite@pin+1)^0,f,c
  9684                           
  9685                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  9686  002E3C  501C               	movf	digitalWrite@value^0,w,c
  9687  002E3E  101D               	iorwf	(digitalWrite@value+1)^0,w,c
  9688  002E40  B4D8               	btfsc	status,2,c
  9689  002E42  EF25  F017         	goto	u1561
  9690  002E46  EF27  F017         	goto	u1560
  9691  002E4A                     u1561:
  9692  002E4A  EF37  F017         	goto	l2356
  9693  002E4E                     u1560:
  9694  002E4E  C01A  F01E         	movff	digitalWrite@pin,??_digitalWrite
  9695  002E52  0E01               	movlw	1
  9696  002E54  6E1F               	movwf	(??_digitalWrite+1)^0,c
  9697  002E56  2A1E               	incf	??_digitalWrite^0,f,c
  9698  002E58  EF30  F017         	goto	u1574
  9699  002E5C                     u1575:
  9700  002E5C  90D8               	bcf	status,0,c
  9701  002E5E  361F               	rlcf	(??_digitalWrite+1)^0,f,c
  9702  002E60                     u1574:
  9703  002E60  2E1E               	decfsz	??_digitalWrite^0,f,c
  9704  002E62  EF2E  F017         	goto	u1575
  9705  002E66  501F               	movf	(??_digitalWrite+1)^0,w,c
  9706  002E68  1283               	iorwf	131,f,c	;volatile
  9707  002E6A  EF82  F017         	goto	l166
  9708  002E6E                     l2356:
  9709  002E6E  C01A  F01E         	movff	digitalWrite@pin,??_digitalWrite
  9710  002E72  0E01               	movlw	1
  9711  002E74  6E1F               	movwf	(??_digitalWrite+1)^0,c
  9712  002E76  2A1E               	incf	??_digitalWrite^0,f,c
  9713  002E78  EF40  F017         	goto	u1584
  9714  002E7C                     u1585:
  9715  002E7C  90D8               	bcf	status,0,c
  9716  002E7E  361F               	rlcf	(??_digitalWrite+1)^0,f,c
  9717  002E80                     u1584:
  9718  002E80  2E1E               	decfsz	??_digitalWrite^0,f,c
  9719  002E82  EF3E  F017         	goto	u1585
  9720  002E86  501F               	movf	(??_digitalWrite+1)^0,w,c
  9721  002E88  0AFF               	xorlw	255
  9722  002E8A  1683               	andwf	131,f,c	;volatile
  9723  002E8C  EF82  F017         	goto	l166
  9724  002E90                     l2358:
  9725  002E90  BE1B               	btfsc	(digitalWrite@pin+1)^0,7,c
  9726  002E92  EF56  F017         	goto	u1590
  9727  002E96  501B               	movf	(digitalWrite@pin+1)^0,w,c
  9728  002E98  E107               	bnz	u1591
  9729  002E9A  0E28               	movlw	40
  9730  002E9C  5C1A               	subwf	digitalWrite@pin^0,w,c
  9731  002E9E  B0D8               	btfsc	status,0,c
  9732  002EA0  EF54  F017         	goto	u1591
  9733  002EA4  EF56  F017         	goto	u1590
  9734  002EA8                     u1591:
  9735  002EA8  EF82  F017         	goto	l166
  9736  002EAC                     u1590:
  9737  002EAC                     
  9738                           ;io.c: 32:         pin -=32;
  9739  002EAC  0EE0               	movlw	224
  9740  002EAE  261A               	addwf	digitalWrite@pin^0,f,c
  9741  002EB0  0EFF               	movlw	255
  9742  002EB2  221B               	addwfc	(digitalWrite@pin+1)^0,f,c
  9743                           
  9744                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  9745  002EB4  501C               	movf	digitalWrite@value^0,w,c
  9746  002EB6  101D               	iorwf	(digitalWrite@value+1)^0,w,c
  9747  002EB8  B4D8               	btfsc	status,2,c
  9748  002EBA  EF61  F017         	goto	u1601
  9749  002EBE  EF63  F017         	goto	u1600
  9750  002EC2                     u1601:
  9751  002EC2  EF73  F017         	goto	l2364
  9752  002EC6                     u1600:
  9753  002EC6  C01A  F01E         	movff	digitalWrite@pin,??_digitalWrite
  9754  002ECA  0E01               	movlw	1
  9755  002ECC  6E1F               	movwf	(??_digitalWrite+1)^0,c
  9756  002ECE  2A1E               	incf	??_digitalWrite^0,f,c
  9757  002ED0  EF6C  F017         	goto	u1614
  9758  002ED4                     u1615:
  9759  002ED4  90D8               	bcf	status,0,c
  9760  002ED6  361F               	rlcf	(??_digitalWrite+1)^0,f,c
  9761  002ED8                     u1614:
  9762  002ED8  2E1E               	decfsz	??_digitalWrite^0,f,c
  9763  002EDA  EF6A  F017         	goto	u1615
  9764  002EDE  501F               	movf	(??_digitalWrite+1)^0,w,c
  9765  002EE0  1284               	iorwf	132,f,c	;volatile
  9766  002EE2  EF82  F017         	goto	l166
  9767  002EE6                     l2364:
  9768  002EE6  C01A  F01E         	movff	digitalWrite@pin,??_digitalWrite
  9769  002EEA  0E01               	movlw	1
  9770  002EEC  6E1F               	movwf	(??_digitalWrite+1)^0,c
  9771  002EEE  2A1E               	incf	??_digitalWrite^0,f,c
  9772  002EF0  EF7C  F017         	goto	u1624
  9773  002EF4                     u1625:
  9774  002EF4  90D8               	bcf	status,0,c
  9775  002EF6  361F               	rlcf	(??_digitalWrite+1)^0,f,c
  9776  002EF8                     u1624:
  9777  002EF8  2E1E               	decfsz	??_digitalWrite^0,f,c
  9778  002EFA  EF7A  F017         	goto	u1625
  9779  002EFE  501F               	movf	(??_digitalWrite+1)^0,w,c
  9780  002F00  0AFF               	xorlw	255
  9781  002F02  1684               	andwf	132,f,c	;volatile
  9782  002F04                     l166:
  9783  002F04  0012               	return		;funcret
  9784  002F06                     __end_of_digitalWrite:
  9785                           	callstack 0
  9786                           
  9787 ;; *************** function _Delay2ms *****************
  9788 ;; Defined at:
  9789 ;;		line 37 in file "lcd.c"
  9790 ;; Parameters:    Size  Location     Type
  9791 ;;		None
  9792 ;; Auto vars:     Size  Location     Type
  9793 ;;  i               1    1[COMRAM] unsigned char 
  9794 ;; Return value:  Size  Location     Type
  9795 ;;                  1    wreg      void 
  9796 ;; Registers used:
  9797 ;;		wreg, status,2, status,0, cstack
  9798 ;; Tracked objects:
  9799 ;;		On entry : 0/0
  9800 ;;		On exit  : 0/0
  9801 ;;		Unchanged: 0/0
  9802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9803 ;;      Params:         0       0       0       0       0       0       0
  9804 ;;      Locals:         1       0       0       0       0       0       0
  9805 ;;      Temps:          0       0       0       0       0       0       0
  9806 ;;      Totals:         1       0       0       0       0       0       0
  9807 ;;Total ram usage:        1 bytes
  9808 ;; Hardware stack levels used:    1
  9809 ;; Hardware stack levels required when called:    1
  9810 ;; This function calls:
  9811 ;;		_Delay40us
  9812 ;; This function is called by:
  9813 ;;		_lcdCommand
  9814 ;;		_lcdInit
  9815 ;; This function uses a non-reentrant model
  9816 ;;
  9817                           
  9818                           	psect	text22
  9819  003B20                     __ptext22:
  9820                           	callstack 0
  9821  003B20                     _Delay2ms:
  9822                           	callstack 27
  9823  003B20                     
  9824                           ;lcd.c: 39:  unsigned char i;;lcd.c: 40:  for(i=0; i < 50; i++)
  9825  003B20  0E00               	movlw	0
  9826  003B22  6E1B               	movwf	Delay2ms@i^0,c
  9827  003B24                     l1230:
  9828                           
  9829                           ;lcd.c: 41:  {;lcd.c: 42:   Delay40us();
  9830  003B24  EC9E  F01D         	call	_Delay40us	;wreg free
  9831  003B28                     
  9832                           ;lcd.c: 43:  }
  9833  003B28  2A1B               	incf	Delay2ms@i^0,f,c
  9834  003B2A  0E31               	movlw	49
  9835  003B2C  641B               	cpfsgt	Delay2ms@i^0,c
  9836  003B2E  EF9B  F01D         	goto	u221
  9837  003B32  EF9D  F01D         	goto	u220
  9838  003B36                     u221:
  9839  003B36  EF92  F01D         	goto	l1230
  9840  003B3A                     u220:
  9841  003B3A  0012               	return		;funcret
  9842  003B3C                     __end_of_Delay2ms:
  9843                           	callstack 0
  9844                           
  9845 ;; *************** function _Delay40us *****************
  9846 ;; Defined at:
  9847 ;;		line 31 in file "lcd.c"
  9848 ;; Parameters:    Size  Location     Type
  9849 ;;		None
  9850 ;; Auto vars:     Size  Location     Type
  9851 ;;  i               1    0[COMRAM] unsigned char 
  9852 ;; Return value:  Size  Location     Type
  9853 ;;                  1    wreg      void 
  9854 ;; Registers used:
  9855 ;;		wreg, status,2, status,0
  9856 ;; Tracked objects:
  9857 ;;		On entry : 0/0
  9858 ;;		On exit  : 0/0
  9859 ;;		Unchanged: 0/0
  9860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9861 ;;      Params:         0       0       0       0       0       0       0
  9862 ;;      Locals:         1       0       0       0       0       0       0
  9863 ;;      Temps:          0       0       0       0       0       0       0
  9864 ;;      Totals:         1       0       0       0       0       0       0
  9865 ;;Total ram usage:        1 bytes
  9866 ;; Hardware stack levels used:    1
  9867 ;; This function calls:
  9868 ;;		Nothing
  9869 ;; This function is called by:
  9870 ;;		_Delay2ms
  9871 ;;		_lcdCommand
  9872 ;;		_lcdData
  9873 ;; This function uses a non-reentrant model
  9874 ;;
  9875                           
  9876                           	psect	text23
  9877  003B3C                     __ptext23:
  9878                           	callstack 0
  9879  003B3C                     _Delay40us:
  9880                           	callstack 28
  9881  003B3C                     
  9882                           ;lcd.c: 33:  unsigned char i;;lcd.c: 34:  for(i=0; i < 25; i++);
  9883  003B3C  0E00               	movlw	0
  9884  003B3E  6E1A               	movwf	Delay40us@i^0,c
  9885  003B40                     l1180:
  9886  003B40  2A1A               	incf	Delay40us@i^0,f,c
  9887  003B42  0E18               	movlw	24
  9888  003B44  641A               	cpfsgt	Delay40us@i^0,c
  9889  003B46  EFA7  F01D         	goto	u11
  9890  003B4A  EFA9  F01D         	goto	u10
  9891  003B4E                     u11:
  9892  003B4E  EFA0  F01D         	goto	l1180
  9893  003B52                     u10:
  9894  003B52  0012               	return		;funcret
  9895  003B54                     __end_of_Delay40us:
  9896                           	callstack 0
  9897                           
  9898 ;; *************** function _kpRead *****************
  9899 ;; Defined at:
  9900 ;;		line 36 in file "keypad.c"
  9901 ;; Parameters:    Size  Location     Type
  9902 ;;		None
  9903 ;; Auto vars:     Size  Location     Type
  9904 ;;		None
  9905 ;; Return value:  Size  Location     Type
  9906 ;;                  2    0[COMRAM] unsigned int 
  9907 ;; Registers used:
  9908 ;;		None
  9909 ;; Tracked objects:
  9910 ;;		On entry : 0/0
  9911 ;;		On exit  : 0/0
  9912 ;;		Unchanged: 0/0
  9913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9914 ;;      Params:         2       0       0       0       0       0       0
  9915 ;;      Locals:         0       0       0       0       0       0       0
  9916 ;;      Temps:          0       0       0       0       0       0       0
  9917 ;;      Totals:         2       0       0       0       0       0       0
  9918 ;;Total ram usage:        2 bytes
  9919 ;; Hardware stack levels used:    1
  9920 ;; This function calls:
  9921 ;;		Nothing
  9922 ;; This function is called by:
  9923 ;;		_escolha
  9924 ;;		_Teclado
  9925 ;;		_Tecl
  9926 ;; This function uses a non-reentrant model
  9927 ;;
  9928                           
  9929                           	psect	text24
  9930  003B72                     __ptext24:
  9931                           	callstack 0
  9932  003B72                     _kpRead:
  9933                           	callstack 29
  9934  003B72                     
  9935                           ;keypad.c: 37:     return valor;
  9936  003B72  C00D  F01A         	movff	_valor@keypad$F307,?_kpRead
  9937  003B76  C00E  F01B         	movff	_valor@keypad$F307+1,?_kpRead+1
  9938  003B7A  0012               	return		;funcret
  9939  003B7C                     __end_of_kpRead:
  9940                           	callstack 0
  9941                           
  9942 ;; *************** function _atraso_ms *****************
  9943 ;; Defined at:
  9944 ;;		line 26 in file "atraso.c"
  9945 ;; Parameters:    Size  Location     Type
  9946 ;;  valor           2    0[COMRAM] unsigned int 
  9947 ;; Auto vars:     Size  Location     Type
  9948 ;;  i               2    2[COMRAM] unsigned int 
  9949 ;;  k               1    5[COMRAM] volatile unsigned char 
  9950 ;;  j               1    4[COMRAM] volatile unsigned char 
  9951 ;; Return value:  Size  Location     Type
  9952 ;;                  1    wreg      void 
  9953 ;; Registers used:
  9954 ;;		wreg, status,2, status,0
  9955 ;; Tracked objects:
  9956 ;;		On entry : 0/0
  9957 ;;		On exit  : 0/0
  9958 ;;		Unchanged: 0/0
  9959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9960 ;;      Params:         2       0       0       0       0       0       0
  9961 ;;      Locals:         4       0       0       0       0       0       0
  9962 ;;      Temps:          0       0       0       0       0       0       0
  9963 ;;      Totals:         6       0       0       0       0       0       0
  9964 ;;Total ram usage:        6 bytes
  9965 ;; Hardware stack levels used:    1
  9966 ;; This function calls:
  9967 ;;		Nothing
  9968 ;; This function is called by:
  9969 ;;		_main
  9970 ;;		_k_weissbier
  9971 ;;		_Teclado
  9972 ;;		_amber_lager
  9973 ;;		_Tecl
  9974 ;; This function uses a non-reentrant model
  9975 ;;
  9976                           
  9977                           	psect	text25
  9978  00395E                     __ptext25:
  9979                           	callstack 0
  9980  00395E                     _atraso_ms:
  9981                           	callstack 28
  9982  00395E                     
  9983                           ;atraso.c: 27:     unsigned int i;;atraso.c: 28:     volatile unsigned char j, k;;atraso
      +                          .c: 30:     for (i = 0; i < valor; i++) {
  9984  00395E  0E00               	movlw	0
  9985  003960  6E1D               	movwf	(atraso_ms@i+1)^0,c
  9986  003962  0E00               	movlw	0
  9987  003964  6E1C               	movwf	atraso_ms@i^0,c
  9988  003966  EFD5  F01C         	goto	l2456
  9989  00396A                     l2434:
  9990                           
  9991                           ;atraso.c: 32:         for (j = 0; j < 41; j++) {
  9992  00396A  0E00               	movlw	0
  9993  00396C  6E1E               	movwf	atraso_ms@j^0,c	;volatile
  9994  00396E                     l2436:
  9995  00396E  0E28               	movlw	40
  9996  003970  641E               	cpfsgt	atraso_ms@j^0,c	;volatile
  9997  003972  EFBD  F01C         	goto	u1681
  9998  003976  EFBF  F01C         	goto	u1680
  9999  00397A                     u1681:
 10000  00397A  EFC1  F01C         	goto	l2440
 10001  00397E                     u1680:
 10002  00397E  EFD3  F01C         	goto	l2454
 10003  003982                     l2440:
 10004                           
 10005                           ;atraso.c: 33:             for (k = 0; k < 3; k++);
 10006  003982  0E00               	movlw	0
 10007  003984  6E1F               	movwf	atraso_ms@k^0,c	;volatile
 10008  003986                     l2442:
 10009  003986  0E02               	movlw	2
 10010  003988  641F               	cpfsgt	atraso_ms@k^0,c	;volatile
 10011  00398A  EFC9  F01C         	goto	u1691
 10012  00398E  EFCB  F01C         	goto	u1690
 10013  003992                     u1691:
 10014  003992  EFCD  F01C         	goto	l2446
 10015  003996                     u1690:
 10016  003996  EFD0  F01C         	goto	l2450
 10017  00399A                     l2446:
 10018  00399A  2A1F               	incf	atraso_ms@k^0,f,c	;volatile
 10019  00399C  EFC3  F01C         	goto	l2442
 10020  0039A0                     l2450:
 10021                           
 10022                           ;atraso.c: 34:         }
 10023  0039A0  2A1E               	incf	atraso_ms@j^0,f,c	;volatile
 10024  0039A2  EFB7  F01C         	goto	l2436
 10025  0039A6                     l2454:
 10026                           
 10027                           ;atraso.c: 35:     }
 10028  0039A6  4A1C               	infsnz	atraso_ms@i^0,f,c
 10029  0039A8  2A1D               	incf	(atraso_ms@i+1)^0,f,c
 10030  0039AA                     l2456:
 10031  0039AA  501A               	movf	atraso_ms@valor^0,w,c
 10032  0039AC  5C1C               	subwf	atraso_ms@i^0,w,c
 10033  0039AE  501B               	movf	(atraso_ms@valor+1)^0,w,c
 10034  0039B0  581D               	subwfb	(atraso_ms@i+1)^0,w,c
 10035  0039B2  A0D8               	btfss	status,0,c
 10036  0039B4  EFDE  F01C         	goto	u1701
 10037  0039B8  EFE0  F01C         	goto	u1700
 10038  0039BC                     u1701:
 10039  0039BC  EFB5  F01C         	goto	l2434
 10040  0039C0                     u1700:
 10041  0039C0  0012               	return		;funcret
 10042  0039C2                     __end_of_atraso_ms:
 10043                           	callstack 0
 10044                           
 10045                           	psect	rparam
 10046  0000                     
 10047                           	psect	idloc
 10048                           
 10049                           ;Config register IDLOC0 @ 0x200000
 10050                           ;	unspecified, using default values
 10051  200000                     	org	2097152
 10052  200000  FF                 	db	255
 10053                           
 10054                           ;Config register IDLOC1 @ 0x200001
 10055                           ;	unspecified, using default values
 10056  200001                     	org	2097153
 10057  200001  FF                 	db	255
 10058                           
 10059                           ;Config register IDLOC2 @ 0x200002
 10060                           ;	unspecified, using default values
 10061  200002                     	org	2097154
 10062  200002  FF                 	db	255
 10063                           
 10064                           ;Config register IDLOC3 @ 0x200003
 10065                           ;	unspecified, using default values
 10066  200003                     	org	2097155
 10067  200003  FF                 	db	255
 10068                           
 10069                           ;Config register IDLOC4 @ 0x200004
 10070                           ;	unspecified, using default values
 10071  200004                     	org	2097156
 10072  200004  FF                 	db	255
 10073                           
 10074                           ;Config register IDLOC5 @ 0x200005
 10075                           ;	unspecified, using default values
 10076  200005                     	org	2097157
 10077  200005  FF                 	db	255
 10078                           
 10079                           ;Config register IDLOC6 @ 0x200006
 10080                           ;	unspecified, using default values
 10081  200006                     	org	2097158
 10082  200006  FF                 	db	255
 10083                           
 10084                           ;Config register IDLOC7 @ 0x200007
 10085                           ;	unspecified, using default values
 10086  200007                     	org	2097159
 10087  200007  FF                 	db	255
 10088                           
 10089                           	psect	config
 10090                           
 10091                           ; Padding undefined space
 10092  300000                     	org	3145728
 10093  300000  FF                 	db	255
 10094                           
 10095                           ;Config register CONFIG1H @ 0x300001
 10096                           ;	Oscillator Selection bits
 10097                           ;	OSC = HS, HS oscillator
 10098                           ;	Fail-Safe Clock Monitor Enable bit
 10099                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 10100                           ;	Internal/External Oscillator Switchover bit
 10101                           ;	IESO = OFF, Oscillator Switchover mode disabled
 10102  300001                     	org	3145729
 10103  300001  02                 	db	2
 10104                           
 10105                           ;Config register CONFIG2L @ 0x300002
 10106                           ;	Power-up Timer Enable bit
 10107                           ;	PWRT = OFF, PWRT disabled
 10108                           ;	Brown-out Reset Enable bits
 10109                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
 10110                           ;	Brown Out Reset Voltage bits
 10111                           ;	BORV = 0x2E, user specified literal
 10112  300002                     	org	3145730
 10113  300002  71                 	db	369
 10114                           
 10115                           ;Config register CONFIG2H @ 0x300003
 10116                           ;	Watchdog Timer Enable bit
 10117                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10118                           ;	Watchdog Timer Postscale Select bits
 10119                           ;	WDTPS = 1, 1:1
 10120  300003                     	org	3145731
 10121  300003  00                 	db	0
 10122                           
 10123                           ; Padding undefined space
 10124  300004                     	org	3145732
 10125  300004  FF                 	db	255
 10126                           
 10127                           ;Config register CONFIG3H @ 0x300005
 10128                           ;	CCP2 MUX bit
 10129                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 10130                           ;	PORTB A/D Enable bit
 10131                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
 10132                           ;	Low-Power Timer1 Oscillator Enable bit
 10133                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 10134                           ;	MCLR Pin Enable bit
 10135                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 10136  300005                     	org	3145733
 10137  300005  83                 	db	131
 10138                           
 10139                           ;Config register CONFIG4L @ 0x300006
 10140                           ;	Stack Full/Underflow Reset Enable bit
 10141                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
 10142                           ;	Single-Supply ICSP Enable bit
 10143                           ;	LVP = OFF, Single-Supply ICSP disabled
 10144                           ;	Extended Instruction Set Enable bit
 10145                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 10146                           ;	Background Debugger Enable bit
 10147                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
 10148  300006                     	org	3145734
 10149  300006  80                 	db	128
 10150                           
 10151                           ; Padding undefined space
 10152  300007                     	org	3145735
 10153  300007  FF                 	db	255
 10154                           
 10155                           ;Config register CONFIG5L @ 0x300008
 10156                           ;	Code Protection bit
 10157                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 10158                           ;	Code Protection bit
 10159                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 10160                           ;	Code Protection bit
 10161                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 10162                           ;	Code Protection bit
 10163                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 10164  300008                     	org	3145736
 10165  300008  0F                 	db	15
 10166                           
 10167                           ;Config register CONFIG5H @ 0x300009
 10168                           ;	Boot Block Code Protection bit
 10169                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 10170                           ;	Data EEPROM Code Protection bit
 10171                           ;	CPD = OFF, Data EEPROM not code-protected
 10172  300009                     	org	3145737
 10173  300009  C0                 	db	192
 10174                           
 10175                           ;Config register CONFIG6L @ 0x30000A
 10176                           ;	Write Protection bit
 10177                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 10178                           ;	Write Protection bit
 10179                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 10180                           ;	Write Protection bit
 10181                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 10182                           ;	Write Protection bit
 10183                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 10184  30000A                     	org	3145738
 10185  30000A  0F                 	db	15
 10186                           
 10187                           ;Config register CONFIG6H @ 0x30000B
 10188                           ;	Configuration Register Write Protection bit
 10189                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 10190                           ;	Boot Block Write Protection bit
 10191                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
 10192                           ;	Data EEPROM Write Protection bit
 10193                           ;	WRTD = OFF, Data EEPROM not write-protected
 10194  30000B                     	org	3145739
 10195  30000B  E0                 	db	224
 10196                           
 10197                           ;Config register CONFIG7L @ 0x30000C
 10198                           ;	Table Read Protection bit
 10199                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 10200                           ;	Table Read Protection bit
 10201                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 10202                           ;	Table Read Protection bit
 10203                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 10204                           ;	Table Read Protection bit
 10205                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 10206  30000C                     	org	3145740
 10207  30000C  0F                 	db	15
 10208                           
 10209                           ;Config register CONFIG7H @ 0x30000D
 10210                           ;	Boot Block Table Read Protection bit
 10211                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 10212  30000D                     	org	3145741
 10213  30000D  40                 	db	64
 10214                           tosu	equ	0xFFF
 10215                           tosh	equ	0xFFE
 10216                           tosl	equ	0xFFD
 10217                           stkptr	equ	0xFFC
 10218                           pclatu	equ	0xFFB
 10219                           pclath	equ	0xFFA
 10220                           pcl	equ	0xFF9
 10221                           tblptru	equ	0xFF8
 10222                           tblptrh	equ	0xFF7
 10223                           tblptrl	equ	0xFF6
 10224                           tablat	equ	0xFF5
 10225                           prodh	equ	0xFF4
 10226                           prodl	equ	0xFF3
 10227                           indf0	equ	0xFEF
 10228                           postinc0	equ	0xFEE
 10229                           postdec0	equ	0xFED
 10230                           preinc0	equ	0xFEC
 10231                           plusw0	equ	0xFEB
 10232                           fsr0h	equ	0xFEA
 10233                           fsr0l	equ	0xFE9
 10234                           wreg	equ	0xFE8
 10235                           indf1	equ	0xFE7
 10236                           postinc1	equ	0xFE6
 10237                           postdec1	equ	0xFE5
 10238                           preinc1	equ	0xFE4
 10239                           plusw1	equ	0xFE3
 10240                           fsr1h	equ	0xFE2
 10241                           fsr1l	equ	0xFE1
 10242                           bsr	equ	0xFE0
 10243                           indf2	equ	0xFDF
 10244                           postinc2	equ	0xFDE
 10245                           postdec2	equ	0xFDD
 10246                           preinc2	equ	0xFDC
 10247                           plusw2	equ	0xFDB
 10248                           fsr2h	equ	0xFDA
 10249                           fsr2l	equ	0xFD9
 10250                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    18
    Data        6
    BSS         25
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     23      54
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_escolha
    _escolha->_amber_lager
    _escolha->_k_weissbier
    _k_weissbier->_Teclado
    _k_weissbier->_ssdDigit
    _Teclado->_pwmSet1
    _amber_lager->_Tecl
    _amber_lager->_ssdDigit
    _ssdUpdate->_digitalWrite
    _ssdInit->_pinMode
    _ssdDigit->___lwmod
    _pwmSet2->___lwdiv
    _lcdInit->_lcdCommand
    ___lwmod->___lwdiv
    _Tecl->_pwmSet1
    _pwmSet1->___lwdiv
    _lcdData->_digitalWrite
    _lcdCommand->_digitalWrite
    _Delay2ms->_Delay40us

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   86662
                                             21 COMRAM     2     2      0
                          _atraso_ms
                            _escolha
                         _kpDebounce
                             _kpInit
                         _lcdCommand
                            _lcdData
                            _lcdInit
 ---------------------------------------------------------------------------------
 (1) _escolha                                              4     4      0   73333
                                             17 COMRAM     4     4      0
                        _amber_lager
                        _k_weissbier
                             _kpRead
 ---------------------------------------------------------------------------------
 (2) _k_weissbier                                          3     3      0   36655
                                             14 COMRAM     3     3      0
                            _Teclado
                            ___lwdiv
                            ___lwmod
                          _atraso_ms
                         _kpDebounce
                             _kpInit
                         _lcdCommand
                            _lcdData
                            _lcdInit
                            _pwmInit
                            _pwmSet1
                            _pwmSet2
                           _ssdDigit
                            _ssdInit
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (3) _Teclado                                              2     2      0   10911
                                             12 COMRAM     2     2      0
                          _atraso_ms
                             _kpRead
                         _lcdCommand
                            _lcdData
                            _pwmSet1
 ---------------------------------------------------------------------------------
 (2) _amber_lager                                          3     3      0   36655
                                             14 COMRAM     3     3      0
                               _Tecl
                            ___lwdiv
                            ___lwmod
                          _atraso_ms
                         _kpDebounce
                             _kpInit
                         _lcdCommand
                            _lcdData
                            _lcdInit
                            _pwmInit
                            _pwmSet1
                            _pwmSet2
                           _ssdDigit
                            _ssdInit
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (3) _ssdUpdate                                            2     2      0    2572
                                              6 COMRAM     2     2      0
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _ssdInit                                              0     0      0    1656
                            _pinMode
 ---------------------------------------------------------------------------------
 (3) _ssdDigit                                             2     1      1     632
                                             12 COMRAM     2     1      1
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _pwmSet2                                              5     5      0    2236
                                              7 COMRAM     5     5      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _pwmInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0    4467
                           _Delay2ms
                         _lcdCommand
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              6     2      4    1656
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                          10    10      0     210
                                              0 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4    1375
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _Tecl                                                 2     2      0   10911
                                             12 COMRAM     2     2      0
                          _atraso_ms
                             _kpRead
                         _lcdCommand
                            _lcdData
                            _pwmSet1
 ---------------------------------------------------------------------------------
 (3) _pwmSet1                                              5     5      0    2236
                                              7 COMRAM     5     5      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4    1682
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _lcdData                                              2     2      0    2647
                                              6 COMRAM     2     2      0
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           2     2      0    2751
                                              6 COMRAM     2     2      0
                           _Delay2ms
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _digitalWrite                                         6     2      4    2572
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Delay2ms                                             1     1      0      60
                                              1 COMRAM     1     1      0
                          _Delay40us
 ---------------------------------------------------------------------------------
 (3) _Delay40us                                            1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _atraso_ms                                            6     4      2    3254
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _atraso_ms
   _escolha
     _amber_lager
       _Tecl
         _atraso_ms
         _kpRead
         _lcdCommand
           _Delay2ms
             _Delay40us
           _Delay40us
           _digitalWrite
         _lcdData
           _Delay40us
           _digitalWrite
         _pwmSet1
           ___lwdiv
           ___wmul
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _atraso_ms
       _kpDebounce
       _kpInit
       _lcdCommand
         _Delay2ms
           _Delay40us
         _Delay40us
         _digitalWrite
       _lcdData
         _Delay40us
         _digitalWrite
       _lcdInit
         _Delay2ms
           _Delay40us
         _lcdCommand
           _Delay2ms
             _Delay40us
           _Delay40us
           _digitalWrite
         _pinMode
       _pwmInit
       _pwmSet1
         ___lwdiv
         ___wmul
       _pwmSet2
         ___lwdiv
         ___wmul
       _ssdDigit
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
       _ssdInit
         _pinMode
       _ssdUpdate
         _digitalWrite
     _k_weissbier
       _Teclado
         _atraso_ms
         _kpRead
         _lcdCommand
           _Delay2ms
             _Delay40us
           _Delay40us
           _digitalWrite
         _lcdData
           _Delay40us
           _digitalWrite
         _pwmSet1
           ___lwdiv
           ___wmul
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _atraso_ms
       _kpDebounce
       _kpInit
       _lcdCommand
         _Delay2ms
           _Delay40us
         _Delay40us
         _digitalWrite
       _lcdData
         _Delay40us
         _digitalWrite
       _lcdInit
         _Delay2ms
           _Delay40us
         _lcdCommand
           _Delay2ms
             _Delay40us
           _Delay40us
           _digitalWrite
         _pinMode
       _pwmInit
       _pwmSet1
         ___lwdiv
         ___wmul
       _pwmSet2
         ___lwdiv
         ___wmul
       _ssdDigit
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
       _ssdInit
         _pinMode
       _ssdUpdate
         _digitalWrite
     _kpRead
   _kpDebounce
   _kpInit
   _lcdCommand
     _Delay2ms
       _Delay40us
     _Delay40us
     _digitalWrite
   _lcdData
     _Delay40us
     _digitalWrite
   _lcdInit
     _Delay2ms
       _Delay40us
     _lcdCommand
       _Delay2ms
         _Delay40us
       _Delay40us
       _digitalWrite
     _pinMode

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     17      36       1       42.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      36      15        0.0%
DATA                 0      0      36       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Wed Dec 16 09:59:33 2020

                      _i 0033                       l43 35A6                       l60 36B6  
                     l90 39C0                       u10 3B52                       u11 3B4E  
                     _v0 0016                       _v1 0015                       _v2 0014  
                     _v3 0013      ___wmul@multiplicand 001C                      l200 2CB6  
                    l213 3B7A                      l231 3414                      l232 342C  
                    l233 3434                      l306 3A18                      l236 3B70  
                    l316 3584                      l261 3734                      l501 3B1E  
                    l254 3B3A                      l166 2F04                      l270 38F8  
                    l422 3130                      l319 3A6E                      l264 3AC2  
                    l249 3B52                      l273 388C                      l418 2F2C  
                    l267 37AC                      l279 3B66                      l495 3158  
                    l498 32BA                      l992 3818                      l999 3820  
                    u220 3B3A                      u221 3B36                      u600 3402  
                    u601 33FE                      u610 3424                      u530 3332  
                    u514 32DE                      u611 3420                      u531 332E  
                    u515 32DA                      u524 32FE                      u525 32FA  
                    u550 3362                      u551 335E                      u544 3348  
                    u545 3344                      u580 33D8                      u564 3380  
                    u581 33D4                      u565 337A                      u590 33EA  
                    u574 33B0                      u591 33E6                      u575 33AA  
                    _cnt 000F                      _tmp 0001                      _vlr 0031  
                    wreg 000FE8                     l1002 3954                     l1009 395C  
                   l1230 3B24                     l1232 3B28                     l1224 3B20  
                   l3000 1512                     l1234 3B2A                     l3010 15BE  
                   l3002 1536                     l1180 3B40                     l1420 32C4  
                   l3004 155A                     l1182 3B42                     l1174 3B3C  
                   l1414 3B68                     l3006 157E                     l3014 15D2  
                   l3022 1678                     l3110 26DC                     l2400 36D6  
                   l1416 32BC                     l3008 15A2                     l3016 1674  
                   l3120 2958                     l3112 2826                     l2330 2CE6  
                   l2410 3718                     l2402 36DA                     l1450 33C6  
                   l1434 3312                     l1426 32C8                     l1418 32C0  
                   l3122 2960                     l3114 2838                     l2340 2D7E  
                   l2332 2D06                     l2412 3728                     l2404 36EE  
                   l2420 3A7A                     l2500 3890                     l1460 3402  
                   l1452 33C8                     l1444 3336                     l1436 3316  
                   l1428 330A                     l3220 3620                     l3052 3586  
                   l3132 2A38                     l3124 2972                     l3116 294C  
                   l2350 2E18                     l2342 2DA0                     l2334 2D28  
                   l2326 2CB8                     l2414 3730                     l2406 3702  
                   l2430 3ABE                     l2422 3A8E                     l2502 38AE  
                   l1462 3408                     l1454 33D8                     l1446 3362  
                   l1438 3332                     l2510 3736                     l3230 1634  
                   l3222 3668                     l3062 35CC                     l3054 35A2  
                   l3126 2A2C                     l3118 2954                     l2440 3982  
                   l2432 395E                     l2360 2EAC                     l2352 2E34  
                   l2344 2DBC                     l2336 2D44                     l2328 2CD4  
                   l2408 3706                     l2424 3A92                     l2416 3A72  
                   l2504 38CA                     l1464 340C                     l1456 33DA  
                   l1448 3392                     l2520 376E                     l2512 375E  
                   l1480 3B54                     l2600 352E                     l3240 266A  
                   l3232 1642                     l3224 36A8                     l3072 360C  
                   l3064 35EE                     l3216 2A50                     l3136 2A3C  
                   l2450 39A0                     l2442 3986                     l2434 396A  
                   l2362 2EC6                     l2354 2E4E                     l2346 2DD6  
                   l2338 2D5E                     l2426 3AA6                     l2418 3A76  
                   l2506 38D2                     l1466 3424                     l1458 33EA  
                   l2530 3784                     l2522 3772                     l2514 3762  
                   l1482 3B58                     l2602 3542                     l3242 2680  
                   l3234 1650                     l3226 1610                     l3082 3654  
                   l3074 362E                     l3218 35E0                     l3058 35BC  
                   l2436 396E                     l2364 2EE6                     l2356 2E6E  
                   l2348 2DF6                     l2428 3ABA                     l2380 37D8  
                   l2372 37AE                     l2508 38EA                     l2700 392A  
                   l1468 3430                     l2460 2A6A                     l2540 37A0  
                   l2532 378A                     l2524 3776                     l2516 3766  
                   l1484 3B5C                     l3244 268E                     l2620 2F28  
                   l3236 165E                     l3228 1626                     l3092 3694  
                   l3084 3676                     l3068 3604                     l2446 399A  
                   l2454 39A6                     l2358 2E90                     l2390 380C  
                   l2382 37E6                     l2374 37B6                     l2366 3AFA  
                   l2702 3940                     l2470 2AF6                     l2462 2A86  
                   l2542 37A6                     l2534 378E                     l2526 377C  
                   l2518 376A                     l2550 3866                     l2614 3A1A  
                   l3246 26BC                     l2710 1F06                     l2630 2FC8  
                   l2622 2F3E                     l3238 168C                     l3078 3644  
                   l2456 39AA                     l2392 3812                     l2384 37EC  
                   l2376 37C8                     l2368 3B16                     l2704 3948  
                   l2480 2B80                     l2472 2B08                     l2464 2A98  
                   l2536 3794                     l2528 3780                     l2552 387E  
                   l2544 3824                     l2560 39E8                     l2616 3A6A  
                   l3248 355E                     l2608 354A                     l2800 23E0  
                   l2720 1F84                     l2712 1F12                     l2640 300A  
                   l2632 2FD0                     l2624 2F54                     l3088 368C  
                   l2458 3B72                     l2394 36BA                     l2386 3802  
                   l2378 37D0                     l2706 394E                     l2490 2C1C  
                   l2482 2BA4                     l2474 2B2C                     l2466 2AB8  
                   l2538 379A                     l2546 3842                     l2562 39EC  
                   l2554 39C4                     l2570 3436                     l2810 2422  
                   l2802 23E6                     l2730 1FB2                     l2722 1F88  
                   l2714 1F16                     l2650 30AC                     l2642 306A  
                   l2634 2FD8                     l2626 2FBA                     l2618 2F06  
                   l2396 36BE                     l2388 380A                     l2660 3132  
                   l2492 2C42                     l2484 2BCA                     l2476 2B52  
                   l2468 2ADA                     l2548 385E                     l2564 39FE  
                   l2556 39D4                     l2580 3492                     l2572 343A  
                   l2820 24F2                     l2812 24DC                     l2804 23F2  
                   l2740 1FF2                     l2732 1FC4                     l2724 1F9E  
                   l2716 1F20                     l2708 16AC                     l2652 310C  
                   l2644 3072                     l2628 2FC0                     l2636 2FE4  
                   l2900 0E72                     l2398 36C2                     l2670 31EC  
                   l2662 3154                     l2494 2C5E                     l2486 2BE6  
                   l2478 2B6E                     l2566 3A02                     l2558 39D8  
                   l2590 34E6                     l2582 34A4                     l2574 344E  
                   l2830 25B6                     l2822 24FA                     l2814 24E2  
                   l2806 23F8                     l2750 20F2                     l2742 2082  
                   l2734 1FCA                     l2726 1FA6                     l2718 1F52  
                   l2654 3114                     l2638 2FF8                     l2646 3086  
                   l2910 0F80                     l2902 0E88                     l2680 3224  
                   l2672 31F4                     l2664 316A                     l2496 2C70  
                   l2488 2BF8                     l2568 3A14                     l2592 34EE  
                   l2584 34B8                     l2576 3462                     l2840 2630  
                   l2832 25C0                     l2824 2510                     l2808 240C  
                   l2760 2186                     l2752 2108                     l2744 2098  
                   l2736 1FD6                     l2816 24EA                     l2728 1FAA  
                   l2656 311C                     l2648 309A                     l2920 1006  
                   l2912 0F88                     l2904 0F18                     l2690 32AE  
                   l2682 3236                     l2674 31FC                     l2666 3180  
                   l2498 2C94                     l2594 3500                     l2586 34C0  
                   l2578 3476                     l2834 25CC                     l2826 2526  
                   l2818 24EE                     l2770 2220                     l2762 21BC  
                   l2754 211E                     l2746 20AE                     l2738 1FDC  
                   l2658 3124                     l2930 10F8                     l2922 101C  
                   l2914 0F9E                     l2906 0F2E                     l2684 3296  
                   l2676 3204                     l2668 31E6                     l2692 38FA  
                   l2596 3514                     l2588 34D2                     l2836 25F0  
                   l2844 2644                     l2828 25A4                     l2780 2386  
                   l2772 2234                     l2764 21C2                     l2756 215C  
                   l2748 20EA                     l2852 26A8                     l2940 1296  
                   l2932 110C                     l2924 10D6                     l2916 0FB4  
                   l2908 0F44                     l2686 329E                     l2678 3210  
                   l2694 390C                     l2598 351C                     l2838 2614  
                   l2846 26A4                     l2790 23B0                     l2782 238C  
                   l2774 236C                     l2766 21D6                     l2758 2170  
                   l2950 12C0                     l2942 129C                     l2934 1142  
                   l2926 10DC                     l2918 0FF2                     l2870 0614  
                   l2688 32A6                     l2696 3914                     l2792 23BC  
                   l2784 2398                     l2776 2374                     l2768 21EA  
                   l2960 12F0                     l2952 12CC                     l2944 12A8  
                   l2936 1156                     l2928 10E4                     l2880 0DE8  
                   l2872 0D9C                     l2698 391C                     l2794 23C2  
                   l2786 239E                     l2778 237A                     l2962 12F6  
                   l2954 12D2                     l2946 12AE                     l2938 128E  
                   l2970 131A                     l2890 0E40                     l2882 0E1A  
                   l2874 0DA8                     l2796 23CE                     l2788 23AA  
                   l2972 132E                     l2964 1302                     l2956 12DE  
                   l2948 12BA                     l2980 140C                     l2892 0E48  
                   l2884 0E1E                     l2876 0DAC                     l2798 23D4  
                   l2990 1448                     l2982 1410                     l2974 1344  
                   l2966 1308                     l2958 12E4                     l2894 0E5A  
                   l2886 0E34                     l2878 0DB6                     l2992 14C6  
                   l2984 1414                     l2976 13FE                     l2968 1314  
                   l2896 0E60                     l2888 0E3C                     l2994 14D8  
                   l2986 141C                     l2978 1404                     l2898 0E6C  
                   l2996 14E2                     l2988 1432                     l2998 14EE  
           ?_k_weissbier 001A                     u2000 309A                     u2001 3096  
                   u2010 30AC                     u2011 30A8                     u2020 3154  
                   u2100 1F9E                     u2021 3150                     u2101 1F9A  
                   u2030 316A                     u2110 1FC4                     u2031 3166  
                   u2111 1FC0                     u2040 3180                     u2200 21EA  
                   u2120 1FF2                     u2041 317C                     u2201 21E6  
                   u2121 1FEE                     u2050 3224                     u2210 2234  
                   u2130 2098                     u2051 3220                     u2211 2230  
                   u2131 2094                     u2060 3236                     u2220 240C  
                   u2140 20AE                     u2300 0F2E                     u2061 3232  
                   u2221 2408                     u2141 20AA                     u2301 0F2A  
                   u1510 2DBC                     u1430 2CD4                     u2070 390C  
                   u2230 2422                     u2150 2108                     u2310 0F44  
                   u1511 2DB8                     u1431 2CD0                     u2071 3908  
                   u2231 241E                     u2151 2104                     u2311 0F40  
                   u1600 2EC6                     u1520 2DD6                     u1504 2D90  
                   u1440 2CE6                     u2080 392A                     u2240 2510  
                   u2160 211E                     u2400 1344                     u2320 0F9E  
                   u1601 2EC2                     u1521 2DD2                     u1505 2D8C  
                   u1441 2CE2                     u2081 3926                     u2241 250C  
                   u2161 211A                     u2401 1340                     u2321 0F9A  
                   u2090 3940                     u2250 2526                     u2170 2170  
                   u2410 1432                     u2330 0FB4                     u2091 393C  
                   u2251 2522                     u2171 216C                     u2411 142E  
                   u2331 0FB0                     u1700 39C0                     u2260 25B6  
                   u2180 2186                     u2420 1448                     u2340 1006  
                   u2500 2972                     u1701 39BC                     u2261 25B2  
                   u2181 2182                     u2421 1444                     u2341 1002  
                   u2501 296E                     u1614 2ED8                     u1550 2E34  
                   u1534 2DE8                     u1470 2D44                     u1454 2CF8  
                   u1630 37C8                     u1710 2A86                     u2190 21D6  
                   u2430 14D8                     u2350 101C                     u2270 0E34  
                   u1615 2ED4                     u1551 2E30                     u1535 2DE4  
                   u1471 2D40                     u1455 2CF4                     u1631 37C4  
                   u1711 2A82                     u2191 21D2                     u2431 14D4  
                   u2351 1018                     u2271 0E30                     u1624 2EF8  
                   u1560 2E4E                     u1544 2E08                     u1480 2D5E  
                   u1464 2D18                     u1640 37E6                     u1800 2B80  
                   u1720 2A98                     u2360 10F8                     u2280 0E5A  
                   u2440 35A2                     u1625 2EF4                     u1561 2E4A  
                   u1545 2E04                     u1481 2D5A                     u1465 2D14  
                   u1641 37E2                     u1801 2B7C                     u1721 2A94  
                   u2361 10F4                     u2281 0E56                     u2441 359E  
                   u1650 3802                     u2370 110C                     u2290 0E88  
                   u2450 35B8                     u1651 37FE                     u2371 1108  
                   u2291 0E84                     u2451 35B4                     u1660 3718  
                   u2380 1156                     u2460 3600                     u1661 3714  
                   u2381 1152                     u2461 35FC                     u1590 2EAC  
                   u1574 2E60                     u1494 2D70                     u1670 3728  
                   u1830 2BE6                     u1814 2B96                     u1750 2AF6  
                   u1734 2AAA                     u1910 39D4                     u2390 132E  
                   u2470 3640                     u1591 2EA8                     u1575 2E5C  
                   u1495 2D6C                     u1671 3724                     u1831 2BE2  
                   u1815 2B92                     u1751 2AF2                     u1735 2AA6  
                   u1911 39D0                     u2391 132A                     u2471 363C  
                   u1680 397E                     u1584 2E80                     u1904 2CAA  
                   u1840 2BF8                     u1824 2BBA                     u1760 2B08  
                   u1744 2ACA                     u1920 39E8                     u2480 3688  
                   u1681 397A                     u1585 2E7C                     u1905 2CA6  
                   u1841 2BF4                     u1825 2BB6                     u1761 2B04  
                   u1745 2AC6                     u1921 39E4                     u2481 3684  
                   u1690 3996                     u1930 39FE                     u2490 2838  
                   u1691 3992                     u1931 39FA                     u2491 2834  
                   u1940 3A14                     u1941 3A10                     u1870 2C5E  
                   u1854 2C0E                     u1790 2B6E                     u1774 2B1E  
                   u1950 2F28                     u1871 2C5A                     u1855 2C0A  
                   u1791 2B6A                     u1775 2B1A                     u1951 2F24  
                   u1880 2C70                     u1864 2C32                     u1784 2B42  
                   u1960 2F3E                     u1881 2C6C                     u1865 2C2E  
                   u1785 2B3E                     u1961 2F3A                     u1970 2F54  
                   u1971 2F50                     u1980 2FF8                     u1981 2FF4  
                   u1894 2C86                     u1990 300A                     u1895 2C82  
                   u1991 3006                     _Tecl 3132                     _cont 0005  
                   _main 26DC                     _temp 0007                     _time 0003  
                   _slot 0019                     fsr1l 000FE1                     prodh 000FF4  
                   prodl 000FF3                     start 0000             ___param_bank 000000  
        __end_of_Teclado 3132                    ?_Tecl 001A                    ?_main 001A  
                  _T0CON 000FD5          __end_of___lwdiv 3822          __end_of___lwmod 395E  
                  _TMR0H 000FD7                    _TMR0L 000FD6                    _PORTA 000F80  
                  _PORTB 000F81                    _PORTC 000F82                    _PORTD 000F83  
                  _PORTE 000F84                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
        __end_of_lcdData 3AC4                    Tecl@t 0026          __end_of_lcdInit 37AE  
        __end_of_escolha 36B8          __end_of_pinMode 2CB8                    _valor 0035  
   __size_of_amber_lager 1030                    tablat 000FF5          __end_of_ssdInit 3A70  
        __end_of_pwmSet1 38FA          __end_of_pwmInit 3B68          __end_of_pwmSet2 388E  
                  status 000FD8         __end_of_Delay2ms 3B3C     __end_of_digitalWrite 2F06  
        __initialization 3AC4             __end_of_Tecl 32BC             __end_of_main 2A6A  
     __size_of_Delay40us 0018                   ??_Tecl 0026                   ??_main 002F  
          __activetblptr 000002                   _ADCON0 000FC2                   _ADCON2 000FC0  
                 _ADRESH 000FC4                   _ADRESL 000FC3                   _INTCON 000FF2  
              ??_Teclado 0026                   ___wmul 3AFA                ??___lwdiv 001E  
              ??___lwmod 0025                   _kpInit 3B68                   _kpRead 3B72  
                 _limite 0011                   clear_0 3AEA                ??_lcdData 0020  
              ??_lcdInit 0022                ??_escolha 002B         __end_of_ssdDigit 3A1A  
           __pdataCOMRAM 0031                ??_pinMode 001E             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
              ??_ssdInit 0020                ??_pwmSet1 0021                ??_pwmSet2 0021  
              ??_pwmInit 001A        __end_of_Delay40us 3B54               __accesstop 0080  
__end_of__initialization 3AF0     __size_of_k_weissbier 1098            ___rparam_used 000001  
            pinMode@type 001C           __pcstackCOMRAM 001A                ?_Delay2ms 001A  
     __size_of_atraso_ms 0064    __size_of_digitalWrite 024E               _lcdCommand 36B8  
                ?___wmul 001A                  ?_kpInit 001A                  ?_kpRead 001A  
             _kpDebounce 32BC       __size_of_ssdUpdate 0150               ??_Delay2ms 001B  
           _digitalWrite 2CB8                  __Hparam 0000                  _Teclado 2F06  
                __Lparam 0000          amber_lager@slot 002A                ?_ssdDigit 0026  
        kpDebounce@old_D 001F          kpDebounce@tempo 0018          __size_of___wmul 0026  
                ___lwdiv 37AE                  ___lwmod 38FA        __end_of_atraso_ms 39C2  
           __psmallconst 0600          __size_of_kpInit 000A          __size_of_kpRead 000A  
            ssdDigit@val 0027              ssdDigit@pos 0026                  __pcinit 3AC4  
                _lcdData 3A70                  __ramtop 0600                  _lcdInit 3736  
                __ptext0 26DC                  __ptext1 3586                  __ptext2 0614  
                __ptext3 2F06                  __ptext4 16AC                  __ptext5 3436  
                __ptext6 3A1A                  __ptext7 39C2                  __ptext8 3822  
                __ptext9 3B54                  _display 0017                  _escolha 3586  
                _pinMode 2A6A            ??_amber_lager 0028                  _ssdInit 3A1A  
                _pwmSet1 388E                  _pwmSet2 3822                  _pwmInit 3B54  
              Delay2ms@i 001B      kpDebounce@valorNovo 000B     end_of_initialization 3AF0  
          __Lmediumconst 0000        __end_of_ssdUpdate 3586               ??_ssdDigit 0027  
                postdec1 000FE5              ?_lcdCommand 001A                  postinc0 000FEE  
            ?_kpDebounce 001A                _PORTCbits 000F82           _valor@ssd$F432 0601  
              _TRISCbits 000F94      __end_of_amber_lager 26DC                _Delay40us 3B3C  
             atraso_ms@i 001C               atraso_ms@j 001E               atraso_ms@k 001F  
         __end_of___wmul 3B20            __pidataCOMRAM 3B7C           __end_of_kpInit 3B72  
         __end_of_kpRead 3B7C   __end_of_valor@ssd$F432 0613      start_initialization 3AC4  
      __size_of_Delay2ms 001C            ??_k_weissbier 0028      __size_of_lcdCommand 007E  
    __size_of_kpDebounce 017A               ?_Delay40us 001A                 ??___wmul 001E  
               ??_kpInit 001A                 ??_kpRead 001C              __pbssCOMRAM 0001  
             pinMode@pin 001A              _amber_lager 16AC      __end_of_k_weissbier 16AC  
               ?_Teclado 001A         ___lwdiv@dividend 001A        __size_of_ssdDigit 0058  
               ?___lwdiv 001A                 ?___lwmod 0021                 ?_lcdData 001A  
               ?_lcdInit 001A            lcdCommand@cmd 0021                 ?_escolha 001A  
              _atraso_ms 395E              __smallconst 0600                 ?_pinMode 001A  
               ?_ssdInit 001A                 ?_pwmSet1 001A                 ?_pwmInit 001A  
               ?_pwmSet2 001A         ___lwdiv@quotient 001E           atraso_ms@valor 001A  
            ??_Delay40us 001A           ___wmul@product 001E             ??_lcdCommand 0020  
              _ssdUpdate 3436               pwmSet1@val 0024               pwmSet2@val 0024  
           ??_kpDebounce 001A        ___wmul@multiplier 001A               ?_atraso_ms 001A  
        lcdCommand@old_D 0020    kpDebounce@valorAntigo 0009                 _Delay2ms 3B20  
              copy_data0 3AD8              _k_weissbier 0614       __end_of_lcdCommand 3736  
           lcdData@old_D 0021                 Teclado@t 0026             lcdData@valor 0020  
     __end_of_kpDebounce 3436                 __Hrparam 0000                 __Lrparam 0000  
       __size_of_Teclado 022C               ?_ssdUpdate 001A         __size_of___lwdiv 0074  
       __size_of___lwmod 0064          pwmSet1@porcento 0023         __size_of_lcdData 0054  
       __size_of_lcdInit 0078          pwmSet2@porcento 0023         __size_of_escolha 0132  
       __size_of_pinMode 024E          ___lwdiv@divisor 001C          ___lwdiv@counter 0020  
               __ptext10 3736                 __ptext11 2A6A                 __ptext20 36B8  
               __ptext12 3B68                 __ptext21 2CB8                 __ptext13 32BC  
               __ptext22 3B20                 __ptext14 38FA                 __ptext23 3B3C  
               __ptext15 3132                 __ptext24 3B72                 __ptext16 388E  
               __ptext25 395E                 __ptext17 3AFA                 __ptext18 37AE  
               __ptext19 3A70         __size_of_ssdInit 0056         __size_of_pwmSet1 006C  
       __size_of_pwmInit 0014         __size_of_pwmSet2 006C            __size_of_Tecl 018A  
          __size_of_main 038E               Delay40us@i 001A                 _ssdDigit 39C2  
               escolha@t 002D              ??_atraso_ms 001C            ?_digitalWrite 001A  
           ?_amber_lager 001A        digitalWrite@value 001C         ___lwmod@dividend 0021  
            ??_ssdUpdate 0020          ___lwmod@divisor 0023              kpDebounce@i 0023  
            kpDebounce@j 0022              kpDebounce@k 0020          ___lwmod@counter 0025  
         ??_digitalWrite 001E          k_weissbier@slot 002A          digitalWrite@pin 001A  
      _valor@keypad$F307 000D  
